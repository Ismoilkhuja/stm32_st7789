
/home/ismoil/projects/MCU/st7789/st7789_cmsis_black_pill/build/build-st7789_cmsis_black_pill-STM32F401-Debug/Debug_STM32F40_77c9d40222e7ab2c/firmware.9bcf18e4/firmware.elf:     file format elf32-littlearm


Disassembly of section .isr_vector:

08000000 <g_pfnVectors>:
 8000000:	20010000 	andcs	r0, r1, r0
 8000004:	08002385 	stmdaeq	r0, {r0, r2, r7, r8, r9, sp}
 8000008:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 800000c:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 8000010:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 8000014:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 8000018:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
	...
 800002c:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 8000030:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 8000034:	00000000 	andeq	r0, r0, r0
 8000038:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 800003c:	08001c05 	stmdaeq	r0, {r0, r2, sl, fp, ip}
 8000040:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 8000044:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 8000048:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 800004c:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 8000050:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 8000054:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 8000058:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 800005c:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 8000060:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 8000064:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 8000068:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 800006c:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 8000070:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 8000074:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 8000078:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 800007c:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 8000080:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 8000084:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 8000088:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
	...
 800009c:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 80000a0:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 80000a4:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 80000a8:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 80000ac:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 80000b0:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 80000b4:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 80000b8:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 80000bc:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 80000c0:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 80000c4:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 80000c8:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 80000cc:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 80000d0:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 80000d4:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 80000d8:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 80000dc:	00000000 	andeq	r0, r0, r0
 80000e0:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 80000e4:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 80000e8:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
	...
 80000fc:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 8000100:	00000000 	andeq	r0, r0, r0
 8000104:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 8000108:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 800010c:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
	...
 8000120:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 8000124:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 8000128:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 800012c:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 8000130:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
	...
 800014c:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 8000150:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 8000154:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 8000158:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 800015c:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 8000160:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
 8000164:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
	...
 8000184:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}
	...
 8000190:	080023d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp}

Disassembly of section .text:

08000194 <__aeabi_ldivmod>:
 8000194:	b97b      	cbnz	r3, 80001b6 <__aeabi_ldivmod+0x22>
 8000196:	b972      	cbnz	r2, 80001b6 <__aeabi_ldivmod+0x22>
 8000198:	2900      	cmp	r1, #0
 800019a:	bfbe      	ittt	lt
 800019c:	2000      	movlt	r0, #0
 800019e:	f04f 4100 	movlt.w	r1, #2147483648	; 0x80000000
 80001a2:	e006      	blt.n	80001b2 <__aeabi_ldivmod+0x1e>
 80001a4:	bf08      	it	eq
 80001a6:	2800      	cmpeq	r0, #0
 80001a8:	bf1c      	itt	ne
 80001aa:	f06f 4100 	mvnne.w	r1, #2147483648	; 0x80000000
 80001ae:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 80001b2:	f000 b969 	b.w	8000488 <__aeabi_idiv0>
 80001b6:	f1ad 0c08 	sub.w	ip, sp, #8
 80001ba:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80001be:	2900      	cmp	r1, #0
 80001c0:	db09      	blt.n	80001d6 <__aeabi_ldivmod+0x42>
 80001c2:	2b00      	cmp	r3, #0
 80001c4:	db1a      	blt.n	80001fc <__aeabi_ldivmod+0x68>
 80001c6:	f002 f93d 	bl	8002444 <__udivmoddi4>
 80001ca:	f8dd e004 	ldr.w	lr, [sp, #4]
 80001ce:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80001d2:	b004      	add	sp, #16
 80001d4:	4770      	bx	lr
 80001d6:	4240      	negs	r0, r0
 80001d8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001dc:	2b00      	cmp	r3, #0
 80001de:	db1b      	blt.n	8000218 <__aeabi_ldivmod+0x84>
 80001e0:	f002 f930 	bl	8002444 <__udivmoddi4>
 80001e4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80001e8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80001ec:	b004      	add	sp, #16
 80001ee:	4240      	negs	r0, r0
 80001f0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001f4:	4252      	negs	r2, r2
 80001f6:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80001fa:	4770      	bx	lr
 80001fc:	4252      	negs	r2, r2
 80001fe:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000202:	f002 f91f 	bl	8002444 <__udivmoddi4>
 8000206:	f8dd e004 	ldr.w	lr, [sp, #4]
 800020a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800020e:	b004      	add	sp, #16
 8000210:	4240      	negs	r0, r0
 8000212:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000216:	4770      	bx	lr
 8000218:	4252      	negs	r2, r2
 800021a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800021e:	f002 f911 	bl	8002444 <__udivmoddi4>
 8000222:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000226:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800022a:	b004      	add	sp, #16
 800022c:	4252      	negs	r2, r2
 800022e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000232:	4770      	bx	lr

08000234 <__aeabi_dmul>:
 8000234:	b570      	push	{r4, r5, r6, lr}
 8000236:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800023a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800023e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000242:	bf1d      	ittte	ne
 8000244:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000248:	ea94 0f0c 	teqne	r4, ip
 800024c:	ea95 0f0c 	teqne	r5, ip
 8000250:	f000 f8de 	bleq	8000410 <__aeabi_dmul+0x1dc>
 8000254:	442c      	add	r4, r5
 8000256:	ea81 0603 	eor.w	r6, r1, r3
 800025a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800025e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000262:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000266:	bf18      	it	ne
 8000268:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 800026c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000270:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000274:	d038      	beq.n	80002e8 <__aeabi_dmul+0xb4>
 8000276:	fba0 ce02 	umull	ip, lr, r0, r2
 800027a:	f04f 0500 	mov.w	r5, #0
 800027e:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000282:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 8000286:	fbe0 e503 	umlal	lr, r5, r0, r3
 800028a:	f04f 0600 	mov.w	r6, #0
 800028e:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000292:	f09c 0f00 	teq	ip, #0
 8000296:	bf18      	it	ne
 8000298:	f04e 0e01 	orrne.w	lr, lr, #1
 800029c:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80002a0:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80002a4:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80002a8:	d204      	bcs.n	80002b4 <__aeabi_dmul+0x80>
 80002aa:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80002ae:	416d      	adcs	r5, r5
 80002b0:	eb46 0606 	adc.w	r6, r6, r6
 80002b4:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80002b8:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80002bc:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80002c0:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80002c4:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80002c8:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80002cc:	bf88      	it	hi
 80002ce:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80002d2:	d81e      	bhi.n	8000312 <__aeabi_dmul+0xde>
 80002d4:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80002d8:	bf08      	it	eq
 80002da:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80002de:	f150 0000 	adcs.w	r0, r0, #0
 80002e2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80002e6:	bd70      	pop	{r4, r5, r6, pc}
 80002e8:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80002ec:	ea46 0101 	orr.w	r1, r6, r1
 80002f0:	ea40 0002 	orr.w	r0, r0, r2
 80002f4:	ea81 0103 	eor.w	r1, r1, r3
 80002f8:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80002fc:	bfc2      	ittt	gt
 80002fe:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000302:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000306:	bd70      	popgt	{r4, r5, r6, pc}
 8000308:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800030c:	f04f 0e00 	mov.w	lr, #0
 8000310:	3c01      	subs	r4, #1
 8000312:	f300 80ab 	bgt.w	800046c <__aeabi_dmul+0x238>
 8000316:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800031a:	bfde      	ittt	le
 800031c:	2000      	movle	r0, #0
 800031e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000322:	bd70      	pople	{r4, r5, r6, pc}
 8000324:	f1c4 0400 	rsb	r4, r4, #0
 8000328:	3c20      	subs	r4, #32
 800032a:	da35      	bge.n	8000398 <__aeabi_dmul+0x164>
 800032c:	340c      	adds	r4, #12
 800032e:	dc1b      	bgt.n	8000368 <__aeabi_dmul+0x134>
 8000330:	f104 0414 	add.w	r4, r4, #20
 8000334:	f1c4 0520 	rsb	r5, r4, #32
 8000338:	fa00 f305 	lsl.w	r3, r0, r5
 800033c:	fa20 f004 	lsr.w	r0, r0, r4
 8000340:	fa01 f205 	lsl.w	r2, r1, r5
 8000344:	ea40 0002 	orr.w	r0, r0, r2
 8000348:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 800034c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000350:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000354:	fa21 f604 	lsr.w	r6, r1, r4
 8000358:	eb42 0106 	adc.w	r1, r2, r6
 800035c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000360:	bf08      	it	eq
 8000362:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000366:	bd70      	pop	{r4, r5, r6, pc}
 8000368:	f1c4 040c 	rsb	r4, r4, #12
 800036c:	f1c4 0520 	rsb	r5, r4, #32
 8000370:	fa00 f304 	lsl.w	r3, r0, r4
 8000374:	fa20 f005 	lsr.w	r0, r0, r5
 8000378:	fa01 f204 	lsl.w	r2, r1, r4
 800037c:	ea40 0002 	orr.w	r0, r0, r2
 8000380:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000384:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000388:	f141 0100 	adc.w	r1, r1, #0
 800038c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000390:	bf08      	it	eq
 8000392:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000396:	bd70      	pop	{r4, r5, r6, pc}
 8000398:	f1c4 0520 	rsb	r5, r4, #32
 800039c:	fa00 f205 	lsl.w	r2, r0, r5
 80003a0:	ea4e 0e02 	orr.w	lr, lr, r2
 80003a4:	fa20 f304 	lsr.w	r3, r0, r4
 80003a8:	fa01 f205 	lsl.w	r2, r1, r5
 80003ac:	ea43 0302 	orr.w	r3, r3, r2
 80003b0:	fa21 f004 	lsr.w	r0, r1, r4
 80003b4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80003b8:	fa21 f204 	lsr.w	r2, r1, r4
 80003bc:	ea20 0002 	bic.w	r0, r0, r2
 80003c0:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80003c4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80003c8:	bf08      	it	eq
 80003ca:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80003ce:	bd70      	pop	{r4, r5, r6, pc}
 80003d0:	f094 0f00 	teq	r4, #0
 80003d4:	d10f      	bne.n	80003f6 <__aeabi_dmul+0x1c2>
 80003d6:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80003da:	0040      	lsls	r0, r0, #1
 80003dc:	eb41 0101 	adc.w	r1, r1, r1
 80003e0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80003e4:	bf08      	it	eq
 80003e6:	3c01      	subeq	r4, #1
 80003e8:	d0f7      	beq.n	80003da <__aeabi_dmul+0x1a6>
 80003ea:	ea41 0106 	orr.w	r1, r1, r6
 80003ee:	f095 0f00 	teq	r5, #0
 80003f2:	bf18      	it	ne
 80003f4:	4770      	bxne	lr
 80003f6:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80003fa:	0052      	lsls	r2, r2, #1
 80003fc:	eb43 0303 	adc.w	r3, r3, r3
 8000400:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000404:	bf08      	it	eq
 8000406:	3d01      	subeq	r5, #1
 8000408:	d0f7      	beq.n	80003fa <__aeabi_dmul+0x1c6>
 800040a:	ea43 0306 	orr.w	r3, r3, r6
 800040e:	4770      	bx	lr
 8000410:	ea94 0f0c 	teq	r4, ip
 8000414:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000418:	bf18      	it	ne
 800041a:	ea95 0f0c 	teqne	r5, ip
 800041e:	d00c      	beq.n	800043a <__aeabi_dmul+0x206>
 8000420:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000424:	bf18      	it	ne
 8000426:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800042a:	d1d1      	bne.n	80003d0 <__aeabi_dmul+0x19c>
 800042c:	ea81 0103 	eor.w	r1, r1, r3
 8000430:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000434:	f04f 0000 	mov.w	r0, #0
 8000438:	bd70      	pop	{r4, r5, r6, pc}
 800043a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800043e:	bf06      	itte	eq
 8000440:	4610      	moveq	r0, r2
 8000442:	4619      	moveq	r1, r3
 8000444:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000448:	d019      	beq.n	800047e <__aeabi_dmul+0x24a>
 800044a:	ea94 0f0c 	teq	r4, ip
 800044e:	d102      	bne.n	8000456 <__aeabi_dmul+0x222>
 8000450:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000454:	d113      	bne.n	800047e <__aeabi_dmul+0x24a>
 8000456:	ea95 0f0c 	teq	r5, ip
 800045a:	d105      	bne.n	8000468 <__aeabi_dmul+0x234>
 800045c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000460:	bf1c      	itt	ne
 8000462:	4610      	movne	r0, r2
 8000464:	4619      	movne	r1, r3
 8000466:	d10a      	bne.n	800047e <__aeabi_dmul+0x24a>
 8000468:	ea81 0103 	eor.w	r1, r1, r3
 800046c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000470:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000474:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000478:	f04f 0000 	mov.w	r0, #0
 800047c:	bd70      	pop	{r4, r5, r6, pc}
 800047e:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000482:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 8000486:	bd70      	pop	{r4, r5, r6, pc}

08000488 <__aeabi_idiv0>:
 8000488:	4770      	bx	lr
 800048a:	bf00      	nop

0800048c <__aeabi_drsub>:
 800048c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000490:	e002      	b.n	8000498 <__adddf3>
 8000492:	bf00      	nop

08000494 <__aeabi_dsub>:
 8000494:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08000498 <__adddf3>:
 8000498:	b530      	push	{r4, r5, lr}
 800049a:	ea4f 0441 	mov.w	r4, r1, lsl #1
 800049e:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80004a2:	ea94 0f05 	teq	r4, r5
 80004a6:	bf08      	it	eq
 80004a8:	ea90 0f02 	teqeq	r0, r2
 80004ac:	bf1f      	itttt	ne
 80004ae:	ea54 0c00 	orrsne.w	ip, r4, r0
 80004b2:	ea55 0c02 	orrsne.w	ip, r5, r2
 80004b6:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80004ba:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004be:	f000 80e2 	beq.w	8000686 <__adddf3+0x1ee>
 80004c2:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80004c6:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80004ca:	bfb8      	it	lt
 80004cc:	426d      	neglt	r5, r5
 80004ce:	dd0c      	ble.n	80004ea <__adddf3+0x52>
 80004d0:	442c      	add	r4, r5
 80004d2:	ea80 0202 	eor.w	r2, r0, r2
 80004d6:	ea81 0303 	eor.w	r3, r1, r3
 80004da:	ea82 0000 	eor.w	r0, r2, r0
 80004de:	ea83 0101 	eor.w	r1, r3, r1
 80004e2:	ea80 0202 	eor.w	r2, r0, r2
 80004e6:	ea81 0303 	eor.w	r3, r1, r3
 80004ea:	2d36      	cmp	r5, #54	; 0x36
 80004ec:	bf88      	it	hi
 80004ee:	bd30      	pophi	{r4, r5, pc}
 80004f0:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80004f4:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80004f8:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80004fc:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000500:	d002      	beq.n	8000508 <__adddf3+0x70>
 8000502:	4240      	negs	r0, r0
 8000504:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000508:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 800050c:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000510:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000514:	d002      	beq.n	800051c <__adddf3+0x84>
 8000516:	4252      	negs	r2, r2
 8000518:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800051c:	ea94 0f05 	teq	r4, r5
 8000520:	f000 80a7 	beq.w	8000672 <__adddf3+0x1da>
 8000524:	f1a4 0401 	sub.w	r4, r4, #1
 8000528:	f1d5 0e20 	rsbs	lr, r5, #32
 800052c:	db0d      	blt.n	800054a <__adddf3+0xb2>
 800052e:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000532:	fa22 f205 	lsr.w	r2, r2, r5
 8000536:	1880      	adds	r0, r0, r2
 8000538:	f141 0100 	adc.w	r1, r1, #0
 800053c:	fa03 f20e 	lsl.w	r2, r3, lr
 8000540:	1880      	adds	r0, r0, r2
 8000542:	fa43 f305 	asr.w	r3, r3, r5
 8000546:	4159      	adcs	r1, r3
 8000548:	e00e      	b.n	8000568 <__adddf3+0xd0>
 800054a:	f1a5 0520 	sub.w	r5, r5, #32
 800054e:	f10e 0e20 	add.w	lr, lr, #32
 8000552:	2a01      	cmp	r2, #1
 8000554:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000558:	bf28      	it	cs
 800055a:	f04c 0c02 	orrcs.w	ip, ip, #2
 800055e:	fa43 f305 	asr.w	r3, r3, r5
 8000562:	18c0      	adds	r0, r0, r3
 8000564:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000568:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800056c:	d507      	bpl.n	800057e <__adddf3+0xe6>
 800056e:	f04f 0e00 	mov.w	lr, #0
 8000572:	f1dc 0c00 	rsbs	ip, ip, #0
 8000576:	eb7e 0000 	sbcs.w	r0, lr, r0
 800057a:	eb6e 0101 	sbc.w	r1, lr, r1
 800057e:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000582:	d31b      	bcc.n	80005bc <__adddf3+0x124>
 8000584:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8000588:	d30c      	bcc.n	80005a4 <__adddf3+0x10c>
 800058a:	0849      	lsrs	r1, r1, #1
 800058c:	ea5f 0030 	movs.w	r0, r0, rrx
 8000590:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000594:	f104 0401 	add.w	r4, r4, #1
 8000598:	ea4f 5244 	mov.w	r2, r4, lsl #21
 800059c:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80005a0:	f080 809a 	bcs.w	80006d8 <__adddf3+0x240>
 80005a4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80005a8:	bf08      	it	eq
 80005aa:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80005ae:	f150 0000 	adcs.w	r0, r0, #0
 80005b2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80005b6:	ea41 0105 	orr.w	r1, r1, r5
 80005ba:	bd30      	pop	{r4, r5, pc}
 80005bc:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80005c0:	4140      	adcs	r0, r0
 80005c2:	eb41 0101 	adc.w	r1, r1, r1
 80005c6:	3c01      	subs	r4, #1
 80005c8:	bf28      	it	cs
 80005ca:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80005ce:	d2e9      	bcs.n	80005a4 <__adddf3+0x10c>
 80005d0:	f091 0f00 	teq	r1, #0
 80005d4:	bf04      	itt	eq
 80005d6:	4601      	moveq	r1, r0
 80005d8:	2000      	moveq	r0, #0
 80005da:	fab1 f381 	clz	r3, r1
 80005de:	bf08      	it	eq
 80005e0:	3320      	addeq	r3, #32
 80005e2:	f1a3 030b 	sub.w	r3, r3, #11
 80005e6:	f1b3 0220 	subs.w	r2, r3, #32
 80005ea:	da0c      	bge.n	8000606 <__adddf3+0x16e>
 80005ec:	320c      	adds	r2, #12
 80005ee:	dd08      	ble.n	8000602 <__adddf3+0x16a>
 80005f0:	f102 0c14 	add.w	ip, r2, #20
 80005f4:	f1c2 020c 	rsb	r2, r2, #12
 80005f8:	fa01 f00c 	lsl.w	r0, r1, ip
 80005fc:	fa21 f102 	lsr.w	r1, r1, r2
 8000600:	e00c      	b.n	800061c <__adddf3+0x184>
 8000602:	f102 0214 	add.w	r2, r2, #20
 8000606:	bfd8      	it	le
 8000608:	f1c2 0c20 	rsble	ip, r2, #32
 800060c:	fa01 f102 	lsl.w	r1, r1, r2
 8000610:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000614:	bfdc      	itt	le
 8000616:	ea41 010c 	orrle.w	r1, r1, ip
 800061a:	4090      	lslle	r0, r2
 800061c:	1ae4      	subs	r4, r4, r3
 800061e:	bfa2      	ittt	ge
 8000620:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000624:	4329      	orrge	r1, r5
 8000626:	bd30      	popge	{r4, r5, pc}
 8000628:	ea6f 0404 	mvn.w	r4, r4
 800062c:	3c1f      	subs	r4, #31
 800062e:	da1c      	bge.n	800066a <__adddf3+0x1d2>
 8000630:	340c      	adds	r4, #12
 8000632:	dc0e      	bgt.n	8000652 <__adddf3+0x1ba>
 8000634:	f104 0414 	add.w	r4, r4, #20
 8000638:	f1c4 0220 	rsb	r2, r4, #32
 800063c:	fa20 f004 	lsr.w	r0, r0, r4
 8000640:	fa01 f302 	lsl.w	r3, r1, r2
 8000644:	ea40 0003 	orr.w	r0, r0, r3
 8000648:	fa21 f304 	lsr.w	r3, r1, r4
 800064c:	ea45 0103 	orr.w	r1, r5, r3
 8000650:	bd30      	pop	{r4, r5, pc}
 8000652:	f1c4 040c 	rsb	r4, r4, #12
 8000656:	f1c4 0220 	rsb	r2, r4, #32
 800065a:	fa20 f002 	lsr.w	r0, r0, r2
 800065e:	fa01 f304 	lsl.w	r3, r1, r4
 8000662:	ea40 0003 	orr.w	r0, r0, r3
 8000666:	4629      	mov	r1, r5
 8000668:	bd30      	pop	{r4, r5, pc}
 800066a:	fa21 f004 	lsr.w	r0, r1, r4
 800066e:	4629      	mov	r1, r5
 8000670:	bd30      	pop	{r4, r5, pc}
 8000672:	f094 0f00 	teq	r4, #0
 8000676:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800067a:	bf06      	itte	eq
 800067c:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000680:	3401      	addeq	r4, #1
 8000682:	3d01      	subne	r5, #1
 8000684:	e74e      	b.n	8000524 <__adddf3+0x8c>
 8000686:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800068a:	bf18      	it	ne
 800068c:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000690:	d029      	beq.n	80006e6 <__adddf3+0x24e>
 8000692:	ea94 0f05 	teq	r4, r5
 8000696:	bf08      	it	eq
 8000698:	ea90 0f02 	teqeq	r0, r2
 800069c:	d005      	beq.n	80006aa <__adddf3+0x212>
 800069e:	ea54 0c00 	orrs.w	ip, r4, r0
 80006a2:	bf04      	itt	eq
 80006a4:	4619      	moveq	r1, r3
 80006a6:	4610      	moveq	r0, r2
 80006a8:	bd30      	pop	{r4, r5, pc}
 80006aa:	ea91 0f03 	teq	r1, r3
 80006ae:	bf1e      	ittt	ne
 80006b0:	2100      	movne	r1, #0
 80006b2:	2000      	movne	r0, #0
 80006b4:	bd30      	popne	{r4, r5, pc}
 80006b6:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80006ba:	d105      	bne.n	80006c8 <__adddf3+0x230>
 80006bc:	0040      	lsls	r0, r0, #1
 80006be:	4149      	adcs	r1, r1
 80006c0:	bf28      	it	cs
 80006c2:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80006c6:	bd30      	pop	{r4, r5, pc}
 80006c8:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80006cc:	bf3c      	itt	cc
 80006ce:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80006d2:	bd30      	popcc	{r4, r5, pc}
 80006d4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80006d8:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80006dc:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80006e0:	f04f 0000 	mov.w	r0, #0
 80006e4:	bd30      	pop	{r4, r5, pc}
 80006e6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80006ea:	bf1a      	itte	ne
 80006ec:	4619      	movne	r1, r3
 80006ee:	4610      	movne	r0, r2
 80006f0:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80006f4:	bf1c      	itt	ne
 80006f6:	460b      	movne	r3, r1
 80006f8:	4602      	movne	r2, r0
 80006fa:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80006fe:	bf06      	itte	eq
 8000700:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000704:	ea91 0f03 	teqeq	r1, r3
 8000708:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 800070c:	bd30      	pop	{r4, r5, pc}
 800070e:	bf00      	nop

08000710 <__aeabi_ui2d>:
 8000710:	f090 0f00 	teq	r0, #0
 8000714:	bf04      	itt	eq
 8000716:	2100      	moveq	r1, #0
 8000718:	4770      	bxeq	lr
 800071a:	b530      	push	{r4, r5, lr}
 800071c:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000720:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000724:	f04f 0500 	mov.w	r5, #0
 8000728:	f04f 0100 	mov.w	r1, #0
 800072c:	e750      	b.n	80005d0 <__adddf3+0x138>
 800072e:	bf00      	nop

08000730 <__aeabi_i2d>:
 8000730:	f090 0f00 	teq	r0, #0
 8000734:	bf04      	itt	eq
 8000736:	2100      	moveq	r1, #0
 8000738:	4770      	bxeq	lr
 800073a:	b530      	push	{r4, r5, lr}
 800073c:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000740:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000744:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000748:	bf48      	it	mi
 800074a:	4240      	negmi	r0, r0
 800074c:	f04f 0100 	mov.w	r1, #0
 8000750:	e73e      	b.n	80005d0 <__adddf3+0x138>
 8000752:	bf00      	nop

08000754 <__aeabi_f2d>:
 8000754:	0042      	lsls	r2, r0, #1
 8000756:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800075a:	ea4f 0131 	mov.w	r1, r1, rrx
 800075e:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000762:	bf1f      	itttt	ne
 8000764:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8000768:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 800076c:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000770:	4770      	bxne	lr
 8000772:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 8000776:	bf08      	it	eq
 8000778:	4770      	bxeq	lr
 800077a:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 800077e:	bf04      	itt	eq
 8000780:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000784:	4770      	bxeq	lr
 8000786:	b530      	push	{r4, r5, lr}
 8000788:	f44f 7460 	mov.w	r4, #896	; 0x380
 800078c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000790:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000794:	e71c      	b.n	80005d0 <__adddf3+0x138>
 8000796:	bf00      	nop

08000798 <__aeabi_ul2d>:
 8000798:	ea50 0201 	orrs.w	r2, r0, r1
 800079c:	bf08      	it	eq
 800079e:	4770      	bxeq	lr
 80007a0:	b530      	push	{r4, r5, lr}
 80007a2:	f04f 0500 	mov.w	r5, #0
 80007a6:	e00a      	b.n	80007be <__aeabi_l2d+0x16>

080007a8 <__aeabi_l2d>:
 80007a8:	ea50 0201 	orrs.w	r2, r0, r1
 80007ac:	bf08      	it	eq
 80007ae:	4770      	bxeq	lr
 80007b0:	b530      	push	{r4, r5, lr}
 80007b2:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80007b6:	d502      	bpl.n	80007be <__aeabi_l2d+0x16>
 80007b8:	4240      	negs	r0, r0
 80007ba:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80007be:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80007c2:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80007c6:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80007ca:	f43f aed8 	beq.w	800057e <__adddf3+0xe6>
 80007ce:	f04f 0203 	mov.w	r2, #3
 80007d2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80007d6:	bf18      	it	ne
 80007d8:	3203      	addne	r2, #3
 80007da:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80007de:	bf18      	it	ne
 80007e0:	3203      	addne	r2, #3
 80007e2:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80007e6:	f1c2 0320 	rsb	r3, r2, #32
 80007ea:	fa00 fc03 	lsl.w	ip, r0, r3
 80007ee:	fa20 f002 	lsr.w	r0, r0, r2
 80007f2:	fa01 fe03 	lsl.w	lr, r1, r3
 80007f6:	ea40 000e 	orr.w	r0, r0, lr
 80007fa:	fa21 f102 	lsr.w	r1, r1, r2
 80007fe:	4414      	add	r4, r2
 8000800:	e6bd      	b.n	800057e <__adddf3+0xe6>
 8000802:	bf00      	nop

08000804 <__aeabi_d2uiz>:
 8000804:	004a      	lsls	r2, r1, #1
 8000806:	d211      	bcs.n	800082c <__aeabi_d2uiz+0x28>
 8000808:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 800080c:	d211      	bcs.n	8000832 <__aeabi_d2uiz+0x2e>
 800080e:	d50d      	bpl.n	800082c <__aeabi_d2uiz+0x28>
 8000810:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000814:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000818:	d40e      	bmi.n	8000838 <__aeabi_d2uiz+0x34>
 800081a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 800081e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000822:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000826:	fa23 f002 	lsr.w	r0, r3, r2
 800082a:	4770      	bx	lr
 800082c:	f04f 0000 	mov.w	r0, #0
 8000830:	4770      	bx	lr
 8000832:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000836:	d102      	bne.n	800083e <__aeabi_d2uiz+0x3a>
 8000838:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800083c:	4770      	bx	lr
 800083e:	f04f 0000 	mov.w	r0, #0
 8000842:	4770      	bx	lr

08000844 <__do_global_dtors_aux>:
 8000844:	b510      	push	{r4, lr}
 8000846:	4c05      	ldr	r4, [pc, #20]	; (800085c <__do_global_dtors_aux+0x18>)
 8000848:	7823      	ldrb	r3, [r4, #0]
 800084a:	b933      	cbnz	r3, 800085a <__do_global_dtors_aux+0x16>
 800084c:	4b04      	ldr	r3, [pc, #16]	; (8000860 <__do_global_dtors_aux+0x1c>)
 800084e:	b113      	cbz	r3, 8000856 <__do_global_dtors_aux+0x12>
 8000850:	4804      	ldr	r0, [pc, #16]	; (8000864 <__do_global_dtors_aux+0x20>)
 8000852:	f3af 8000 	nop.w
 8000856:	2301      	movs	r3, #1
 8000858:	7023      	strb	r3, [r4, #0]
 800085a:	bd10      	pop	{r4, pc}
 800085c:	20000430 	andcs	r0, r0, r0, lsr r4
 8000860:	00000000 	andeq	r0, r0, r0
 8000864:	080026c0 	stmdaeq	r0, {r6, r7, r9, sl, sp}

08000868 <frame_dummy>:
 8000868:	b508      	push	{r3, lr}
 800086a:	4b03      	ldr	r3, [pc, #12]	; (8000878 <frame_dummy+0x10>)
 800086c:	b11b      	cbz	r3, 8000876 <frame_dummy+0xe>
 800086e:	4903      	ldr	r1, [pc, #12]	; (800087c <frame_dummy+0x14>)
 8000870:	4803      	ldr	r0, [pc, #12]	; (8000880 <frame_dummy+0x18>)
 8000872:	f3af 8000 	nop.w
 8000876:	bd08      	pop	{r3, pc}
 8000878:	00000000 	andeq	r0, r0, r0
 800087c:	20000434 	andcs	r0, r0, r4, lsr r4
 8000880:	080026c0 	stmdaeq	r0, {r6, r7, r9, sl, sp}

08000884 <atexit>:
 8000884:	2300      	movs	r3, #0
 8000886:	4601      	mov	r1, r0
 8000888:	461a      	mov	r2, r3
 800088a:	4618      	mov	r0, r3
 800088c:	f000 b83a 	b.w	8000904 <__register_exitproc>

08000890 <__libc_fini_array>:
 8000890:	b538      	push	{r3, r4, r5, lr}
 8000892:	4b08      	ldr	r3, [pc, #32]	; (80008b4 <__libc_fini_array+0x24>)
 8000894:	4d08      	ldr	r5, [pc, #32]	; (80008b8 <__libc_fini_array+0x28>)
 8000896:	1b5b      	subs	r3, r3, r5
 8000898:	109c      	asrs	r4, r3, #2
 800089a:	d007      	beq.n	80008ac <__libc_fini_array+0x1c>
 800089c:	3b04      	subs	r3, #4
 800089e:	441d      	add	r5, r3
 80008a0:	3c01      	subs	r4, #1
 80008a2:	f855 3904 	ldr.w	r3, [r5], #-4
 80008a6:	4798      	blx	r3
 80008a8:	2c00      	cmp	r4, #0
 80008aa:	d1f9      	bne.n	80008a0 <__libc_fini_array+0x10>
 80008ac:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80008b0:	f001 bf0c 	b.w	80026cc <_fini>
 80008b4:	08002750 	stmdaeq	r0, {r4, r6, r8, r9, sl, sp}
 80008b8:	0800274c 	stmdaeq	r0, {r2, r3, r6, r8, r9, sl, sp}

080008bc <__libc_init_array>:
 80008bc:	b570      	push	{r4, r5, r6, lr}
 80008be:	4e0d      	ldr	r6, [pc, #52]	; (80008f4 <__libc_init_array+0x38>)
 80008c0:	4d0d      	ldr	r5, [pc, #52]	; (80008f8 <__libc_init_array+0x3c>)
 80008c2:	1b76      	subs	r6, r6, r5
 80008c4:	10b6      	asrs	r6, r6, #2
 80008c6:	d006      	beq.n	80008d6 <__libc_init_array+0x1a>
 80008c8:	2400      	movs	r4, #0
 80008ca:	f855 3b04 	ldr.w	r3, [r5], #4
 80008ce:	3401      	adds	r4, #1
 80008d0:	4798      	blx	r3
 80008d2:	42a6      	cmp	r6, r4
 80008d4:	d1f9      	bne.n	80008ca <__libc_init_array+0xe>
 80008d6:	4e09      	ldr	r6, [pc, #36]	; (80008fc <__libc_init_array+0x40>)
 80008d8:	4d09      	ldr	r5, [pc, #36]	; (8000900 <__libc_init_array+0x44>)
 80008da:	1b76      	subs	r6, r6, r5
 80008dc:	f001 fef0 	bl	80026c0 <_init>
 80008e0:	10b6      	asrs	r6, r6, #2
 80008e2:	d006      	beq.n	80008f2 <__libc_init_array+0x36>
 80008e4:	2400      	movs	r4, #0
 80008e6:	f855 3b04 	ldr.w	r3, [r5], #4
 80008ea:	3401      	adds	r4, #1
 80008ec:	4798      	blx	r3
 80008ee:	42a6      	cmp	r6, r4
 80008f0:	d1f9      	bne.n	80008e6 <__libc_init_array+0x2a>
 80008f2:	bd70      	pop	{r4, r5, r6, pc}
 80008f4:	08002744 	stmdaeq	r0, {r2, r6, r8, r9, sl, sp}
 80008f8:	08002744 	stmdaeq	r0, {r2, r6, r8, r9, sl, sp}
 80008fc:	0800274c 	stmdaeq	r0, {r2, r3, r6, r8, r9, sl, sp}
 8000900:	08002744 	stmdaeq	r0, {r2, r6, r8, r9, sl, sp}

08000904 <__register_exitproc>:
 8000904:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000908:	4d1d      	ldr	r5, [pc, #116]	; (8000980 <__register_exitproc+0x7c>)
 800090a:	4606      	mov	r6, r0
 800090c:	6828      	ldr	r0, [r5, #0]
 800090e:	4698      	mov	r8, r3
 8000910:	460f      	mov	r7, r1
 8000912:	4691      	mov	r9, r2
 8000914:	f000 f842 	bl	800099c <__retarget_lock_acquire_recursive>
 8000918:	4b1a      	ldr	r3, [pc, #104]	; (8000984 <__register_exitproc+0x80>)
 800091a:	681b      	ldr	r3, [r3, #0]
 800091c:	f8d3 4148 	ldr.w	r4, [r3, #328]	; 0x148
 8000920:	b31c      	cbz	r4, 800096a <__register_exitproc+0x66>
 8000922:	6828      	ldr	r0, [r5, #0]
 8000924:	6865      	ldr	r5, [r4, #4]
 8000926:	2d1f      	cmp	r5, #31
 8000928:	dc24      	bgt.n	8000974 <__register_exitproc+0x70>
 800092a:	b94e      	cbnz	r6, 8000940 <__register_exitproc+0x3c>
 800092c:	1c6b      	adds	r3, r5, #1
 800092e:	3502      	adds	r5, #2
 8000930:	6063      	str	r3, [r4, #4]
 8000932:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
 8000936:	f000 f833 	bl	80009a0 <__retarget_lock_release_recursive>
 800093a:	2000      	movs	r0, #0
 800093c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000940:	eb04 0185 	add.w	r1, r4, r5, lsl #2
 8000944:	2301      	movs	r3, #1
 8000946:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
 800094a:	f8d4 2188 	ldr.w	r2, [r4, #392]	; 0x188
 800094e:	40ab      	lsls	r3, r5
 8000950:	431a      	orrs	r2, r3
 8000952:	2e02      	cmp	r6, #2
 8000954:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
 8000958:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
 800095c:	d1e6      	bne.n	800092c <__register_exitproc+0x28>
 800095e:	f8d4 218c 	ldr.w	r2, [r4, #396]	; 0x18c
 8000962:	4313      	orrs	r3, r2
 8000964:	f8c4 318c 	str.w	r3, [r4, #396]	; 0x18c
 8000968:	e7e0      	b.n	800092c <__register_exitproc+0x28>
 800096a:	f503 74a6 	add.w	r4, r3, #332	; 0x14c
 800096e:	f8c3 4148 	str.w	r4, [r3, #328]	; 0x148
 8000972:	e7d6      	b.n	8000922 <__register_exitproc+0x1e>
 8000974:	f000 f814 	bl	80009a0 <__retarget_lock_release_recursive>
 8000978:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800097c:	e7de      	b.n	800093c <__register_exitproc+0x38>
 800097e:	bf00      	nop
 8000980:	20000428 	andcs	r0, r0, r8, lsr #8
 8000984:	08002728 	stmdaeq	r0, {r3, r5, r8, r9, sl, sp}

08000988 <register_fini>:
 8000988:	4b02      	ldr	r3, [pc, #8]	; (8000994 <register_fini+0xc>)
 800098a:	b113      	cbz	r3, 8000992 <register_fini+0xa>
 800098c:	4802      	ldr	r0, [pc, #8]	; (8000998 <register_fini+0x10>)
 800098e:	f7ff bf79 	b.w	8000884 <atexit>
 8000992:	4770      	bx	lr
 8000994:	00000000 	andeq	r0, r0, r0
 8000998:	08000891 	stmdaeq	r0, {r0, r4, r7, fp}

0800099c <__retarget_lock_acquire_recursive>:
 800099c:	4770      	bx	lr
 800099e:	bf00      	nop

080009a0 <__retarget_lock_release_recursive>:
 80009a0:	4770      	bx	lr
 80009a2:	bf00      	nop

080009a4 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 80009a4:	b480      	push	{r7}
 80009a6:	b083      	sub	sp, #12
 80009a8:	af00      	add	r7, sp, #0
 80009aa:	4603      	mov	r3, r0
 80009ac:	6039      	str	r1, [r7, #0]
 80009ae:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80009b0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80009b4:	2b00      	cmp	r3, #0
 80009b6:	db0a      	blt.n	80009ce <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80009b8:	683b      	ldr	r3, [r7, #0]
 80009ba:	b2da      	uxtb	r2, r3
 80009bc:	490c      	ldr	r1, [pc, #48]	; (80009f0 <__NVIC_SetPriority+0x4c>)
 80009be:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80009c2:	0112      	lsls	r2, r2, #4
 80009c4:	b2d2      	uxtb	r2, r2
 80009c6:	440b      	add	r3, r1
 80009c8:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 80009cc:	e00a      	b.n	80009e4 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80009ce:	683b      	ldr	r3, [r7, #0]
 80009d0:	b2da      	uxtb	r2, r3
 80009d2:	4908      	ldr	r1, [pc, #32]	; (80009f4 <__NVIC_SetPriority+0x50>)
 80009d4:	79fb      	ldrb	r3, [r7, #7]
 80009d6:	f003 030f 	and.w	r3, r3, #15
 80009da:	3b04      	subs	r3, #4
 80009dc:	0112      	lsls	r2, r2, #4
 80009de:	b2d2      	uxtb	r2, r2
 80009e0:	440b      	add	r3, r1
 80009e2:	761a      	strb	r2, [r3, #24]
}
 80009e4:	bf00      	nop
 80009e6:	370c      	adds	r7, #12
 80009e8:	46bd      	mov	sp, r7
 80009ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009ee:	4770      	bx	lr
 80009f0:	e000e100 	and	lr, r0, r0, lsl #2
 80009f4:	e000ed00 	and	lr, r0, r0, lsl #26

080009f8 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 80009f8:	b580      	push	{r7, lr}
 80009fa:	b082      	sub	sp, #8
 80009fc:	af00      	add	r7, sp, #0
 80009fe:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8000a00:	687b      	ldr	r3, [r7, #4]
 8000a02:	3b01      	subs	r3, #1
 8000a04:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8000a08:	d301      	bcc.n	8000a0e <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8000a0a:	2301      	movs	r3, #1
 8000a0c:	e00f      	b.n	8000a2e <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8000a0e:	4a0a      	ldr	r2, [pc, #40]	; (8000a38 <SysTick_Config+0x40>)
 8000a10:	687b      	ldr	r3, [r7, #4]
 8000a12:	3b01      	subs	r3, #1
 8000a14:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8000a16:	210f      	movs	r1, #15
 8000a18:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000a1c:	f7ff ffc2 	bl	80009a4 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8000a20:	4b05      	ldr	r3, [pc, #20]	; (8000a38 <SysTick_Config+0x40>)
 8000a22:	2200      	movs	r2, #0
 8000a24:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8000a26:	4b04      	ldr	r3, [pc, #16]	; (8000a38 <SysTick_Config+0x40>)
 8000a28:	2207      	movs	r2, #7
 8000a2a:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8000a2c:	2300      	movs	r3, #0
}
 8000a2e:	4618      	mov	r0, r3
 8000a30:	3708      	adds	r7, #8
 8000a32:	46bd      	mov	sp, r7
 8000a34:	bd80      	pop	{r7, pc}
 8000a36:	bf00      	nop
 8000a38:	e000e010 	and	lr, r0, r0, lsl r0

08000a3c <setupTimer>:

#define IMAGE_BUFFER_LINES 1
#define IMAGE_BUFFER_SIZE (ST7789_LCD_WIDTH * IMAGE_BUFFER_LINES)
#define IMAGE_ADDR  ((uint32_t)0x08020000)

void setupTimer(void) {
 8000a3c:	b480      	push	{r7}
 8000a3e:	af00      	add	r7, sp, #0
    RCC->APB2ENR |= RCC_APB2ENR_TIM1EN;
 8000a40:	4b0a      	ldr	r3, [pc, #40]	; (8000a6c <setupTimer+0x30>)
 8000a42:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000a44:	4a09      	ldr	r2, [pc, #36]	; (8000a6c <setupTimer+0x30>)
 8000a46:	f043 0301 	orr.w	r3, r3, #1
 8000a4a:	6453      	str	r3, [r2, #68]	; 0x44
    TIM1->PSC = 0x3200 - 1;
 8000a4c:	4b08      	ldr	r3, [pc, #32]	; (8000a70 <setupTimer+0x34>)
 8000a4e:	f243 12ff 	movw	r2, #12799	; 0x31ff
 8000a52:	629a      	str	r2, [r3, #40]	; 0x28
    // TIM1->CR1 |= TIM_CR1_ARPE;
    TIM1->CR1 |= TIM_CR1_CEN;
 8000a54:	4b06      	ldr	r3, [pc, #24]	; (8000a70 <setupTimer+0x34>)
 8000a56:	681b      	ldr	r3, [r3, #0]
 8000a58:	4a05      	ldr	r2, [pc, #20]	; (8000a70 <setupTimer+0x34>)
 8000a5a:	f043 0301 	orr.w	r3, r3, #1
 8000a5e:	6013      	str	r3, [r2, #0]
}
 8000a60:	bf00      	nop
 8000a62:	46bd      	mov	sp, r7
 8000a64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a68:	4770      	bx	lr
 8000a6a:	bf00      	nop
 8000a6c:	40023800 	andmi	r3, r2, r0, lsl #16
 8000a70:	40010000 	andmi	r0, r1, r0

08000a74 <st7789_GPIOInit>:
    *bufPtr = '\0';
    svcWrite0(buf);
}


void    st7789_GPIOInit(void) {
 8000a74:	b480      	push	{r7}
 8000a76:	af00      	add	r7, sp, #0
    // Enable GPIOA, SPI1 and DMA2 clock
    RCC->APB2ENR |= RCC_APB2ENR_SPI1EN;
 8000a78:	4b28      	ldr	r3, [pc, #160]	; (8000b1c <st7789_GPIOInit+0xa8>)
 8000a7a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000a7c:	4a27      	ldr	r2, [pc, #156]	; (8000b1c <st7789_GPIOInit+0xa8>)
 8000a7e:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000a82:	6453      	str	r3, [r2, #68]	; 0x44
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN | RCC_AHB1ENR_GPIOBEN | RCC_AHB1ENR_DMA2EN;
 8000a84:	4b25      	ldr	r3, [pc, #148]	; (8000b1c <st7789_GPIOInit+0xa8>)
 8000a86:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000a88:	4a24      	ldr	r2, [pc, #144]	; (8000b1c <st7789_GPIOInit+0xa8>)
 8000a8a:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8000a8e:	f043 0303 	orr.w	r3, r3, #3
 8000a92:	6313      	str	r3, [r2, #48]	; 0x30
    // Enable DMA1 channel
//	RCC->AHBENR |= RCC_AHBENR_DMA1EN;

    // Enable SPI
    ST7789_SPI->SR = 0;
 8000a94:	4b22      	ldr	r3, [pc, #136]	; (8000b20 <st7789_GPIOInit+0xac>)
 8000a96:	2200      	movs	r2, #0
 8000a98:	609a      	str	r2, [r3, #8]
    // Reverse polarity?
    ST7789_SPI->CR1 = \
 8000a9a:	4b21      	ldr	r3, [pc, #132]	; (8000b20 <st7789_GPIOInit+0xac>)
 8000a9c:	f24c 3206 	movw	r2, #49926	; 0xc306
 8000aa0:	601a      	str	r2, [r3, #0]
        SPI_CR1_SSI | \
        SPI_CR1_MSTR | \
        SPI_CR1_CPOL | \
        SPI_CR1_BIDIMODE | \
        SPI_CR1_BIDIOE;
    ST7789_SPI->CR1 |= SPI_CR1_SPE;
 8000aa2:	4b1f      	ldr	r3, [pc, #124]	; (8000b20 <st7789_GPIOInit+0xac>)
 8000aa4:	681b      	ldr	r3, [r3, #0]
 8000aa6:	4a1e      	ldr	r2, [pc, #120]	; (8000b20 <st7789_GPIOInit+0xac>)
 8000aa8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000aac:	6013      	str	r3, [r2, #0]

    // DC and RST signals
    // Maximum output speed

    ST7789_DC_PORT->MODER |= GPIO_MODER_MODE1_0;
 8000aae:	4b1d      	ldr	r3, [pc, #116]	; (8000b24 <st7789_GPIOInit+0xb0>)
 8000ab0:	681b      	ldr	r3, [r3, #0]
 8000ab2:	4a1c      	ldr	r2, [pc, #112]	; (8000b24 <st7789_GPIOInit+0xb0>)
 8000ab4:	f043 0304 	orr.w	r3, r3, #4
 8000ab8:	6013      	str	r3, [r2, #0]
    ST7789_RST_PORT->MODER |= GPIO_MODER_MODE9_0;
 8000aba:	4b1b      	ldr	r3, [pc, #108]	; (8000b28 <st7789_GPIOInit+0xb4>)
 8000abc:	681b      	ldr	r3, [r3, #0]
 8000abe:	4a1a      	ldr	r2, [pc, #104]	; (8000b28 <st7789_GPIOInit+0xb4>)
 8000ac0:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8000ac4:	6013      	str	r3, [r2, #0]

    ST7789_DC_PORT->OSPEEDR |= GPIO_OSPEEDR_OSPEED1;
 8000ac6:	4b17      	ldr	r3, [pc, #92]	; (8000b24 <st7789_GPIOInit+0xb0>)
 8000ac8:	689b      	ldr	r3, [r3, #8]
 8000aca:	4a16      	ldr	r2, [pc, #88]	; (8000b24 <st7789_GPIOInit+0xb0>)
 8000acc:	f043 030c 	orr.w	r3, r3, #12
 8000ad0:	6093      	str	r3, [r2, #8]
    ST7789_RST_PORT->OSPEEDR |= GPIO_OSPEEDR_OSPEED9;
 8000ad2:	4b15      	ldr	r3, [pc, #84]	; (8000b28 <st7789_GPIOInit+0xb4>)
 8000ad4:	689b      	ldr	r3, [r3, #8]
 8000ad6:	4a14      	ldr	r2, [pc, #80]	; (8000b28 <st7789_GPIOInit+0xb4>)
 8000ad8:	f443 2340 	orr.w	r3, r3, #786432	; 0xc0000
 8000adc:	6093      	str	r3, [r2, #8]
//	ST7789_RST_PORT->CRH &= ~(GPIO_CRH_CNF9);


    // SPI pins
    // Black Pill, SPI1: PB3 - MOSI, PB5 - SCK
    MODIFY_REG(GPIOB->MODER, GPIO_MODER_MODE5 | GPIO_MODER_MODE3,
 8000ade:	4b12      	ldr	r3, [pc, #72]	; (8000b28 <st7789_GPIOInit+0xb4>)
 8000ae0:	681b      	ldr	r3, [r3, #0]
 8000ae2:	f423 634c 	bic.w	r3, r3, #3264	; 0xcc0
 8000ae6:	4a10      	ldr	r2, [pc, #64]	; (8000b28 <st7789_GPIOInit+0xb4>)
 8000ae8:	f443 6308 	orr.w	r3, r3, #2176	; 0x880
 8000aec:	6013      	str	r3, [r2, #0]
               GPIO_MODER_MODE5_1 | GPIO_MODER_MODE3_1);
    // Max speed
    SET_BIT(GPIOB->OSPEEDR, GPIO_OSPEEDR_OSPEED5 | GPIO_OSPEEDR_OSPEED3);
 8000aee:	4b0e      	ldr	r3, [pc, #56]	; (8000b28 <st7789_GPIOInit+0xb4>)
 8000af0:	689b      	ldr	r3, [r3, #8]
 8000af2:	4a0d      	ldr	r2, [pc, #52]	; (8000b28 <st7789_GPIOInit+0xb4>)
 8000af4:	f443 634c 	orr.w	r3, r3, #3264	; 0xcc0
 8000af8:	6093      	str	r3, [r2, #8]

    // Alternate function PB3, PB5 - SPI1
    MODIFY_REG(GPIOB->AFR[0], GPIO_AFRL_AFRL5 | GPIO_AFRL_AFRL3,
 8000afa:	4b0b      	ldr	r3, [pc, #44]	; (8000b28 <st7789_GPIOInit+0xb4>)
 8000afc:	6a1b      	ldr	r3, [r3, #32]
 8000afe:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8000b02:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8000b06:	4a08      	ldr	r2, [pc, #32]	; (8000b28 <st7789_GPIOInit+0xb4>)
 8000b08:	f443 03a0 	orr.w	r3, r3, #5242880	; 0x500000
 8000b0c:	f443 43a0 	orr.w	r3, r3, #20480	; 0x5000
 8000b10:	6213      	str	r3, [r2, #32]
//	GPIOA->CRL |= GPIO_CRL_MODE5;
//	GPIOA->CRL |= GPIO_CRL_MODE7;
    // Alternate mode on PA5/PA7
//	GPIOA->CRL = (GPIOA->CRL & ~(GPIO_CRL_CNF5)) | (GPIO_CRL_CNF5_1);
//	GPIOA->CRL = (GPIOA->CRL & ~(GPIO_CRL_CNF7)) | (GPIO_CRL_CNF7_1);
}
 8000b12:	bf00      	nop
 8000b14:	46bd      	mov	sp, r7
 8000b16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b1a:	4770      	bx	lr
 8000b1c:	40023800 	andmi	r3, r2, r0, lsl #16
 8000b20:	40013000 	andmi	r3, r1, r0
 8000b24:	40020000 	andmi	r0, r2, r0
 8000b28:	40020400 	andmi	r0, r2, r0, lsl #8

08000b2c <demoCycleColors>:


void demoCycleColors(void) {
 8000b2c:	b580      	push	{r7, lr}
 8000b2e:	b082      	sub	sp, #8
 8000b30:	af00      	add	r7, sp, #0
    for (uint8_t color = 0; color < 248; color += 8) {
 8000b32:	2300      	movs	r3, #0
 8000b34:	71fb      	strb	r3, [r7, #7]
 8000b36:	e00c      	b.n	8000b52 <demoCycleColors+0x26>
        st7789_Clear(st7789_RGBToColor(color, color, color));
 8000b38:	79fa      	ldrb	r2, [r7, #7]
 8000b3a:	79f9      	ldrb	r1, [r7, #7]
 8000b3c:	79fb      	ldrb	r3, [r7, #7]
 8000b3e:	4618      	mov	r0, r3
 8000b40:	f001 fb6b 	bl	800221a <st7789_RGBToColor>
 8000b44:	4603      	mov	r3, r0
 8000b46:	4618      	mov	r0, r3
 8000b48:	f001 fb56 	bl	80021f8 <st7789_Clear>
    for (uint8_t color = 0; color < 248; color += 8) {
 8000b4c:	79fb      	ldrb	r3, [r7, #7]
 8000b4e:	3308      	adds	r3, #8
 8000b50:	71fb      	strb	r3, [r7, #7]
 8000b52:	79fb      	ldrb	r3, [r7, #7]
 8000b54:	2bf7      	cmp	r3, #247	; 0xf7
 8000b56:	d9ef      	bls.n	8000b38 <demoCycleColors+0xc>
    }
    for (uint8_t color = 248; color > 0; color -= 8) {
 8000b58:	23f8      	movs	r3, #248	; 0xf8
 8000b5a:	71bb      	strb	r3, [r7, #6]
 8000b5c:	e00c      	b.n	8000b78 <demoCycleColors+0x4c>
        st7789_Clear(st7789_RGBToColor(255, color, color));
 8000b5e:	79ba      	ldrb	r2, [r7, #6]
 8000b60:	79bb      	ldrb	r3, [r7, #6]
 8000b62:	4619      	mov	r1, r3
 8000b64:	20ff      	movs	r0, #255	; 0xff
 8000b66:	f001 fb58 	bl	800221a <st7789_RGBToColor>
 8000b6a:	4603      	mov	r3, r0
 8000b6c:	4618      	mov	r0, r3
 8000b6e:	f001 fb43 	bl	80021f8 <st7789_Clear>
    for (uint8_t color = 248; color > 0; color -= 8) {
 8000b72:	79bb      	ldrb	r3, [r7, #6]
 8000b74:	3b08      	subs	r3, #8
 8000b76:	71bb      	strb	r3, [r7, #6]
 8000b78:	79bb      	ldrb	r3, [r7, #6]
 8000b7a:	2b00      	cmp	r3, #0
 8000b7c:	d1ef      	bne.n	8000b5e <demoCycleColors+0x32>
    }
    for (uint8_t color = 0; color < 248; color += 8) {
 8000b7e:	2300      	movs	r3, #0
 8000b80:	717b      	strb	r3, [r7, #5]
 8000b82:	e00c      	b.n	8000b9e <demoCycleColors+0x72>
        st7789_Clear(st7789_RGBToColor(255, color, 0));
 8000b84:	797b      	ldrb	r3, [r7, #5]
 8000b86:	2200      	movs	r2, #0
 8000b88:	4619      	mov	r1, r3
 8000b8a:	20ff      	movs	r0, #255	; 0xff
 8000b8c:	f001 fb45 	bl	800221a <st7789_RGBToColor>
 8000b90:	4603      	mov	r3, r0
 8000b92:	4618      	mov	r0, r3
 8000b94:	f001 fb30 	bl	80021f8 <st7789_Clear>
    for (uint8_t color = 0; color < 248; color += 8) {
 8000b98:	797b      	ldrb	r3, [r7, #5]
 8000b9a:	3308      	adds	r3, #8
 8000b9c:	717b      	strb	r3, [r7, #5]
 8000b9e:	797b      	ldrb	r3, [r7, #5]
 8000ba0:	2bf7      	cmp	r3, #247	; 0xf7
 8000ba2:	d9ef      	bls.n	8000b84 <demoCycleColors+0x58>
    }
    for (uint8_t color = 248; color > 0; color -= 8) {
 8000ba4:	23f8      	movs	r3, #248	; 0xf8
 8000ba6:	713b      	strb	r3, [r7, #4]
 8000ba8:	e00c      	b.n	8000bc4 <demoCycleColors+0x98>
        st7789_Clear(st7789_RGBToColor(color, 255, 0));
 8000baa:	793b      	ldrb	r3, [r7, #4]
 8000bac:	2200      	movs	r2, #0
 8000bae:	21ff      	movs	r1, #255	; 0xff
 8000bb0:	4618      	mov	r0, r3
 8000bb2:	f001 fb32 	bl	800221a <st7789_RGBToColor>
 8000bb6:	4603      	mov	r3, r0
 8000bb8:	4618      	mov	r0, r3
 8000bba:	f001 fb1d 	bl	80021f8 <st7789_Clear>
    for (uint8_t color = 248; color > 0; color -= 8) {
 8000bbe:	793b      	ldrb	r3, [r7, #4]
 8000bc0:	3b08      	subs	r3, #8
 8000bc2:	713b      	strb	r3, [r7, #4]
 8000bc4:	793b      	ldrb	r3, [r7, #4]
 8000bc6:	2b00      	cmp	r3, #0
 8000bc8:	d1ef      	bne.n	8000baa <demoCycleColors+0x7e>
    }
    for (uint8_t color = 0; color < 248; color += 8) {
 8000bca:	2300      	movs	r3, #0
 8000bcc:	70fb      	strb	r3, [r7, #3]
 8000bce:	e00c      	b.n	8000bea <demoCycleColors+0xbe>
        st7789_Clear(st7789_RGBToColor(0, 255, color));
 8000bd0:	78fb      	ldrb	r3, [r7, #3]
 8000bd2:	461a      	mov	r2, r3
 8000bd4:	21ff      	movs	r1, #255	; 0xff
 8000bd6:	2000      	movs	r0, #0
 8000bd8:	f001 fb1f 	bl	800221a <st7789_RGBToColor>
 8000bdc:	4603      	mov	r3, r0
 8000bde:	4618      	mov	r0, r3
 8000be0:	f001 fb0a 	bl	80021f8 <st7789_Clear>
    for (uint8_t color = 0; color < 248; color += 8) {
 8000be4:	78fb      	ldrb	r3, [r7, #3]
 8000be6:	3308      	adds	r3, #8
 8000be8:	70fb      	strb	r3, [r7, #3]
 8000bea:	78fb      	ldrb	r3, [r7, #3]
 8000bec:	2bf7      	cmp	r3, #247	; 0xf7
 8000bee:	d9ef      	bls.n	8000bd0 <demoCycleColors+0xa4>
    }
    for (uint8_t color = 248; color > 0; color -= 8) {
 8000bf0:	23f8      	movs	r3, #248	; 0xf8
 8000bf2:	70bb      	strb	r3, [r7, #2]
 8000bf4:	e00c      	b.n	8000c10 <demoCycleColors+0xe4>
        st7789_Clear(st7789_RGBToColor(0, color, 255));
 8000bf6:	78bb      	ldrb	r3, [r7, #2]
 8000bf8:	22ff      	movs	r2, #255	; 0xff
 8000bfa:	4619      	mov	r1, r3
 8000bfc:	2000      	movs	r0, #0
 8000bfe:	f001 fb0c 	bl	800221a <st7789_RGBToColor>
 8000c02:	4603      	mov	r3, r0
 8000c04:	4618      	mov	r0, r3
 8000c06:	f001 faf7 	bl	80021f8 <st7789_Clear>
    for (uint8_t color = 248; color > 0; color -= 8) {
 8000c0a:	78bb      	ldrb	r3, [r7, #2]
 8000c0c:	3b08      	subs	r3, #8
 8000c0e:	70bb      	strb	r3, [r7, #2]
 8000c10:	78bb      	ldrb	r3, [r7, #2]
 8000c12:	2b00      	cmp	r3, #0
 8000c14:	d1ef      	bne.n	8000bf6 <demoCycleColors+0xca>
    }
    for (uint8_t color = 248; color > 0; color -= 8) {
 8000c16:	23f8      	movs	r3, #248	; 0xf8
 8000c18:	707b      	strb	r3, [r7, #1]
 8000c1a:	e00c      	b.n	8000c36 <demoCycleColors+0x10a>
        st7789_Clear(st7789_RGBToColor(0, 0, color));
 8000c1c:	787b      	ldrb	r3, [r7, #1]
 8000c1e:	461a      	mov	r2, r3
 8000c20:	2100      	movs	r1, #0
 8000c22:	2000      	movs	r0, #0
 8000c24:	f001 faf9 	bl	800221a <st7789_RGBToColor>
 8000c28:	4603      	mov	r3, r0
 8000c2a:	4618      	mov	r0, r3
 8000c2c:	f001 fae4 	bl	80021f8 <st7789_Clear>
    for (uint8_t color = 248; color > 0; color -= 8) {
 8000c30:	787b      	ldrb	r3, [r7, #1]
 8000c32:	3b08      	subs	r3, #8
 8000c34:	707b      	strb	r3, [r7, #1]
 8000c36:	787b      	ldrb	r3, [r7, #1]
 8000c38:	2b00      	cmp	r3, #0
 8000c3a:	d1ef      	bne.n	8000c1c <demoCycleColors+0xf0>
    }
}
 8000c3c:	bf00      	nop
 8000c3e:	bf00      	nop
 8000c40:	3708      	adds	r7, #8
 8000c42:	46bd      	mov	sp, r7
 8000c44:	bd80      	pop	{r7, pc}

08000c46 <demoCheckboardDisplay>:


void demoCheckboardDisplay(uint16_t checkboardSize, uint16_t startX, uint16_t startY) {
 8000c46:	b590      	push	{r4, r7, lr}
 8000c48:	f5ad 7d79 	sub.w	sp, sp, #996	; 0x3e4
 8000c4c:	af00      	add	r7, sp, #0
 8000c4e:	4604      	mov	r4, r0
 8000c50:	4608      	mov	r0, r1
 8000c52:	4611      	mov	r1, r2
 8000c54:	f507 7378 	add.w	r3, r7, #992	; 0x3e0
 8000c58:	f2a3 33da 	subw	r3, r3, #986	; 0x3da
 8000c5c:	4622      	mov	r2, r4
 8000c5e:	801a      	strh	r2, [r3, #0]
 8000c60:	f507 7378 	add.w	r3, r7, #992	; 0x3e0
 8000c64:	f5a3 7377 	sub.w	r3, r3, #988	; 0x3dc
 8000c68:	4602      	mov	r2, r0
 8000c6a:	801a      	strh	r2, [r3, #0]
 8000c6c:	f507 7378 	add.w	r3, r7, #992	; 0x3e0
 8000c70:	f2a3 33de 	subw	r3, r3, #990	; 0x3de
 8000c74:	460a      	mov	r2, r1
 8000c76:	801a      	strh	r2, [r3, #0]
    st7789_StartMemoryWrite();
 8000c78:	f001 f9e4 	bl	8002044 <st7789_StartMemoryWrite>
    bool xPolarity = (startX / checkboardSize) & 1;
 8000c7c:	f507 7378 	add.w	r3, r7, #992	; 0x3e0
 8000c80:	f5a3 7277 	sub.w	r2, r3, #988	; 0x3dc
 8000c84:	f507 7378 	add.w	r3, r7, #992	; 0x3e0
 8000c88:	f2a3 33da 	subw	r3, r3, #986	; 0x3da
 8000c8c:	8812      	ldrh	r2, [r2, #0]
 8000c8e:	881b      	ldrh	r3, [r3, #0]
 8000c90:	fbb2 f3f3 	udiv	r3, r2, r3
 8000c94:	b29b      	uxth	r3, r3
 8000c96:	f003 0301 	and.w	r3, r3, #1
 8000c9a:	2b00      	cmp	r3, #0
 8000c9c:	bf14      	ite	ne
 8000c9e:	2301      	movne	r3, #1
 8000ca0:	2300      	moveq	r3, #0
 8000ca2:	f887 33df 	strb.w	r3, [r7, #991]	; 0x3df
    bool yPolarity = (startY / checkboardSize) & 1;
 8000ca6:	f507 7378 	add.w	r3, r7, #992	; 0x3e0
 8000caa:	f2a3 32de 	subw	r2, r3, #990	; 0x3de
 8000cae:	f507 7378 	add.w	r3, r7, #992	; 0x3e0
 8000cb2:	f2a3 33da 	subw	r3, r3, #986	; 0x3da
 8000cb6:	8812      	ldrh	r2, [r2, #0]
 8000cb8:	881b      	ldrh	r3, [r3, #0]
 8000cba:	fbb2 f3f3 	udiv	r3, r2, r3
 8000cbe:	b29b      	uxth	r3, r3
 8000cc0:	f003 0301 	and.w	r3, r3, #1
 8000cc4:	2b00      	cmp	r3, #0
 8000cc6:	bf14      	ite	ne
 8000cc8:	2301      	movne	r3, #1
 8000cca:	2300      	moveq	r3, #0
 8000ccc:	f887 33de 	strb.w	r3, [r7, #990]	; 0x3de
    bool initialXPolarity = (startX / checkboardSize) & 1;
 8000cd0:	f507 7378 	add.w	r3, r7, #992	; 0x3e0
 8000cd4:	f5a3 7277 	sub.w	r2, r3, #988	; 0x3dc
 8000cd8:	f507 7378 	add.w	r3, r7, #992	; 0x3e0
 8000cdc:	f2a3 33da 	subw	r3, r3, #986	; 0x3da
 8000ce0:	8812      	ldrh	r2, [r2, #0]
 8000ce2:	881b      	ldrh	r3, [r3, #0]
 8000ce4:	fbb2 f3f3 	udiv	r3, r2, r3
 8000ce8:	b29b      	uxth	r3, r3
 8000cea:	f003 0301 	and.w	r3, r3, #1
 8000cee:	2b00      	cmp	r3, #0
 8000cf0:	bf14      	ite	ne
 8000cf2:	2301      	movne	r3, #1
 8000cf4:	2300      	moveq	r3, #0
 8000cf6:	f887 33d5 	strb.w	r3, [r7, #981]	; 0x3d5
    startX = startX % checkboardSize;
 8000cfa:	f507 7378 	add.w	r3, r7, #992	; 0x3e0
 8000cfe:	f5a3 7177 	sub.w	r1, r3, #988	; 0x3dc
 8000d02:	f507 7378 	add.w	r3, r7, #992	; 0x3e0
 8000d06:	f5a3 7377 	sub.w	r3, r3, #988	; 0x3dc
 8000d0a:	f507 7278 	add.w	r2, r7, #992	; 0x3e0
 8000d0e:	f2a2 32da 	subw	r2, r2, #986	; 0x3da
 8000d12:	881b      	ldrh	r3, [r3, #0]
 8000d14:	8812      	ldrh	r2, [r2, #0]
 8000d16:	fbb3 f0f2 	udiv	r0, r3, r2
 8000d1a:	fb00 f202 	mul.w	r2, r0, r2
 8000d1e:	1a9b      	subs	r3, r3, r2
 8000d20:	800b      	strh	r3, [r1, #0]
    startY = startY % checkboardSize;
 8000d22:	f507 7378 	add.w	r3, r7, #992	; 0x3e0
 8000d26:	f2a3 31de 	subw	r1, r3, #990	; 0x3de
 8000d2a:	f507 7378 	add.w	r3, r7, #992	; 0x3e0
 8000d2e:	f2a3 33de 	subw	r3, r3, #990	; 0x3de
 8000d32:	f507 7278 	add.w	r2, r7, #992	; 0x3e0
 8000d36:	f2a2 32da 	subw	r2, r2, #986	; 0x3da
 8000d3a:	881b      	ldrh	r3, [r3, #0]
 8000d3c:	8812      	ldrh	r2, [r2, #0]
 8000d3e:	fbb3 f0f2 	udiv	r0, r3, r2
 8000d42:	fb00 f202 	mul.w	r2, r0, r2
 8000d46:	1a9b      	subs	r3, r3, r2
 8000d48:	800b      	strh	r3, [r1, #0]
    uint16_t lineBuffer[ST7789_LCD_WIDTH * 2];
    uint16_t *buf = (uint16_t *)(&lineBuffer);
 8000d4a:	f107 0308 	add.w	r3, r7, #8
 8000d4e:	f8c7 33d0 	str.w	r3, [r7, #976]	; 0x3d0
    uint16_t xCounter = startX;
 8000d52:	f507 7378 	add.w	r3, r7, #992	; 0x3e0
 8000d56:	f5a3 7377 	sub.w	r3, r3, #988	; 0x3dc
 8000d5a:	881b      	ldrh	r3, [r3, #0]
 8000d5c:	f8a7 33dc 	strh.w	r3, [r7, #988]	; 0x3dc
    uint16_t yCounter = startY;
 8000d60:	f507 7378 	add.w	r3, r7, #992	; 0x3e0
 8000d64:	f2a3 33de 	subw	r3, r3, #990	; 0x3de
 8000d68:	881b      	ldrh	r3, [r3, #0]
 8000d6a:	f8a7 33da 	strh.w	r3, [r7, #986]	; 0x3da

    for (uint16_t line = 0; line < ST7789_LCD_HEIGHT + 1; ++line) {
 8000d6e:	2300      	movs	r3, #0
 8000d70:	f8a7 33d8 	strh.w	r3, [r7, #984]	; 0x3d8
 8000d74:	e0b5      	b.n	8000ee2 <demoCheckboardDisplay+0x29c>
        uint16_t *frontBuffer = ((line & 1 )== 0) ? (buf + ST7789_LCD_WIDTH) : buf;
 8000d76:	f8b7 33d8 	ldrh.w	r3, [r7, #984]	; 0x3d8
 8000d7a:	f003 0301 	and.w	r3, r3, #1
 8000d7e:	2b00      	cmp	r3, #0
 8000d80:	d104      	bne.n	8000d8c <demoCheckboardDisplay+0x146>
 8000d82:	f8d7 33d0 	ldr.w	r3, [r7, #976]	; 0x3d0
 8000d86:	f503 73f0 	add.w	r3, r3, #480	; 0x1e0
 8000d8a:	e001      	b.n	8000d90 <demoCheckboardDisplay+0x14a>
 8000d8c:	f8d7 33d0 	ldr.w	r3, [r7, #976]	; 0x3d0
 8000d90:	f8c7 33cc 	str.w	r3, [r7, #972]	; 0x3cc
        uint16_t *backBuffer = ((line & 1) == 0) ? buf : (buf + ST7789_LCD_WIDTH);
 8000d94:	f8b7 33d8 	ldrh.w	r3, [r7, #984]	; 0x3d8
 8000d98:	f003 0301 	and.w	r3, r3, #1
 8000d9c:	2b00      	cmp	r3, #0
 8000d9e:	d004      	beq.n	8000daa <demoCheckboardDisplay+0x164>
 8000da0:	f8d7 33d0 	ldr.w	r3, [r7, #976]	; 0x3d0
 8000da4:	f503 73f0 	add.w	r3, r3, #480	; 0x1e0
 8000da8:	e001      	b.n	8000dae <demoCheckboardDisplay+0x168>
 8000daa:	f8d7 33d0 	ldr.w	r3, [r7, #976]	; 0x3d0
 8000dae:	f8c7 33c8 	str.w	r3, [r7, #968]	; 0x3c8
        xPolarity = initialXPolarity;
 8000db2:	f897 33d5 	ldrb.w	r3, [r7, #981]	; 0x3d5
 8000db6:	f887 33df 	strb.w	r3, [r7, #991]	; 0x3df
        if (line > 0) {
 8000dba:	f8b7 33d8 	ldrh.w	r3, [r7, #984]	; 0x3d8
 8000dbe:	2b00      	cmp	r3, #0
 8000dc0:	d005      	beq.n	8000dce <demoCheckboardDisplay+0x188>
            st7789_WriteDMA(frontBuffer, ST7789_LCD_WIDTH * 2);
 8000dc2:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8000dc6:	f8d7 03cc 	ldr.w	r0, [r7, #972]	; 0x3cc
 8000dca:	f000 ff99 	bl	8001d00 <st7789_WriteDMA>
        }
        if (line < ST7789_LCD_HEIGHT) {
 8000dce:	f8b7 33d8 	ldrh.w	r3, [r7, #984]	; 0x3d8
 8000dd2:	2bef      	cmp	r3, #239	; 0xef
 8000dd4:	d857      	bhi.n	8000e86 <demoCheckboardDisplay+0x240>
            xCounter = startX;
 8000dd6:	f507 7378 	add.w	r3, r7, #992	; 0x3e0
 8000dda:	f5a3 7377 	sub.w	r3, r3, #988	; 0x3dc
 8000dde:	881b      	ldrh	r3, [r3, #0]
 8000de0:	f8a7 33dc 	strh.w	r3, [r7, #988]	; 0x3dc
            for (uint16_t column = 0; column < ST7789_LCD_WIDTH; ++column) {
 8000de4:	2300      	movs	r3, #0
 8000de6:	f8a7 33d6 	strh.w	r3, [r7, #982]	; 0x3d6
 8000dea:	e048      	b.n	8000e7e <demoCheckboardDisplay+0x238>
                backBuffer[column] = (xPolarity ^ yPolarity) ? 0xffff : st7789_RGBToColor(line, column, 255 - line);
 8000dec:	f897 23df 	ldrb.w	r2, [r7, #991]	; 0x3df
 8000df0:	f897 33de 	ldrb.w	r3, [r7, #990]	; 0x3de
 8000df4:	429a      	cmp	r2, r3
 8000df6:	d110      	bne.n	8000e1a <demoCheckboardDisplay+0x1d4>
 8000df8:	f8b7 33d8 	ldrh.w	r3, [r7, #984]	; 0x3d8
 8000dfc:	b2d8      	uxtb	r0, r3
 8000dfe:	f8b7 33d6 	ldrh.w	r3, [r7, #982]	; 0x3d6
 8000e02:	b2d9      	uxtb	r1, r3
 8000e04:	f8b7 33d8 	ldrh.w	r3, [r7, #984]	; 0x3d8
 8000e08:	b2db      	uxtb	r3, r3
 8000e0a:	43db      	mvns	r3, r3
 8000e0c:	b2db      	uxtb	r3, r3
 8000e0e:	461a      	mov	r2, r3
 8000e10:	f001 fa03 	bl	800221a <st7789_RGBToColor>
 8000e14:	4603      	mov	r3, r0
 8000e16:	4619      	mov	r1, r3
 8000e18:	e001      	b.n	8000e1e <demoCheckboardDisplay+0x1d8>
 8000e1a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8000e1e:	f8b7 33d6 	ldrh.w	r3, [r7, #982]	; 0x3d6
 8000e22:	005b      	lsls	r3, r3, #1
 8000e24:	f8d7 23c8 	ldr.w	r2, [r7, #968]	; 0x3c8
 8000e28:	4413      	add	r3, r2
 8000e2a:	460a      	mov	r2, r1
 8000e2c:	801a      	strh	r2, [r3, #0]
                xCounter++;
 8000e2e:	f8b7 33dc 	ldrh.w	r3, [r7, #988]	; 0x3dc
 8000e32:	3301      	adds	r3, #1
 8000e34:	f8a7 33dc 	strh.w	r3, [r7, #988]	; 0x3dc
                if (xCounter == checkboardSize) {
 8000e38:	f507 7378 	add.w	r3, r7, #992	; 0x3e0
 8000e3c:	f2a3 33da 	subw	r3, r3, #986	; 0x3da
 8000e40:	f8b7 23dc 	ldrh.w	r2, [r7, #988]	; 0x3dc
 8000e44:	881b      	ldrh	r3, [r3, #0]
 8000e46:	429a      	cmp	r2, r3
 8000e48:	d114      	bne.n	8000e74 <demoCheckboardDisplay+0x22e>
                    xPolarity = !xPolarity;
 8000e4a:	f897 33df 	ldrb.w	r3, [r7, #991]	; 0x3df
 8000e4e:	2b00      	cmp	r3, #0
 8000e50:	bf14      	ite	ne
 8000e52:	2301      	movne	r3, #1
 8000e54:	2300      	moveq	r3, #0
 8000e56:	b2db      	uxtb	r3, r3
 8000e58:	f083 0301 	eor.w	r3, r3, #1
 8000e5c:	b2db      	uxtb	r3, r3
 8000e5e:	f887 33df 	strb.w	r3, [r7, #991]	; 0x3df
 8000e62:	f897 33df 	ldrb.w	r3, [r7, #991]	; 0x3df
 8000e66:	f003 0301 	and.w	r3, r3, #1
 8000e6a:	f887 33df 	strb.w	r3, [r7, #991]	; 0x3df
                    xCounter = 0;
 8000e6e:	2300      	movs	r3, #0
 8000e70:	f8a7 33dc 	strh.w	r3, [r7, #988]	; 0x3dc
            for (uint16_t column = 0; column < ST7789_LCD_WIDTH; ++column) {
 8000e74:	f8b7 33d6 	ldrh.w	r3, [r7, #982]	; 0x3d6
 8000e78:	3301      	adds	r3, #1
 8000e7a:	f8a7 33d6 	strh.w	r3, [r7, #982]	; 0x3d6
 8000e7e:	f8b7 33d6 	ldrh.w	r3, [r7, #982]	; 0x3d6
 8000e82:	2bef      	cmp	r3, #239	; 0xef
 8000e84:	d9b2      	bls.n	8000dec <demoCheckboardDisplay+0x1a6>
                }
            }
        }
        if (line > 0) {
 8000e86:	f8b7 33d8 	ldrh.w	r3, [r7, #984]	; 0x3d8
 8000e8a:	2b00      	cmp	r3, #0
 8000e8c:	d001      	beq.n	8000e92 <demoCheckboardDisplay+0x24c>
            st7789_WaitForDMA();
 8000e8e:	f000 ff75 	bl	8001d7c <st7789_WaitForDMA>
        }
        yCounter++;
 8000e92:	f8b7 33da 	ldrh.w	r3, [r7, #986]	; 0x3da
 8000e96:	3301      	adds	r3, #1
 8000e98:	f8a7 33da 	strh.w	r3, [r7, #986]	; 0x3da
        if (yCounter == checkboardSize) {
 8000e9c:	f507 7378 	add.w	r3, r7, #992	; 0x3e0
 8000ea0:	f2a3 33da 	subw	r3, r3, #986	; 0x3da
 8000ea4:	f8b7 23da 	ldrh.w	r2, [r7, #986]	; 0x3da
 8000ea8:	881b      	ldrh	r3, [r3, #0]
 8000eaa:	429a      	cmp	r2, r3
 8000eac:	d114      	bne.n	8000ed8 <demoCheckboardDisplay+0x292>
            yPolarity = !yPolarity;
 8000eae:	f897 33de 	ldrb.w	r3, [r7, #990]	; 0x3de
 8000eb2:	2b00      	cmp	r3, #0
 8000eb4:	bf14      	ite	ne
 8000eb6:	2301      	movne	r3, #1
 8000eb8:	2300      	moveq	r3, #0
 8000eba:	b2db      	uxtb	r3, r3
 8000ebc:	f083 0301 	eor.w	r3, r3, #1
 8000ec0:	b2db      	uxtb	r3, r3
 8000ec2:	f887 33de 	strb.w	r3, [r7, #990]	; 0x3de
 8000ec6:	f897 33de 	ldrb.w	r3, [r7, #990]	; 0x3de
 8000eca:	f003 0301 	and.w	r3, r3, #1
 8000ece:	f887 33de 	strb.w	r3, [r7, #990]	; 0x3de
            yCounter = 0;
 8000ed2:	2300      	movs	r3, #0
 8000ed4:	f8a7 33da 	strh.w	r3, [r7, #986]	; 0x3da
    for (uint16_t line = 0; line < ST7789_LCD_HEIGHT + 1; ++line) {
 8000ed8:	f8b7 33d8 	ldrh.w	r3, [r7, #984]	; 0x3d8
 8000edc:	3301      	adds	r3, #1
 8000ede:	f8a7 33d8 	strh.w	r3, [r7, #984]	; 0x3d8
 8000ee2:	f8b7 33d8 	ldrh.w	r3, [r7, #984]	; 0x3d8
 8000ee6:	2bf0      	cmp	r3, #240	; 0xf0
 8000ee8:	f67f af45 	bls.w	8000d76 <demoCheckboardDisplay+0x130>
        }
    }
}
 8000eec:	bf00      	nop
 8000eee:	bf00      	nop
 8000ef0:	f507 7779 	add.w	r7, r7, #996	; 0x3e4
 8000ef4:	46bd      	mov	sp, r7
 8000ef6:	bd90      	pop	{r4, r7, pc}

08000ef8 <demoCheckboard>:


void demoCheckboard(void) {
 8000ef8:	b580      	push	{r7, lr}
 8000efa:	b088      	sub	sp, #32
 8000efc:	af00      	add	r7, sp, #0
    uint16_t size = 1;
 8000efe:	2301      	movs	r3, #1
 8000f00:	83fb      	strh	r3, [r7, #30]
    uint16_t posX = 0;
 8000f02:	2300      	movs	r3, #0
 8000f04:	83bb      	strh	r3, [r7, #28]
    uint16_t posY = 0;
 8000f06:	2300      	movs	r3, #0
 8000f08:	837b      	strh	r3, [r7, #26]
    for (size_t i = 0; i < 50; ++i) {
 8000f0a:	2300      	movs	r3, #0
 8000f0c:	617b      	str	r3, [r7, #20]
 8000f0e:	e00b      	b.n	8000f28 <demoCheckboard+0x30>
        size++;
 8000f10:	8bfb      	ldrh	r3, [r7, #30]
 8000f12:	3301      	adds	r3, #1
 8000f14:	83fb      	strh	r3, [r7, #30]
        demoCheckboardDisplay(size, posX, posY);
 8000f16:	8b7a      	ldrh	r2, [r7, #26]
 8000f18:	8bb9      	ldrh	r1, [r7, #28]
 8000f1a:	8bfb      	ldrh	r3, [r7, #30]
 8000f1c:	4618      	mov	r0, r3
 8000f1e:	f7ff fe92 	bl	8000c46 <demoCheckboardDisplay>
    for (size_t i = 0; i < 50; ++i) {
 8000f22:	697b      	ldr	r3, [r7, #20]
 8000f24:	3301      	adds	r3, #1
 8000f26:	617b      	str	r3, [r7, #20]
 8000f28:	697b      	ldr	r3, [r7, #20]
 8000f2a:	2b31      	cmp	r3, #49	; 0x31
 8000f2c:	d9f0      	bls.n	8000f10 <demoCheckboard+0x18>
    }
    for (size_t i = 0; i < 50; ++i) {
 8000f2e:	2300      	movs	r3, #0
 8000f30:	613b      	str	r3, [r7, #16]
 8000f32:	e00b      	b.n	8000f4c <demoCheckboard+0x54>
        posX += 3;
 8000f34:	8bbb      	ldrh	r3, [r7, #28]
 8000f36:	3303      	adds	r3, #3
 8000f38:	83bb      	strh	r3, [r7, #28]
        demoCheckboardDisplay(size, posX, posY);
 8000f3a:	8b7a      	ldrh	r2, [r7, #26]
 8000f3c:	8bb9      	ldrh	r1, [r7, #28]
 8000f3e:	8bfb      	ldrh	r3, [r7, #30]
 8000f40:	4618      	mov	r0, r3
 8000f42:	f7ff fe80 	bl	8000c46 <demoCheckboardDisplay>
    for (size_t i = 0; i < 50; ++i) {
 8000f46:	693b      	ldr	r3, [r7, #16]
 8000f48:	3301      	adds	r3, #1
 8000f4a:	613b      	str	r3, [r7, #16]
 8000f4c:	693b      	ldr	r3, [r7, #16]
 8000f4e:	2b31      	cmp	r3, #49	; 0x31
 8000f50:	d9f0      	bls.n	8000f34 <demoCheckboard+0x3c>
    }
    for (size_t i = 0; i < 50; ++i) {
 8000f52:	2300      	movs	r3, #0
 8000f54:	60fb      	str	r3, [r7, #12]
 8000f56:	e014      	b.n	8000f82 <demoCheckboard+0x8a>
        posX += 3;
 8000f58:	8bbb      	ldrh	r3, [r7, #28]
 8000f5a:	3303      	adds	r3, #3
 8000f5c:	83bb      	strh	r3, [r7, #28]
        posY += i / 10;
 8000f5e:	68fb      	ldr	r3, [r7, #12]
 8000f60:	4a3e      	ldr	r2, [pc, #248]	; (800105c <demoCheckboard+0x164>)
 8000f62:	fba2 2303 	umull	r2, r3, r2, r3
 8000f66:	08db      	lsrs	r3, r3, #3
 8000f68:	b29a      	uxth	r2, r3
 8000f6a:	8b7b      	ldrh	r3, [r7, #26]
 8000f6c:	4413      	add	r3, r2
 8000f6e:	837b      	strh	r3, [r7, #26]
        demoCheckboardDisplay(size, posX, posY);
 8000f70:	8b7a      	ldrh	r2, [r7, #26]
 8000f72:	8bb9      	ldrh	r1, [r7, #28]
 8000f74:	8bfb      	ldrh	r3, [r7, #30]
 8000f76:	4618      	mov	r0, r3
 8000f78:	f7ff fe65 	bl	8000c46 <demoCheckboardDisplay>
    for (size_t i = 0; i < 50; ++i) {
 8000f7c:	68fb      	ldr	r3, [r7, #12]
 8000f7e:	3301      	adds	r3, #1
 8000f80:	60fb      	str	r3, [r7, #12]
 8000f82:	68fb      	ldr	r3, [r7, #12]
 8000f84:	2b31      	cmp	r3, #49	; 0x31
 8000f86:	d9e7      	bls.n	8000f58 <demoCheckboard+0x60>
    }
    for (size_t i = 0; i < 100; ++i) {
 8000f88:	2300      	movs	r3, #0
 8000f8a:	60bb      	str	r3, [r7, #8]
 8000f8c:	e01e      	b.n	8000fcc <demoCheckboard+0xd4>
        posX += 3 + i / 25;
 8000f8e:	68bb      	ldr	r3, [r7, #8]
 8000f90:	4a33      	ldr	r2, [pc, #204]	; (8001060 <demoCheckboard+0x168>)
 8000f92:	fba2 2303 	umull	r2, r3, r2, r3
 8000f96:	08db      	lsrs	r3, r3, #3
 8000f98:	b29a      	uxth	r2, r3
 8000f9a:	8bbb      	ldrh	r3, [r7, #28]
 8000f9c:	4413      	add	r3, r2
 8000f9e:	b29b      	uxth	r3, r3
 8000fa0:	3303      	adds	r3, #3
 8000fa2:	83bb      	strh	r3, [r7, #28]
        posY += 5 + i / 10;
 8000fa4:	68bb      	ldr	r3, [r7, #8]
 8000fa6:	4a2d      	ldr	r2, [pc, #180]	; (800105c <demoCheckboard+0x164>)
 8000fa8:	fba2 2303 	umull	r2, r3, r2, r3
 8000fac:	08db      	lsrs	r3, r3, #3
 8000fae:	b29a      	uxth	r2, r3
 8000fb0:	8b7b      	ldrh	r3, [r7, #26]
 8000fb2:	4413      	add	r3, r2
 8000fb4:	b29b      	uxth	r3, r3
 8000fb6:	3305      	adds	r3, #5
 8000fb8:	837b      	strh	r3, [r7, #26]
        demoCheckboardDisplay(size, posX, posY);
 8000fba:	8b7a      	ldrh	r2, [r7, #26]
 8000fbc:	8bb9      	ldrh	r1, [r7, #28]
 8000fbe:	8bfb      	ldrh	r3, [r7, #30]
 8000fc0:	4618      	mov	r0, r3
 8000fc2:	f7ff fe40 	bl	8000c46 <demoCheckboardDisplay>
    for (size_t i = 0; i < 100; ++i) {
 8000fc6:	68bb      	ldr	r3, [r7, #8]
 8000fc8:	3301      	adds	r3, #1
 8000fca:	60bb      	str	r3, [r7, #8]
 8000fcc:	68bb      	ldr	r3, [r7, #8]
 8000fce:	2b63      	cmp	r3, #99	; 0x63
 8000fd0:	d9dd      	bls.n	8000f8e <demoCheckboard+0x96>
    }
    for (size_t i = 0; i < 20; ++i) {
 8000fd2:	2300      	movs	r3, #0
 8000fd4:	607b      	str	r3, [r7, #4]
 8000fd6:	e00e      	b.n	8000ff6 <demoCheckboard+0xfe>
        posX += 7;
 8000fd8:	8bbb      	ldrh	r3, [r7, #28]
 8000fda:	3307      	adds	r3, #7
 8000fdc:	83bb      	strh	r3, [r7, #28]
        posY += 15;
 8000fde:	8b7b      	ldrh	r3, [r7, #26]
 8000fe0:	330f      	adds	r3, #15
 8000fe2:	837b      	strh	r3, [r7, #26]
        demoCheckboardDisplay(size, posX, posY);
 8000fe4:	8b7a      	ldrh	r2, [r7, #26]
 8000fe6:	8bb9      	ldrh	r1, [r7, #28]
 8000fe8:	8bfb      	ldrh	r3, [r7, #30]
 8000fea:	4618      	mov	r0, r3
 8000fec:	f7ff fe2b 	bl	8000c46 <demoCheckboardDisplay>
    for (size_t i = 0; i < 20; ++i) {
 8000ff0:	687b      	ldr	r3, [r7, #4]
 8000ff2:	3301      	adds	r3, #1
 8000ff4:	607b      	str	r3, [r7, #4]
 8000ff6:	687b      	ldr	r3, [r7, #4]
 8000ff8:	2b13      	cmp	r3, #19
 8000ffa:	d9ed      	bls.n	8000fd8 <demoCheckboard+0xe0>
    }
    for (size_t i = 0; i < 100; ++i) {
 8000ffc:	2300      	movs	r3, #0
 8000ffe:	603b      	str	r3, [r7, #0]
 8001000:	e024      	b.n	800104c <demoCheckboard+0x154>
        posX += 7 * (100 - i) / 100;
 8001002:	683b      	ldr	r3, [r7, #0]
 8001004:	461a      	mov	r2, r3
 8001006:	00db      	lsls	r3, r3, #3
 8001008:	1ad3      	subs	r3, r2, r3
 800100a:	f503 732f 	add.w	r3, r3, #700	; 0x2bc
 800100e:	4a14      	ldr	r2, [pc, #80]	; (8001060 <demoCheckboard+0x168>)
 8001010:	fba2 2303 	umull	r2, r3, r2, r3
 8001014:	095b      	lsrs	r3, r3, #5
 8001016:	b29a      	uxth	r2, r3
 8001018:	8bbb      	ldrh	r3, [r7, #28]
 800101a:	4413      	add	r3, r2
 800101c:	83bb      	strh	r3, [r7, #28]
        posY += 15 * (100 - i) / 100;
 800101e:	683b      	ldr	r3, [r7, #0]
 8001020:	461a      	mov	r2, r3
 8001022:	011b      	lsls	r3, r3, #4
 8001024:	1ad3      	subs	r3, r2, r3
 8001026:	f203 53dc 	addw	r3, r3, #1500	; 0x5dc
 800102a:	4a0d      	ldr	r2, [pc, #52]	; (8001060 <demoCheckboard+0x168>)
 800102c:	fba2 2303 	umull	r2, r3, r2, r3
 8001030:	095b      	lsrs	r3, r3, #5
 8001032:	b29a      	uxth	r2, r3
 8001034:	8b7b      	ldrh	r3, [r7, #26]
 8001036:	4413      	add	r3, r2
 8001038:	837b      	strh	r3, [r7, #26]
        demoCheckboardDisplay(size, posX, posY);
 800103a:	8b7a      	ldrh	r2, [r7, #26]
 800103c:	8bb9      	ldrh	r1, [r7, #28]
 800103e:	8bfb      	ldrh	r3, [r7, #30]
 8001040:	4618      	mov	r0, r3
 8001042:	f7ff fe00 	bl	8000c46 <demoCheckboardDisplay>
    for (size_t i = 0; i < 100; ++i) {
 8001046:	683b      	ldr	r3, [r7, #0]
 8001048:	3301      	adds	r3, #1
 800104a:	603b      	str	r3, [r7, #0]
 800104c:	683b      	ldr	r3, [r7, #0]
 800104e:	2b63      	cmp	r3, #99	; 0x63
 8001050:	d9d7      	bls.n	8001002 <demoCheckboard+0x10a>
    }
}
 8001052:	bf00      	nop
 8001054:	bf00      	nop
 8001056:	3720      	adds	r7, #32
 8001058:	46bd      	mov	sp, r7
 800105a:	bd80      	pop	{r7, pc}
 800105c:	cccccccd 	stclgt	12, cr12, [ip], {205}	; 0xcd
 8001060:	51eb851f 	mvnpl	r8, pc, lsl r5

08001064 <demoMandelbrotCalculateFast>:


uint16_t demoMandelbrotCalculateFast(float_fast_t realInit, float_fast_t imagInit, uint16_t maxiter) {
 8001064:	b480      	push	{r7}
 8001066:	b08b      	sub	sp, #44	; 0x2c
 8001068:	af00      	add	r7, sp, #0
 800106a:	60f8      	str	r0, [r7, #12]
 800106c:	60b9      	str	r1, [r7, #8]
 800106e:	4613      	mov	r3, r2
 8001070:	80fb      	strh	r3, [r7, #6]
    float_fast_t realq, imagq, real, imag;
    uint16_t iter;

    real = realInit;
 8001072:	68fb      	ldr	r3, [r7, #12]
 8001074:	627b      	str	r3, [r7, #36]	; 0x24
    imag = imagInit;
 8001076:	68bb      	ldr	r3, [r7, #8]
 8001078:	623b      	str	r3, [r7, #32]
    for (iter = 0; iter < maxiter; ++iter) {
 800107a:	2300      	movs	r3, #0
 800107c:	83fb      	strh	r3, [r7, #30]
 800107e:	e020      	b.n	80010c2 <demoMandelbrotCalculateFast+0x5e>
        realq = (real * real) >> FLOAT_FAST_BITS;
 8001080:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001082:	fb03 f303 	mul.w	r3, r3, r3
 8001086:	135b      	asrs	r3, r3, #13
 8001088:	61bb      	str	r3, [r7, #24]
        imagq = (imag * imag) >> FLOAT_FAST_BITS;
 800108a:	6a3b      	ldr	r3, [r7, #32]
 800108c:	fb03 f303 	mul.w	r3, r3, r3
 8001090:	135b      	asrs	r3, r3, #13
 8001092:	617b      	str	r3, [r7, #20]
        if ((realq + imagq) > (float_fast_t) 4 * FLOAT_FAST_FACT) {
 8001094:	69ba      	ldr	r2, [r7, #24]
 8001096:	697b      	ldr	r3, [r7, #20]
 8001098:	4413      	add	r3, r2
 800109a:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800109e:	dc15      	bgt.n	80010cc <demoMandelbrotCalculateFast+0x68>
            break;
        }
        imag = ((real * imag) >> (FLOAT_FAST_BITS - 1)) + imagInit;
 80010a0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80010a2:	6a3a      	ldr	r2, [r7, #32]
 80010a4:	fb02 f303 	mul.w	r3, r2, r3
 80010a8:	131b      	asrs	r3, r3, #12
 80010aa:	68ba      	ldr	r2, [r7, #8]
 80010ac:	4413      	add	r3, r2
 80010ae:	623b      	str	r3, [r7, #32]
        real = realq - imagq + realInit;
 80010b0:	69ba      	ldr	r2, [r7, #24]
 80010b2:	697b      	ldr	r3, [r7, #20]
 80010b4:	1ad3      	subs	r3, r2, r3
 80010b6:	68fa      	ldr	r2, [r7, #12]
 80010b8:	4413      	add	r3, r2
 80010ba:	627b      	str	r3, [r7, #36]	; 0x24
    for (iter = 0; iter < maxiter; ++iter) {
 80010bc:	8bfb      	ldrh	r3, [r7, #30]
 80010be:	3301      	adds	r3, #1
 80010c0:	83fb      	strh	r3, [r7, #30]
 80010c2:	8bfa      	ldrh	r2, [r7, #30]
 80010c4:	88fb      	ldrh	r3, [r7, #6]
 80010c6:	429a      	cmp	r2, r3
 80010c8:	d3da      	bcc.n	8001080 <demoMandelbrotCalculateFast+0x1c>
 80010ca:	e000      	b.n	80010ce <demoMandelbrotCalculateFast+0x6a>
            break;
 80010cc:	bf00      	nop
    }
    return iter;
 80010ce:	8bfb      	ldrh	r3, [r7, #30]
}
 80010d0:	4618      	mov	r0, r3
 80010d2:	372c      	adds	r7, #44	; 0x2c
 80010d4:	46bd      	mov	sp, r7
 80010d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010da:	4770      	bx	lr

080010dc <demoMandelbrotDisplayFast>:


void demoMandelbrotDisplayFast(float_fast_t realmin, float_fast_t imagmin, float_fast_t realmax, float_fast_t imagmax, uint16_t maxiter) {
 80010dc:	b590      	push	{r4, r7, lr}
 80010de:	f2ad 4d7c 	subw	sp, sp, #1148	; 0x47c
 80010e2:	af00      	add	r7, sp, #0
 80010e4:	f507 648f 	add.w	r4, r7, #1144	; 0x478
 80010e8:	f2a4 446c 	subw	r4, r4, #1132	; 0x46c
 80010ec:	6020      	str	r0, [r4, #0]
 80010ee:	f507 608f 	add.w	r0, r7, #1144	; 0x478
 80010f2:	f5a0 608e 	sub.w	r0, r0, #1136	; 0x470
 80010f6:	6001      	str	r1, [r0, #0]
 80010f8:	f507 618f 	add.w	r1, r7, #1144	; 0x478
 80010fc:	f2a1 4174 	subw	r1, r1, #1140	; 0x474
 8001100:	600a      	str	r2, [r1, #0]
 8001102:	f507 628f 	add.w	r2, r7, #1144	; 0x478
 8001106:	f5a2 628f 	sub.w	r2, r2, #1144	; 0x478
 800110a:	6013      	str	r3, [r2, #0]
    st7789_StartMemoryWrite();
 800110c:	f000 ff9a 	bl	8002044 <st7789_StartMemoryWrite>
    uint16_t lineBuffer[ST7789_LCD_WIDTH * 2];
    uint16_t *buf = (uint16_t *)(&lineBuffer);
 8001110:	f107 0394 	add.w	r3, r7, #148	; 0x94
 8001114:	f8c7 3464 	str.w	r3, [r7, #1124]	; 0x464
    uint16_t colormap[MANDELBROT_MAXITER_FAST];
    for (size_t i = 0; i < maxiter; ++i) {
 8001118:	2300      	movs	r3, #0
 800111a:	f8c7 3474 	str.w	r3, [r7, #1140]	; 0x474
 800111e:	e026      	b.n	800116e <demoMandelbrotDisplayFast+0x92>
        colormap[i] = st7789_RGBToColor(
            (maxiter - i - 1) * 256 / maxiter,
 8001120:	f8b7 2488 	ldrh.w	r2, [r7, #1160]	; 0x488
 8001124:	f8d7 3474 	ldr.w	r3, [r7, #1140]	; 0x474
 8001128:	1ad3      	subs	r3, r2, r3
 800112a:	3b01      	subs	r3, #1
 800112c:	021a      	lsls	r2, r3, #8
 800112e:	f8b7 3488 	ldrh.w	r3, [r7, #1160]	; 0x488
 8001132:	fbb2 f3f3 	udiv	r3, r2, r3
        colormap[i] = st7789_RGBToColor(
 8001136:	b2d8      	uxtb	r0, r3
            i * 256 / maxiter,
 8001138:	f8d7 3474 	ldr.w	r3, [r7, #1140]	; 0x474
 800113c:	021a      	lsls	r2, r3, #8
 800113e:	f8b7 3488 	ldrh.w	r3, [r7, #1160]	; 0x488
 8001142:	fbb2 f3f3 	udiv	r3, r2, r3
        colormap[i] = st7789_RGBToColor(
 8001146:	b2db      	uxtb	r3, r3
 8001148:	2200      	movs	r2, #0
 800114a:	4619      	mov	r1, r3
 800114c:	f001 f865 	bl	800221a <st7789_RGBToColor>
 8001150:	4603      	mov	r3, r0
 8001152:	4619      	mov	r1, r3
 8001154:	f507 638f 	add.w	r3, r7, #1144	; 0x478
 8001158:	f2a3 4364 	subw	r3, r3, #1124	; 0x464
 800115c:	f8d7 2474 	ldr.w	r2, [r7, #1140]	; 0x474
 8001160:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
    for (size_t i = 0; i < maxiter; ++i) {
 8001164:	f8d7 3474 	ldr.w	r3, [r7, #1140]	; 0x474
 8001168:	3301      	adds	r3, #1
 800116a:	f8c7 3474 	str.w	r3, [r7, #1140]	; 0x474
 800116e:	f8b7 3488 	ldrh.w	r3, [r7, #1160]	; 0x488
 8001172:	f8d7 2474 	ldr.w	r2, [r7, #1140]	; 0x474
 8001176:	429a      	cmp	r2, r3
 8001178:	d3d2      	bcc.n	8001120 <demoMandelbrotDisplayFast+0x44>
    }

    float_fast_t stepReal, stepImag, real, imag;
    uint8_t column, line;

    stepReal = (realmax - realmin) / ST7789_LCD_WIDTH;
 800117a:	f507 638f 	add.w	r3, r7, #1144	; 0x478
 800117e:	f2a3 4274 	subw	r2, r3, #1140	; 0x474
 8001182:	f507 638f 	add.w	r3, r7, #1144	; 0x478
 8001186:	f2a3 436c 	subw	r3, r3, #1132	; 0x46c
 800118a:	6812      	ldr	r2, [r2, #0]
 800118c:	681b      	ldr	r3, [r3, #0]
 800118e:	1ad3      	subs	r3, r2, r3
 8001190:	4a5e      	ldr	r2, [pc, #376]	; (800130c <demoMandelbrotDisplayFast+0x230>)
 8001192:	fb82 1203 	smull	r1, r2, r2, r3
 8001196:	441a      	add	r2, r3
 8001198:	11d2      	asrs	r2, r2, #7
 800119a:	17db      	asrs	r3, r3, #31
 800119c:	1ad3      	subs	r3, r2, r3
 800119e:	f8c7 3460 	str.w	r3, [r7, #1120]	; 0x460
    stepImag = (imagmax - imagmin) / ST7789_LCD_HEIGHT;
 80011a2:	f507 638f 	add.w	r3, r7, #1144	; 0x478
 80011a6:	f5a3 628f 	sub.w	r2, r3, #1144	; 0x478
 80011aa:	f507 638f 	add.w	r3, r7, #1144	; 0x478
 80011ae:	f5a3 638e 	sub.w	r3, r3, #1136	; 0x470
 80011b2:	6812      	ldr	r2, [r2, #0]
 80011b4:	681b      	ldr	r3, [r3, #0]
 80011b6:	1ad3      	subs	r3, r2, r3
 80011b8:	4a54      	ldr	r2, [pc, #336]	; (800130c <demoMandelbrotDisplayFast+0x230>)
 80011ba:	fb82 1203 	smull	r1, r2, r2, r3
 80011be:	441a      	add	r2, r3
 80011c0:	11d2      	asrs	r2, r2, #7
 80011c2:	17db      	asrs	r3, r3, #31
 80011c4:	1ad3      	subs	r3, r2, r3
 80011c6:	f8c7 345c 	str.w	r3, [r7, #1116]	; 0x45c

    imag = imagmax;
 80011ca:	f507 638f 	add.w	r3, r7, #1144	; 0x478
 80011ce:	f5a3 638f 	sub.w	r3, r3, #1144	; 0x478
 80011d2:	681b      	ldr	r3, [r3, #0]
 80011d4:	f8c7 346c 	str.w	r3, [r7, #1132]	; 0x46c
    for (line = 0; line < ST7789_LCD_HEIGHT; ++line) {
 80011d8:	2300      	movs	r3, #0
 80011da:	f887 346a 	strb.w	r3, [r7, #1130]	; 0x46a
 80011de:	e089      	b.n	80012f4 <demoMandelbrotDisplayFast+0x218>
        uint16_t *frontBuffer = ((line & 1 )== 0) ? (buf + ST7789_LCD_WIDTH) : buf;
 80011e0:	f897 346a 	ldrb.w	r3, [r7, #1130]	; 0x46a
 80011e4:	f003 0301 	and.w	r3, r3, #1
 80011e8:	2b00      	cmp	r3, #0
 80011ea:	d104      	bne.n	80011f6 <demoMandelbrotDisplayFast+0x11a>
 80011ec:	f8d7 3464 	ldr.w	r3, [r7, #1124]	; 0x464
 80011f0:	f503 73f0 	add.w	r3, r3, #480	; 0x1e0
 80011f4:	e001      	b.n	80011fa <demoMandelbrotDisplayFast+0x11e>
 80011f6:	f8d7 3464 	ldr.w	r3, [r7, #1124]	; 0x464
 80011fa:	f8c7 3458 	str.w	r3, [r7, #1112]	; 0x458
        uint16_t *backBuffer = ((line & 1) == 0) ? buf : (buf + ST7789_LCD_WIDTH);
 80011fe:	f897 346a 	ldrb.w	r3, [r7, #1130]	; 0x46a
 8001202:	f003 0301 	and.w	r3, r3, #1
 8001206:	2b00      	cmp	r3, #0
 8001208:	d004      	beq.n	8001214 <demoMandelbrotDisplayFast+0x138>
 800120a:	f8d7 3464 	ldr.w	r3, [r7, #1124]	; 0x464
 800120e:	f503 73f0 	add.w	r3, r3, #480	; 0x1e0
 8001212:	e001      	b.n	8001218 <demoMandelbrotDisplayFast+0x13c>
 8001214:	f8d7 3464 	ldr.w	r3, [r7, #1124]	; 0x464
 8001218:	f8c7 3454 	str.w	r3, [r7, #1108]	; 0x454
        if (line > 0) {
 800121c:	f897 346a 	ldrb.w	r3, [r7, #1130]	; 0x46a
 8001220:	2b00      	cmp	r3, #0
 8001222:	d005      	beq.n	8001230 <demoMandelbrotDisplayFast+0x154>
            st7789_WriteDMA(frontBuffer, ST7789_LCD_WIDTH * 2);
 8001224:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8001228:	f8d7 0458 	ldr.w	r0, [r7, #1112]	; 0x458
 800122c:	f000 fd68 	bl	8001d00 <st7789_WriteDMA>
        }

        real = realmin;
 8001230:	f507 638f 	add.w	r3, r7, #1144	; 0x478
 8001234:	f2a3 436c 	subw	r3, r3, #1132	; 0x46c
 8001238:	681b      	ldr	r3, [r3, #0]
 800123a:	f8c7 3470 	str.w	r3, [r7, #1136]	; 0x470
        for (column = 0; column < ST7789_LCD_WIDTH; ++column) {
 800123e:	2300      	movs	r3, #0
 8001240:	f887 346b 	strb.w	r3, [r7, #1131]	; 0x46b
 8001244:	e034      	b.n	80012b0 <demoMandelbrotDisplayFast+0x1d4>
            uint16_t color = demoMandelbrotCalculateFast(real, imag, maxiter);
 8001246:	f8b7 3488 	ldrh.w	r3, [r7, #1160]	; 0x488
 800124a:	461a      	mov	r2, r3
 800124c:	f8d7 146c 	ldr.w	r1, [r7, #1132]	; 0x46c
 8001250:	f8d7 0470 	ldr.w	r0, [r7, #1136]	; 0x470
 8001254:	f7ff ff06 	bl	8001064 <demoMandelbrotCalculateFast>
 8001258:	4603      	mov	r3, r0
 800125a:	f8a7 3468 	strh.w	r3, [r7, #1128]	; 0x468
            if (color == maxiter) {
 800125e:	f8b7 2468 	ldrh.w	r2, [r7, #1128]	; 0x468
 8001262:	f8b7 3488 	ldrh.w	r3, [r7, #1160]	; 0x488
 8001266:	429a      	cmp	r2, r3
 8001268:	d103      	bne.n	8001272 <demoMandelbrotDisplayFast+0x196>
                color = 0;
 800126a:	2300      	movs	r3, #0
 800126c:	f8a7 3468 	strh.w	r3, [r7, #1128]	; 0x468
 8001270:	e009      	b.n	8001286 <demoMandelbrotDisplayFast+0x1aa>
            }
            else {
                color = colormap[color];
 8001272:	f8b7 2468 	ldrh.w	r2, [r7, #1128]	; 0x468
 8001276:	f507 638f 	add.w	r3, r7, #1144	; 0x478
 800127a:	f2a3 4364 	subw	r3, r3, #1124	; 0x464
 800127e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8001282:	f8a7 3468 	strh.w	r3, [r7, #1128]	; 0x468
            }
            backBuffer[column] = color;
 8001286:	f897 346b 	ldrb.w	r3, [r7, #1131]	; 0x46b
 800128a:	005b      	lsls	r3, r3, #1
 800128c:	f8d7 2454 	ldr.w	r2, [r7, #1108]	; 0x454
 8001290:	4413      	add	r3, r2
 8001292:	f8b7 2468 	ldrh.w	r2, [r7, #1128]	; 0x468
 8001296:	801a      	strh	r2, [r3, #0]
            real += stepReal;
 8001298:	f8d7 2470 	ldr.w	r2, [r7, #1136]	; 0x470
 800129c:	f8d7 3460 	ldr.w	r3, [r7, #1120]	; 0x460
 80012a0:	4413      	add	r3, r2
 80012a2:	f8c7 3470 	str.w	r3, [r7, #1136]	; 0x470
        for (column = 0; column < ST7789_LCD_WIDTH; ++column) {
 80012a6:	f897 346b 	ldrb.w	r3, [r7, #1131]	; 0x46b
 80012aa:	3301      	adds	r3, #1
 80012ac:	f887 346b 	strb.w	r3, [r7, #1131]	; 0x46b
 80012b0:	f897 346b 	ldrb.w	r3, [r7, #1131]	; 0x46b
 80012b4:	2bef      	cmp	r3, #239	; 0xef
 80012b6:	d9c6      	bls.n	8001246 <demoMandelbrotDisplayFast+0x16a>
        }
        imag -= stepImag;
 80012b8:	f8d7 246c 	ldr.w	r2, [r7, #1132]	; 0x46c
 80012bc:	f8d7 345c 	ldr.w	r3, [r7, #1116]	; 0x45c
 80012c0:	1ad3      	subs	r3, r2, r3
 80012c2:	f8c7 346c 	str.w	r3, [r7, #1132]	; 0x46c

        if (line > 0) {
 80012c6:	f897 346a 	ldrb.w	r3, [r7, #1130]	; 0x46a
 80012ca:	2b00      	cmp	r3, #0
 80012cc:	d001      	beq.n	80012d2 <demoMandelbrotDisplayFast+0x1f6>
            st7789_WaitForDMA();
 80012ce:	f000 fd55 	bl	8001d7c <st7789_WaitForDMA>
        }
        if (line == ST7789_LCD_HEIGHT - 1) {
 80012d2:	f897 346a 	ldrb.w	r3, [r7, #1130]	; 0x46a
 80012d6:	2bef      	cmp	r3, #239	; 0xef
 80012d8:	d107      	bne.n	80012ea <demoMandelbrotDisplayFast+0x20e>
            st7789_WriteDMA(backBuffer, ST7789_LCD_WIDTH * 2);
 80012da:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 80012de:	f8d7 0454 	ldr.w	r0, [r7, #1108]	; 0x454
 80012e2:	f000 fd0d 	bl	8001d00 <st7789_WriteDMA>
            st7789_WaitForDMA();
 80012e6:	f000 fd49 	bl	8001d7c <st7789_WaitForDMA>
    for (line = 0; line < ST7789_LCD_HEIGHT; ++line) {
 80012ea:	f897 346a 	ldrb.w	r3, [r7, #1130]	; 0x46a
 80012ee:	3301      	adds	r3, #1
 80012f0:	f887 346a 	strb.w	r3, [r7, #1130]	; 0x46a
 80012f4:	f897 346a 	ldrb.w	r3, [r7, #1130]	; 0x46a
 80012f8:	2bef      	cmp	r3, #239	; 0xef
 80012fa:	f67f af71 	bls.w	80011e0 <demoMandelbrotDisplayFast+0x104>
        }
    }
}
 80012fe:	bf00      	nop
 8001300:	bf00      	nop
 8001302:	f207 477c 	addw	r7, r7, #1148	; 0x47c
 8001306:	46bd      	mov	sp, r7
 8001308:	bd90      	pop	{r4, r7, pc}
 800130a:	bf00      	nop
 800130c:	88888889 	stmhi	r8, {r0, r3, r7, fp, pc}

08001310 <demoMandelbrotCalculate>:


uint16_t demoMandelbrotCalculate(float_t realInit, float_t imagInit) {
 8001310:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8001314:	b096      	sub	sp, #88	; 0x58
 8001316:	af00      	add	r7, sp, #0
 8001318:	e9c7 010a 	strd	r0, r1, [r7, #40]	; 0x28
 800131c:	e9c7 2308 	strd	r2, r3, [r7, #32]
    float_t realq, imagq, real, imag;
    uint16_t iter;

    real = realInit;
 8001320:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8001324:	e9c7 2314 	strd	r2, r3, [r7, #80]	; 0x50
    imag = imagInit;
 8001328:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800132c:	e9c7 2312 	strd	r2, r3, [r7, #72]	; 0x48
    for (iter = 0; iter < MANDELBROT_MAXITER; ++iter) {
 8001330:	2300      	movs	r3, #0
 8001332:	f8a7 3046 	strh.w	r3, [r7, #70]	; 0x46
 8001336:	e082      	b.n	800143e <demoMandelbrotCalculate+0x12e>
        realq = (real * real) >> FLOAT_BITS;
 8001338:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 800133a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800133c:	fb03 f102 	mul.w	r1, r3, r2
 8001340:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 8001342:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8001344:	fb02 f303 	mul.w	r3, r2, r3
 8001348:	18ca      	adds	r2, r1, r3
 800134a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800134c:	fba3 4503 	umull	r4, r5, r3, r3
 8001350:	1953      	adds	r3, r2, r5
 8001352:	461d      	mov	r5, r3
 8001354:	f04f 0200 	mov.w	r2, #0
 8001358:	f04f 0300 	mov.w	r3, #0
 800135c:	0d22      	lsrs	r2, r4, #20
 800135e:	ea42 3205 	orr.w	r2, r2, r5, lsl #12
 8001362:	152b      	asrs	r3, r5, #20
 8001364:	e9c7 230e 	strd	r2, r3, [r7, #56]	; 0x38
        imagq = (imag * imag) >> FLOAT_BITS;
 8001368:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800136a:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800136c:	fb03 f102 	mul.w	r1, r3, r2
 8001370:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8001372:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8001374:	fb02 f303 	mul.w	r3, r2, r3
 8001378:	18ca      	adds	r2, r1, r3
 800137a:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800137c:	fba3 8903 	umull	r8, r9, r3, r3
 8001380:	eb02 0309 	add.w	r3, r2, r9
 8001384:	4699      	mov	r9, r3
 8001386:	f04f 0200 	mov.w	r2, #0
 800138a:	f04f 0300 	mov.w	r3, #0
 800138e:	ea4f 5218 	mov.w	r2, r8, lsr #20
 8001392:	ea42 3209 	orr.w	r2, r2, r9, lsl #12
 8001396:	ea4f 5329 	mov.w	r3, r9, asr #20
 800139a:	e9c7 230c 	strd	r2, r3, [r7, #48]	; 0x30
        if ((realq + imagq) > (float_t) 4 * FLOAT_FACT) {
 800139e:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 80013a2:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 80013a6:	1886      	adds	r6, r0, r2
 80013a8:	613e      	str	r6, [r7, #16]
 80013aa:	eb41 0303 	adc.w	r3, r1, r3
 80013ae:	617b      	str	r3, [r7, #20]
 80013b0:	4b2b      	ldr	r3, [pc, #172]	; (8001460 <demoMandelbrotCalculate+0x150>)
 80013b2:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 80013b6:	4602      	mov	r2, r0
 80013b8:	429a      	cmp	r2, r3
 80013ba:	460b      	mov	r3, r1
 80013bc:	f173 0300 	sbcs.w	r3, r3, #0
 80013c0:	da44      	bge.n	800144c <demoMandelbrotCalculate+0x13c>
            break;
        }
        imag = ((real * imag) >> (FLOAT_BITS - 1)) + imagInit;
 80013c2:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 80013c4:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80013c6:	fb03 f102 	mul.w	r1, r3, r2
 80013ca:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 80013cc:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80013ce:	fb02 f303 	mul.w	r3, r2, r3
 80013d2:	4419      	add	r1, r3
 80013d4:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 80013d6:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80013d8:	fba2 ab03 	umull	sl, fp, r2, r3
 80013dc:	eb01 030b 	add.w	r3, r1, fp
 80013e0:	469b      	mov	fp, r3
 80013e2:	f04f 0000 	mov.w	r0, #0
 80013e6:	f04f 0100 	mov.w	r1, #0
 80013ea:	ea4f 40da 	mov.w	r0, sl, lsr #19
 80013ee:	ea40 304b 	orr.w	r0, r0, fp, lsl #13
 80013f2:	ea4f 41eb 	mov.w	r1, fp, asr #19
 80013f6:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 80013fa:	1816      	adds	r6, r2, r0
 80013fc:	60be      	str	r6, [r7, #8]
 80013fe:	414b      	adcs	r3, r1
 8001400:	60fb      	str	r3, [r7, #12]
 8001402:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8001406:	e9c7 2312 	strd	r2, r3, [r7, #72]	; 0x48
        real = realq - imagq + realInit;
 800140a:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 800140e:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 8001412:	1a86      	subs	r6, r0, r2
 8001414:	61be      	str	r6, [r7, #24]
 8001416:	eb61 0303 	sbc.w	r3, r1, r3
 800141a:	61fb      	str	r3, [r7, #28]
 800141c:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8001420:	69b9      	ldr	r1, [r7, #24]
 8001422:	1851      	adds	r1, r2, r1
 8001424:	6039      	str	r1, [r7, #0]
 8001426:	69f9      	ldr	r1, [r7, #28]
 8001428:	414b      	adcs	r3, r1
 800142a:	607b      	str	r3, [r7, #4]
 800142c:	e9d7 2300 	ldrd	r2, r3, [r7]
 8001430:	e9c7 2314 	strd	r2, r3, [r7, #80]	; 0x50
    for (iter = 0; iter < MANDELBROT_MAXITER; ++iter) {
 8001434:	f8b7 3046 	ldrh.w	r3, [r7, #70]	; 0x46
 8001438:	3301      	adds	r3, #1
 800143a:	f8a7 3046 	strh.w	r3, [r7, #70]	; 0x46
 800143e:	f8b7 3046 	ldrh.w	r3, [r7, #70]	; 0x46
 8001442:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8001446:	f4ff af77 	bcc.w	8001338 <demoMandelbrotCalculate+0x28>
 800144a:	e000      	b.n	800144e <demoMandelbrotCalculate+0x13e>
            break;
 800144c:	bf00      	nop
    }
    return iter;
 800144e:	f8b7 3046 	ldrh.w	r3, [r7, #70]	; 0x46
}
 8001452:	4618      	mov	r0, r3
 8001454:	3758      	adds	r7, #88	; 0x58
 8001456:	46bd      	mov	sp, r7
 8001458:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
 800145c:	4770      	bx	lr
 800145e:	bf00      	nop
 8001460:	00400001 	subeq	r0, r0, r1

08001464 <demoMandelbrotDisplay>:


void demoMandelbrotDisplay(float_t realmin, float_t imagmin, float_t realmax, float_t imagmax) {
 8001464:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001468:	f6ad 4d14 	subw	sp, sp, #3092	; 0xc14
 800146c:	af00      	add	r7, sp, #0
 800146e:	f107 0610 	add.w	r6, r7, #16
 8001472:	e9c6 0100 	strd	r0, r1, [r6]
 8001476:	f107 0110 	add.w	r1, r7, #16
 800147a:	e941 2302 	strd	r2, r3, [r1, #-8]
    st7789_StartMemoryWrite();
 800147e:	f000 fde1 	bl	8002044 <st7789_StartMemoryWrite>
    uint16_t lineBuffer[ST7789_LCD_WIDTH * 2];
    uint16_t *buf = (uint16_t *)(&lineBuffer);
 8001482:	f607 0318 	addw	r3, r7, #2072	; 0x818
 8001486:	f8c7 3bf0 	str.w	r3, [r7, #3056]	; 0xbf0
    uint16_t colormap[MANDELBROT_MAXITER];
    for (int i = 0; i < MANDELBROT_MAXITER; ++i) {
 800148a:	2300      	movs	r3, #0
 800148c:	f8c7 3c0c 	str.w	r3, [r7, #3084]	; 0xc0c
 8001490:	e03b      	b.n	800150a <demoMandelbrotDisplay+0xa6>
        colormap[i] = st7789_RGBToColor(
 8001492:	f8d7 3c0c 	ldr.w	r3, [r7, #3084]	; 0xc0c
 8001496:	2b3f      	cmp	r3, #63	; 0x3f
 8001498:	dc0a      	bgt.n	80014b0 <demoMandelbrotDisplay+0x4c>
            i < 64 ? (MANDELBROT_MAXITER - i - 1) * 256 / MANDELBROT_MAXITER : 0,
 800149a:	f8d7 3c0c 	ldr.w	r3, [r7, #3084]	; 0xc0c
 800149e:	f5c3 737f 	rsb	r3, r3, #1020	; 0x3fc
 80014a2:	3303      	adds	r3, #3
 80014a4:	2b00      	cmp	r3, #0
 80014a6:	da00      	bge.n	80014aa <demoMandelbrotDisplay+0x46>
 80014a8:	3303      	adds	r3, #3
 80014aa:	109b      	asrs	r3, r3, #2
        colormap[i] = st7789_RGBToColor(
 80014ac:	b2d8      	uxtb	r0, r3
 80014ae:	e000      	b.n	80014b2 <demoMandelbrotDisplay+0x4e>
 80014b0:	2000      	movs	r0, #0
 80014b2:	f8d7 3c0c 	ldr.w	r3, [r7, #3084]	; 0xc0c
 80014b6:	2b3f      	cmp	r3, #63	; 0x3f
 80014b8:	dc05      	bgt.n	80014c6 <demoMandelbrotDisplay+0x62>
 80014ba:	f8d7 3c0c 	ldr.w	r3, [r7, #3084]	; 0xc0c
 80014be:	b2db      	uxtb	r3, r3
 80014c0:	009b      	lsls	r3, r3, #2
 80014c2:	b2db      	uxtb	r3, r3
 80014c4:	e00c      	b.n	80014e0 <demoMandelbrotDisplay+0x7c>
 80014c6:	f8d7 3c0c 	ldr.w	r3, [r7, #3084]	; 0xc0c
 80014ca:	f5b3 7f9f 	cmp.w	r3, #318	; 0x13e
 80014ce:	dc06      	bgt.n	80014de <demoMandelbrotDisplay+0x7a>
            i < 64 ? (i * 16) * 256 / MANDELBROT_MAXITER : (i < 319 ? 319 - i : 0),
 80014d0:	f8d7 3c0c 	ldr.w	r3, [r7, #3084]	; 0xc0c
 80014d4:	b2db      	uxtb	r3, r3
        colormap[i] = st7789_RGBToColor(
 80014d6:	f1c3 033f 	rsb	r3, r3, #63	; 0x3f
 80014da:	b2db      	uxtb	r3, r3
 80014dc:	e000      	b.n	80014e0 <demoMandelbrotDisplay+0x7c>
 80014de:	2300      	movs	r3, #0
 80014e0:	f8d7 2c0c 	ldr.w	r2, [r7, #3084]	; 0xc0c
 80014e4:	b2d2      	uxtb	r2, r2
 80014e6:	4619      	mov	r1, r3
 80014e8:	f000 fe97 	bl	800221a <st7789_RGBToColor>
 80014ec:	4603      	mov	r3, r0
 80014ee:	4619      	mov	r1, r3
 80014f0:	f507 6341 	add.w	r3, r7, #3088	; 0xc10
 80014f4:	f6a3 33f8 	subw	r3, r3, #3064	; 0xbf8
 80014f8:	f8d7 2c0c 	ldr.w	r2, [r7, #3084]	; 0xc0c
 80014fc:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
    for (int i = 0; i < MANDELBROT_MAXITER; ++i) {
 8001500:	f8d7 3c0c 	ldr.w	r3, [r7, #3084]	; 0xc0c
 8001504:	3301      	adds	r3, #1
 8001506:	f8c7 3c0c 	str.w	r3, [r7, #3084]	; 0xc0c
 800150a:	f8d7 3c0c 	ldr.w	r3, [r7, #3084]	; 0xc0c
 800150e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8001512:	dbbe      	blt.n	8001492 <demoMandelbrotDisplay+0x2e>
    }

    float_t stepReal, stepImag, real, imag;
    uint8_t column, line;

    stepReal = (realmax - realmin) / ST7789_LCD_WIDTH;
 8001514:	f107 0310 	add.w	r3, r7, #16
 8001518:	f607 4238 	addw	r2, r7, #3128	; 0xc38
 800151c:	e9d2 0100 	ldrd	r0, r1, [r2]
 8001520:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001524:	1a86      	subs	r6, r0, r2
 8001526:	603e      	str	r6, [r7, #0]
 8001528:	eb61 0303 	sbc.w	r3, r1, r3
 800152c:	607b      	str	r3, [r7, #4]
 800152e:	f04f 02f0 	mov.w	r2, #240	; 0xf0
 8001532:	f04f 0300 	mov.w	r3, #0
 8001536:	e9d7 0100 	ldrd	r0, r1, [r7]
 800153a:	f7fe fe2b 	bl	8000194 <__aeabi_ldivmod>
 800153e:	4602      	mov	r2, r0
 8001540:	460b      	mov	r3, r1
 8001542:	f607 31e8 	addw	r1, r7, #3048	; 0xbe8
 8001546:	e9c1 2300 	strd	r2, r3, [r1]
    stepImag = (imagmax - imagmin) / ST7789_LCD_HEIGHT;
 800154a:	f107 0310 	add.w	r3, r7, #16
 800154e:	f507 6244 	add.w	r2, r7, #3136	; 0xc40
 8001552:	e9d2 0100 	ldrd	r0, r1, [r2]
 8001556:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800155a:	ebb0 0a02 	subs.w	sl, r0, r2
 800155e:	eb61 0b03 	sbc.w	fp, r1, r3
 8001562:	f04f 02f0 	mov.w	r2, #240	; 0xf0
 8001566:	f04f 0300 	mov.w	r3, #0
 800156a:	4650      	mov	r0, sl
 800156c:	4659      	mov	r1, fp
 800156e:	f7fe fe11 	bl	8000194 <__aeabi_ldivmod>
 8001572:	4602      	mov	r2, r0
 8001574:	460b      	mov	r3, r1
 8001576:	f507 613e 	add.w	r1, r7, #3040	; 0xbe0
 800157a:	e9c1 2300 	strd	r2, r3, [r1]

    imag = imagmax;
 800157e:	f507 6344 	add.w	r3, r7, #3136	; 0xc40
 8001582:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001586:	f607 31f8 	addw	r1, r7, #3064	; 0xbf8
 800158a:	e9c1 2300 	strd	r2, r3, [r1]
    for (line = 0; line < ST7789_LCD_HEIGHT; ++line) {
 800158e:	2300      	movs	r3, #0
 8001590:	f887 3bf6 	strb.w	r3, [r7, #3062]	; 0xbf6
 8001594:	e09b      	b.n	80016ce <demoMandelbrotDisplay+0x26a>
        uint16_t *frontBuffer = ((line & 1 )== 0) ? (buf + ST7789_LCD_WIDTH) : buf;
 8001596:	f897 3bf6 	ldrb.w	r3, [r7, #3062]	; 0xbf6
 800159a:	f003 0301 	and.w	r3, r3, #1
 800159e:	2b00      	cmp	r3, #0
 80015a0:	d104      	bne.n	80015ac <demoMandelbrotDisplay+0x148>
 80015a2:	f8d7 3bf0 	ldr.w	r3, [r7, #3056]	; 0xbf0
 80015a6:	f503 73f0 	add.w	r3, r3, #480	; 0x1e0
 80015aa:	e001      	b.n	80015b0 <demoMandelbrotDisplay+0x14c>
 80015ac:	f8d7 3bf0 	ldr.w	r3, [r7, #3056]	; 0xbf0
 80015b0:	f8c7 3bdc 	str.w	r3, [r7, #3036]	; 0xbdc
        uint16_t *backBuffer = ((line & 1) == 0) ? buf : (buf + ST7789_LCD_WIDTH);
 80015b4:	f897 3bf6 	ldrb.w	r3, [r7, #3062]	; 0xbf6
 80015b8:	f003 0301 	and.w	r3, r3, #1
 80015bc:	2b00      	cmp	r3, #0
 80015be:	d004      	beq.n	80015ca <demoMandelbrotDisplay+0x166>
 80015c0:	f8d7 3bf0 	ldr.w	r3, [r7, #3056]	; 0xbf0
 80015c4:	f503 73f0 	add.w	r3, r3, #480	; 0x1e0
 80015c8:	e001      	b.n	80015ce <demoMandelbrotDisplay+0x16a>
 80015ca:	f8d7 3bf0 	ldr.w	r3, [r7, #3056]	; 0xbf0
 80015ce:	f8c7 3bd8 	str.w	r3, [r7, #3032]	; 0xbd8
        if (line > 0) {
 80015d2:	f897 3bf6 	ldrb.w	r3, [r7, #3062]	; 0xbf6
 80015d6:	2b00      	cmp	r3, #0
 80015d8:	d005      	beq.n	80015e6 <demoMandelbrotDisplay+0x182>
            st7789_WriteDMA(frontBuffer, ST7789_LCD_WIDTH * 2);
 80015da:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 80015de:	f8d7 0bdc 	ldr.w	r0, [r7, #3036]	; 0xbdc
 80015e2:	f000 fb8d 	bl	8001d00 <st7789_WriteDMA>
        }

        real = realmin;
 80015e6:	f107 0310 	add.w	r3, r7, #16
 80015ea:	e9d3 2300 	ldrd	r2, r3, [r3]
 80015ee:	f507 6140 	add.w	r1, r7, #3072	; 0xc00
 80015f2:	e9c1 2300 	strd	r2, r3, [r1]
        for (column = 0; column < ST7789_LCD_WIDTH; ++column) {
 80015f6:	2300      	movs	r3, #0
 80015f8:	f887 3bf7 	strb.w	r3, [r7, #3063]	; 0xbf7
 80015fc:	e03c      	b.n	8001678 <demoMandelbrotDisplay+0x214>
            uint16_t color = demoMandelbrotCalculate(real, imag);
 80015fe:	f607 33f8 	addw	r3, r7, #3064	; 0xbf8
 8001602:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001606:	f507 6140 	add.w	r1, r7, #3072	; 0xc00
 800160a:	e9d1 0100 	ldrd	r0, r1, [r1]
 800160e:	f7ff fe7f 	bl	8001310 <demoMandelbrotCalculate>
 8001612:	4603      	mov	r3, r0
 8001614:	f8a7 3bf4 	strh.w	r3, [r7, #3060]	; 0xbf4
            if (color == MANDELBROT_MAXITER) {
 8001618:	f8b7 3bf4 	ldrh.w	r3, [r7, #3060]	; 0xbf4
 800161c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8001620:	d103      	bne.n	800162a <demoMandelbrotDisplay+0x1c6>
                color = 0;
 8001622:	2300      	movs	r3, #0
 8001624:	f8a7 3bf4 	strh.w	r3, [r7, #3060]	; 0xbf4
 8001628:	e009      	b.n	800163e <demoMandelbrotDisplay+0x1da>
            }
            else {
                color = colormap[color];
 800162a:	f8b7 2bf4 	ldrh.w	r2, [r7, #3060]	; 0xbf4
 800162e:	f507 6341 	add.w	r3, r7, #3088	; 0xc10
 8001632:	f6a3 33f8 	subw	r3, r3, #3064	; 0xbf8
 8001636:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 800163a:	f8a7 3bf4 	strh.w	r3, [r7, #3060]	; 0xbf4
            }
            backBuffer[column] = color;
 800163e:	f897 3bf7 	ldrb.w	r3, [r7, #3063]	; 0xbf7
 8001642:	005b      	lsls	r3, r3, #1
 8001644:	f8d7 2bd8 	ldr.w	r2, [r7, #3032]	; 0xbd8
 8001648:	4413      	add	r3, r2
 800164a:	f8b7 2bf4 	ldrh.w	r2, [r7, #3060]	; 0xbf4
 800164e:	801a      	strh	r2, [r3, #0]
            real += stepReal;
 8001650:	f507 6340 	add.w	r3, r7, #3072	; 0xc00
 8001654:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001658:	f607 33e8 	addw	r3, r7, #3048	; 0xbe8
 800165c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001660:	1884      	adds	r4, r0, r2
 8001662:	eb41 0503 	adc.w	r5, r1, r3
 8001666:	f507 6340 	add.w	r3, r7, #3072	; 0xc00
 800166a:	e9c3 4500 	strd	r4, r5, [r3]
        for (column = 0; column < ST7789_LCD_WIDTH; ++column) {
 800166e:	f897 3bf7 	ldrb.w	r3, [r7, #3063]	; 0xbf7
 8001672:	3301      	adds	r3, #1
 8001674:	f887 3bf7 	strb.w	r3, [r7, #3063]	; 0xbf7
 8001678:	f897 3bf7 	ldrb.w	r3, [r7, #3063]	; 0xbf7
 800167c:	2bef      	cmp	r3, #239	; 0xef
 800167e:	d9be      	bls.n	80015fe <demoMandelbrotDisplay+0x19a>
        }
        imag -= stepImag;
 8001680:	f607 33f8 	addw	r3, r7, #3064	; 0xbf8
 8001684:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001688:	f507 633e 	add.w	r3, r7, #3040	; 0xbe0
 800168c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001690:	ebb0 0802 	subs.w	r8, r0, r2
 8001694:	eb61 0903 	sbc.w	r9, r1, r3
 8001698:	f607 33f8 	addw	r3, r7, #3064	; 0xbf8
 800169c:	e9c3 8900 	strd	r8, r9, [r3]

        if (line > 0) {
 80016a0:	f897 3bf6 	ldrb.w	r3, [r7, #3062]	; 0xbf6
 80016a4:	2b00      	cmp	r3, #0
 80016a6:	d001      	beq.n	80016ac <demoMandelbrotDisplay+0x248>
            st7789_WaitForDMA();
 80016a8:	f000 fb68 	bl	8001d7c <st7789_WaitForDMA>
        }
        if (line == ST7789_LCD_HEIGHT - 1) {
 80016ac:	f897 3bf6 	ldrb.w	r3, [r7, #3062]	; 0xbf6
 80016b0:	2bef      	cmp	r3, #239	; 0xef
 80016b2:	d107      	bne.n	80016c4 <demoMandelbrotDisplay+0x260>
            st7789_WriteDMA(backBuffer, ST7789_LCD_WIDTH * 2);
 80016b4:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 80016b8:	f8d7 0bd8 	ldr.w	r0, [r7, #3032]	; 0xbd8
 80016bc:	f000 fb20 	bl	8001d00 <st7789_WriteDMA>
            st7789_WaitForDMA();
 80016c0:	f000 fb5c 	bl	8001d7c <st7789_WaitForDMA>
    for (line = 0; line < ST7789_LCD_HEIGHT; ++line) {
 80016c4:	f897 3bf6 	ldrb.w	r3, [r7, #3062]	; 0xbf6
 80016c8:	3301      	adds	r3, #1
 80016ca:	f887 3bf6 	strb.w	r3, [r7, #3062]	; 0xbf6
 80016ce:	f897 3bf6 	ldrb.w	r3, [r7, #3062]	; 0xbf6
 80016d2:	2bef      	cmp	r3, #239	; 0xef
 80016d4:	f67f af5f 	bls.w	8001596 <demoMandelbrotDisplay+0x132>
        }
    }
}
 80016d8:	bf00      	nop
 80016da:	bf00      	nop
 80016dc:	f607 4714 	addw	r7, r7, #3092	; 0xc14
 80016e0:	46bd      	mov	sp, r7
 80016e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080016e8 <demoMandelbrot>:


void demoMandelbrot() {
 80016e8:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80016ec:	b08e      	sub	sp, #56	; 0x38
 80016ee:	af04      	add	r7, sp, #16
    float realMin = -2.0;
 80016f0:	f04f 4340 	mov.w	r3, #3221225472	; 0xc0000000
 80016f4:	627b      	str	r3, [r7, #36]	; 0x24
    float imagMin = -1.35;
 80016f6:	4b81      	ldr	r3, [pc, #516]	; (80018fc <demoMandelbrot+0x214>)
 80016f8:	623b      	str	r3, [r7, #32]
    float realMax = 0.7;
 80016fa:	4b81      	ldr	r3, [pc, #516]	; (8001900 <demoMandelbrot+0x218>)
 80016fc:	61fb      	str	r3, [r7, #28]
    float imagMax = 1.35;
 80016fe:	4b81      	ldr	r3, [pc, #516]	; (8001904 <demoMandelbrot+0x21c>)
 8001700:	61bb      	str	r3, [r7, #24]
    const float realFinalMin = -0.749;
 8001702:	4b81      	ldr	r3, [pc, #516]	; (8001908 <demoMandelbrot+0x220>)
 8001704:	60fb      	str	r3, [r7, #12]
    const float imagFinalMin = 0.125;
 8001706:	f04f 5378 	mov.w	r3, #1040187392	; 0x3e000000
 800170a:	60bb      	str	r3, [r7, #8]
    const float realFinalMax = -0.739;
 800170c:	4b7f      	ldr	r3, [pc, #508]	; (800190c <demoMandelbrot+0x224>)
 800170e:	607b      	str	r3, [r7, #4]
    const float imagFinalMax = 0.135;
 8001710:	4b7f      	ldr	r3, [pc, #508]	; (8001910 <demoMandelbrot+0x228>)
 8001712:	603b      	str	r3, [r7, #0]

    for (size_t i = 8; i < 16; ++i) {
 8001714:	2308      	movs	r3, #8
 8001716:	617b      	str	r3, [r7, #20]
 8001718:	e033      	b.n	8001782 <demoMandelbrot+0x9a>
        demoMandelbrotDisplayFast(realMin * FLOAT_FAST_FACT, imagMin * FLOAT_FAST_FACT, realMax * FLOAT_FAST_FACT, imagMax * FLOAT_FAST_FACT, i);
 800171a:	edd7 7a09 	vldr	s15, [r7, #36]	; 0x24
 800171e:	ed9f 7a7d 	vldr	s14, [pc, #500]	; 8001914 <demoMandelbrot+0x22c>
 8001722:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001726:	eefd 6ae7 	vcvt.s32.f32	s13, s15
 800172a:	edd7 7a08 	vldr	s15, [r7, #32]
 800172e:	ed9f 7a79 	vldr	s14, [pc, #484]	; 8001914 <demoMandelbrot+0x22c>
 8001732:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001736:	eebd 6ae7 	vcvt.s32.f32	s12, s15
 800173a:	edd7 7a07 	vldr	s15, [r7, #28]
 800173e:	ed9f 7a75 	vldr	s14, [pc, #468]	; 8001914 <demoMandelbrot+0x22c>
 8001742:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001746:	eefd 5ae7 	vcvt.s32.f32	s11, s15
 800174a:	edd7 7a06 	vldr	s15, [r7, #24]
 800174e:	ed9f 7a71 	vldr	s14, [pc, #452]	; 8001914 <demoMandelbrot+0x22c>
 8001752:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001756:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800175a:	697b      	ldr	r3, [r7, #20]
 800175c:	b29b      	uxth	r3, r3
 800175e:	9300      	str	r3, [sp, #0]
 8001760:	ee17 3a90 	vmov	r3, s15
 8001764:	ee15 2a90 	vmov	r2, s11
 8001768:	ee16 1a10 	vmov	r1, s12
 800176c:	ee16 0a90 	vmov	r0, s13
 8001770:	f7ff fcb4 	bl	80010dc <demoMandelbrotDisplayFast>
        st7789_WaitNanosecs(20000);
 8001774:	f644 6020 	movw	r0, #20000	; 0x4e20
 8001778:	f000 fa52 	bl	8001c20 <st7789_WaitNanosecs>
    for (size_t i = 8; i < 16; ++i) {
 800177c:	697b      	ldr	r3, [r7, #20]
 800177e:	3301      	adds	r3, #1
 8001780:	617b      	str	r3, [r7, #20]
 8001782:	697b      	ldr	r3, [r7, #20]
 8001784:	2b0f      	cmp	r3, #15
 8001786:	d9c8      	bls.n	800171a <demoMandelbrot+0x32>
    }
    for (size_t i = 0; i < 24; ++i) {
 8001788:	2300      	movs	r3, #0
 800178a:	613b      	str	r3, [r7, #16]
 800178c:	e071      	b.n	8001872 <demoMandelbrot+0x18a>
        realMin = (realMin * 9 + realFinalMin) / 10;
 800178e:	edd7 7a09 	vldr	s15, [r7, #36]	; 0x24
 8001792:	eeb2 7a02 	vmov.f32	s14, #34	; 0x41100000  9.0
 8001796:	ee27 7a87 	vmul.f32	s14, s15, s14
 800179a:	edd7 7a03 	vldr	s15, [r7, #12]
 800179e:	ee37 7a27 	vadd.f32	s14, s14, s15
 80017a2:	eef2 6a04 	vmov.f32	s13, #36	; 0x41200000  10.0
 80017a6:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80017aa:	edc7 7a09 	vstr	s15, [r7, #36]	; 0x24
        realMax = (realMax * 9 + realFinalMax) / 10;
 80017ae:	edd7 7a07 	vldr	s15, [r7, #28]
 80017b2:	eeb2 7a02 	vmov.f32	s14, #34	; 0x41100000  9.0
 80017b6:	ee27 7a87 	vmul.f32	s14, s15, s14
 80017ba:	edd7 7a01 	vldr	s15, [r7, #4]
 80017be:	ee37 7a27 	vadd.f32	s14, s14, s15
 80017c2:	eef2 6a04 	vmov.f32	s13, #36	; 0x41200000  10.0
 80017c6:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80017ca:	edc7 7a07 	vstr	s15, [r7, #28]
        imagMin = (imagMin * 9 + imagFinalMin) / 10;
 80017ce:	edd7 7a08 	vldr	s15, [r7, #32]
 80017d2:	eeb2 7a02 	vmov.f32	s14, #34	; 0x41100000  9.0
 80017d6:	ee27 7a87 	vmul.f32	s14, s15, s14
 80017da:	edd7 7a02 	vldr	s15, [r7, #8]
 80017de:	ee37 7a27 	vadd.f32	s14, s14, s15
 80017e2:	eef2 6a04 	vmov.f32	s13, #36	; 0x41200000  10.0
 80017e6:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80017ea:	edc7 7a08 	vstr	s15, [r7, #32]
        imagMax = (imagMax * 9 + imagFinalMax) / 10;
 80017ee:	edd7 7a06 	vldr	s15, [r7, #24]
 80017f2:	eeb2 7a02 	vmov.f32	s14, #34	; 0x41100000  9.0
 80017f6:	ee27 7a87 	vmul.f32	s14, s15, s14
 80017fa:	edd7 7a00 	vldr	s15, [r7]
 80017fe:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001802:	eef2 6a04 	vmov.f32	s13, #36	; 0x41200000  10.0
 8001806:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800180a:	edc7 7a06 	vstr	s15, [r7, #24]
        demoMandelbrotDisplayFast(realMin * FLOAT_FAST_FACT, imagMin * FLOAT_FAST_FACT, realMax * FLOAT_FAST_FACT, imagMax * FLOAT_FAST_FACT, 16 + i);
 800180e:	edd7 7a09 	vldr	s15, [r7, #36]	; 0x24
 8001812:	ed9f 7a40 	vldr	s14, [pc, #256]	; 8001914 <demoMandelbrot+0x22c>
 8001816:	ee67 7a87 	vmul.f32	s15, s15, s14
 800181a:	eefd 6ae7 	vcvt.s32.f32	s13, s15
 800181e:	edd7 7a08 	vldr	s15, [r7, #32]
 8001822:	ed9f 7a3c 	vldr	s14, [pc, #240]	; 8001914 <demoMandelbrot+0x22c>
 8001826:	ee67 7a87 	vmul.f32	s15, s15, s14
 800182a:	eebd 6ae7 	vcvt.s32.f32	s12, s15
 800182e:	edd7 7a07 	vldr	s15, [r7, #28]
 8001832:	ed9f 7a38 	vldr	s14, [pc, #224]	; 8001914 <demoMandelbrot+0x22c>
 8001836:	ee67 7a87 	vmul.f32	s15, s15, s14
 800183a:	eefd 5ae7 	vcvt.s32.f32	s11, s15
 800183e:	edd7 7a06 	vldr	s15, [r7, #24]
 8001842:	ed9f 7a34 	vldr	s14, [pc, #208]	; 8001914 <demoMandelbrot+0x22c>
 8001846:	ee67 7a87 	vmul.f32	s15, s15, s14
 800184a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800184e:	693b      	ldr	r3, [r7, #16]
 8001850:	b29b      	uxth	r3, r3
 8001852:	3310      	adds	r3, #16
 8001854:	b29b      	uxth	r3, r3
 8001856:	9300      	str	r3, [sp, #0]
 8001858:	ee17 3a90 	vmov	r3, s15
 800185c:	ee15 2a90 	vmov	r2, s11
 8001860:	ee16 1a10 	vmov	r1, s12
 8001864:	ee16 0a90 	vmov	r0, s13
 8001868:	f7ff fc38 	bl	80010dc <demoMandelbrotDisplayFast>
    for (size_t i = 0; i < 24; ++i) {
 800186c:	693b      	ldr	r3, [r7, #16]
 800186e:	3301      	adds	r3, #1
 8001870:	613b      	str	r3, [r7, #16]
 8001872:	693b      	ldr	r3, [r7, #16]
 8001874:	2b17      	cmp	r3, #23
 8001876:	d98a      	bls.n	800178e <demoMandelbrot+0xa6>
    }

    demoMandelbrotDisplay(realFinalMin * FLOAT_FACT, imagFinalMin * FLOAT_FACT, realFinalMax * FLOAT_FACT, imagFinalMax * FLOAT_FACT);
 8001878:	edd7 7a03 	vldr	s15, [r7, #12]
 800187c:	ed9f 7a26 	vldr	s14, [pc, #152]	; 8001918 <demoMandelbrot+0x230>
 8001880:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001884:	ee17 0a90 	vmov	r0, s15
 8001888:	f000 fda5 	bl	80023d6 <__aeabi_f2lz>
 800188c:	4680      	mov	r8, r0
 800188e:	4689      	mov	r9, r1
 8001890:	edd7 7a02 	vldr	s15, [r7, #8]
 8001894:	ed9f 7a20 	vldr	s14, [pc, #128]	; 8001918 <demoMandelbrot+0x230>
 8001898:	ee67 7a87 	vmul.f32	s15, s15, s14
 800189c:	ee17 0a90 	vmov	r0, s15
 80018a0:	f000 fd99 	bl	80023d6 <__aeabi_f2lz>
 80018a4:	4682      	mov	sl, r0
 80018a6:	468b      	mov	fp, r1
 80018a8:	edd7 7a01 	vldr	s15, [r7, #4]
 80018ac:	ed9f 7a1a 	vldr	s14, [pc, #104]	; 8001918 <demoMandelbrot+0x230>
 80018b0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80018b4:	ee17 0a90 	vmov	r0, s15
 80018b8:	f000 fd8d 	bl	80023d6 <__aeabi_f2lz>
 80018bc:	4604      	mov	r4, r0
 80018be:	460d      	mov	r5, r1
 80018c0:	edd7 7a00 	vldr	s15, [r7]
 80018c4:	ed9f 7a14 	vldr	s14, [pc, #80]	; 8001918 <demoMandelbrot+0x230>
 80018c8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80018cc:	ee17 0a90 	vmov	r0, s15
 80018d0:	f000 fd81 	bl	80023d6 <__aeabi_f2lz>
 80018d4:	4602      	mov	r2, r0
 80018d6:	460b      	mov	r3, r1
 80018d8:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80018dc:	e9cd 4500 	strd	r4, r5, [sp]
 80018e0:	4652      	mov	r2, sl
 80018e2:	465b      	mov	r3, fp
 80018e4:	4640      	mov	r0, r8
 80018e6:	4649      	mov	r1, r9
 80018e8:	f7ff fdbc 	bl	8001464 <demoMandelbrotDisplay>
    st7789_WaitNanosecs(4000000);
 80018ec:	480b      	ldr	r0, [pc, #44]	; (800191c <demoMandelbrot+0x234>)
 80018ee:	f000 f997 	bl	8001c20 <st7789_WaitNanosecs>
}
 80018f2:	bf00      	nop
 80018f4:	3728      	adds	r7, #40	; 0x28
 80018f6:	46bd      	mov	sp, r7
 80018f8:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80018fc:	bfaccccd 	svclt	0x00accccd
 8001900:	3f333333 	svccc	0x00333333
 8001904:	3faccccd 	svccc	0x00accccd
 8001908:	bf3fbe77 	svclt	0x003fbe77
 800190c:	bf3d2f1b 	svclt	0x003d2f1b
 8001910:	3e0a3d71 	mcrcc	13, 0, r3, cr10, cr1, {3}
 8001914:	46000000 	strmi	r0, [r0], -r0
 8001918:	49800000 	stmibmi	r0, {}	; <UNPREDICTABLE>
 800191c:	003d0900 	eorseq	r0, sp, r0, lsl #18

08001920 <demoIcon>:
        batch += 1;
    }
    st7789_WaitNanosecs(2000000);
}

void demoIcon(uint32_t image_addr){
 8001920:	b580      	push	{r7, lr}
 8001922:	b0fe      	sub	sp, #504	; 0x1f8
 8001924:	af00      	add	r7, sp, #0
 8001926:	f507 73fc 	add.w	r3, r7, #504	; 0x1f8
 800192a:	f5a3 73fa 	sub.w	r3, r3, #500	; 0x1f4
 800192e:	6018      	str	r0, [r3, #0]
    uint16_t line = 0;
 8001930:	2300      	movs	r3, #0
 8001932:	f8a7 31f6 	strh.w	r3, [r7, #502]	; 0x1f6
    uint16_t batch = 0;
 8001936:	2300      	movs	r3, #0
 8001938:	f8a7 31f4 	strh.w	r3, [r7, #500]	; 0x1f4
    uint16_t pixels[IMAGE_BUFFER_SIZE];
    uint32_t value=0;
 800193c:	2300      	movs	r3, #0
 800193e:	f8c7 31ec 	str.w	r3, [r7, #492]	; 0x1ec

    st7789_Clear(0x0000);
 8001942:	2000      	movs	r0, #0
 8001944:	f000 fc58 	bl	80021f8 <st7789_Clear>
    st7789_StartMemoryWrite();
 8001948:	f000 fb7c 	bl	8002044 <st7789_StartMemoryWrite>
    while (line < ST7789_LCD_HEIGHT) {
 800194c:	e049      	b.n	80019e2 <demoIcon+0xc2>
//        pixels[0] = batch;
//        pixels[1] = PIXEL_BUFFER_SIZE;
//        svcCall(0xff, &pixels);

        for (uint32_t i=0; i<100; i+=2){
 800194e:	2300      	movs	r3, #0
 8001950:	f8c7 31f0 	str.w	r3, [r7, #496]	; 0x1f0
 8001954:	e02e      	b.n	80019b4 <demoIcon+0x94>
            value = (*(uint32_t *)(image_addr + 2*i + batch * 200));
 8001956:	f8d7 31f0 	ldr.w	r3, [r7, #496]	; 0x1f0
 800195a:	005b      	lsls	r3, r3, #1
 800195c:	f8b7 21f4 	ldrh.w	r2, [r7, #500]	; 0x1f4
 8001960:	21c8      	movs	r1, #200	; 0xc8
 8001962:	fb01 f202 	mul.w	r2, r1, r2
 8001966:	441a      	add	r2, r3
 8001968:	f507 73fc 	add.w	r3, r7, #504	; 0x1f8
 800196c:	f5a3 73fa 	sub.w	r3, r3, #500	; 0x1f4
 8001970:	681b      	ldr	r3, [r3, #0]
 8001972:	4413      	add	r3, r2
 8001974:	681b      	ldr	r3, [r3, #0]
 8001976:	f8c7 31ec 	str.w	r3, [r7, #492]	; 0x1ec
            pixels[i] = (uint16_t)(value >> 16);
 800197a:	f8d7 31ec 	ldr.w	r3, [r7, #492]	; 0x1ec
 800197e:	0c1b      	lsrs	r3, r3, #16
 8001980:	b299      	uxth	r1, r3
 8001982:	f507 73fc 	add.w	r3, r7, #504	; 0x1f8
 8001986:	f5a3 73f6 	sub.w	r3, r3, #492	; 0x1ec
 800198a:	f8d7 21f0 	ldr.w	r2, [r7, #496]	; 0x1f0
 800198e:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
            pixels[i+1] = (uint16_t)value;
 8001992:	f8d7 31f0 	ldr.w	r3, [r7, #496]	; 0x1f0
 8001996:	1c5a      	adds	r2, r3, #1
 8001998:	f8d7 31ec 	ldr.w	r3, [r7, #492]	; 0x1ec
 800199c:	b299      	uxth	r1, r3
 800199e:	f507 73fc 	add.w	r3, r7, #504	; 0x1f8
 80019a2:	f5a3 73f6 	sub.w	r3, r3, #492	; 0x1ec
 80019a6:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
        for (uint32_t i=0; i<100; i+=2){
 80019aa:	f8d7 31f0 	ldr.w	r3, [r7, #496]	; 0x1f0
 80019ae:	3302      	adds	r3, #2
 80019b0:	f8c7 31f0 	str.w	r3, [r7, #496]	; 0x1f0
 80019b4:	f8d7 31f0 	ldr.w	r3, [r7, #496]	; 0x1f0
 80019b8:	2b63      	cmp	r3, #99	; 0x63
 80019ba:	d9cc      	bls.n	8001956 <demoIcon+0x36>
        }

        st7789_WriteDMA(&pixels, IMAGE_BUFFER_SIZE * 2);
 80019bc:	f107 030c 	add.w	r3, r7, #12
 80019c0:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 80019c4:	4618      	mov	r0, r3
 80019c6:	f000 f99b 	bl	8001d00 <st7789_WriteDMA>
        st7789_WaitForDMA();
 80019ca:	f000 f9d7 	bl	8001d7c <st7789_WaitForDMA>
        line = line + IMAGE_BUFFER_LINES;
 80019ce:	f8b7 31f6 	ldrh.w	r3, [r7, #502]	; 0x1f6
 80019d2:	3301      	adds	r3, #1
 80019d4:	f8a7 31f6 	strh.w	r3, [r7, #502]	; 0x1f6
        batch += 1;
 80019d8:	f8b7 31f4 	ldrh.w	r3, [r7, #500]	; 0x1f4
 80019dc:	3301      	adds	r3, #1
 80019de:	f8a7 31f4 	strh.w	r3, [r7, #500]	; 0x1f4
    while (line < ST7789_LCD_HEIGHT) {
 80019e2:	f8b7 31f6 	ldrh.w	r3, [r7, #502]	; 0x1f6
 80019e6:	2bef      	cmp	r3, #239	; 0xef
 80019e8:	d9b1      	bls.n	800194e <demoIcon+0x2e>
    }
    st7789_WaitNanosecs(2000000);
 80019ea:	4804      	ldr	r0, [pc, #16]	; (80019fc <demoIcon+0xdc>)
 80019ec:	f000 f918 	bl	8001c20 <st7789_WaitNanosecs>

}
 80019f0:	bf00      	nop
 80019f2:	f507 77fc 	add.w	r7, r7, #504	; 0x1f8
 80019f6:	46bd      	mov	sp, r7
 80019f8:	bd80      	pop	{r7, pc}
 80019fa:	bf00      	nop
 80019fc:	001e8480 	andseq	r8, lr, r0, lsl #9

08001a00 <delay_ms>:



void delay_ms(const uint32_t ms){
 8001a00:	b480      	push	{r7}
 8001a02:	b085      	sub	sp, #20
 8001a04:	af00      	add	r7, sp, #0
 8001a06:	6078      	str	r0, [r7, #4]
    uint32_t start = tick;
 8001a08:	4b08      	ldr	r3, [pc, #32]	; (8001a2c <delay_ms+0x2c>)
 8001a0a:	681b      	ldr	r3, [r3, #0]
 8001a0c:	60fb      	str	r3, [r7, #12]
    while ((tick - start)<ms){}
 8001a0e:	bf00      	nop
 8001a10:	4b06      	ldr	r3, [pc, #24]	; (8001a2c <delay_ms+0x2c>)
 8001a12:	681a      	ldr	r2, [r3, #0]
 8001a14:	68fb      	ldr	r3, [r7, #12]
 8001a16:	1ad3      	subs	r3, r2, r3
 8001a18:	687a      	ldr	r2, [r7, #4]
 8001a1a:	429a      	cmp	r2, r3
 8001a1c:	d8f8      	bhi.n	8001a10 <delay_ms+0x10>
}
 8001a1e:	bf00      	nop
 8001a20:	bf00      	nop
 8001a22:	3714      	adds	r7, #20
 8001a24:	46bd      	mov	sp, r7
 8001a26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a2a:	4770      	bx	lr
 8001a2c:	20000450 	andcs	r0, r0, r0, asr r4

08001a30 <GPIO_Init>:

void GPIO_Init(void){
 8001a30:	b480      	push	{r7}
 8001a32:	af00      	add	r7, sp, #0
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOCEN;
 8001a34:	4b0f      	ldr	r3, [pc, #60]	; (8001a74 <GPIO_Init+0x44>)
 8001a36:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a38:	4a0e      	ldr	r2, [pc, #56]	; (8001a74 <GPIO_Init+0x44>)
 8001a3a:	f043 0304 	orr.w	r3, r3, #4
 8001a3e:	6313      	str	r3, [r2, #48]	; 0x30

    SET_BIT(GPIOC->BSRR, GPIO_BSRR_BS13);
 8001a40:	4b0d      	ldr	r3, [pc, #52]	; (8001a78 <GPIO_Init+0x48>)
 8001a42:	699b      	ldr	r3, [r3, #24]
 8001a44:	4a0c      	ldr	r2, [pc, #48]	; (8001a78 <GPIO_Init+0x48>)
 8001a46:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8001a4a:	6193      	str	r3, [r2, #24]
    MODIFY_REG(GPIOC->MODER, GPIO_MODER_MODE13_1, GPIO_MODER_MODE13_0);
 8001a4c:	4b0a      	ldr	r3, [pc, #40]	; (8001a78 <GPIO_Init+0x48>)
 8001a4e:	681b      	ldr	r3, [r3, #0]
 8001a50:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8001a54:	4a08      	ldr	r2, [pc, #32]	; (8001a78 <GPIO_Init+0x48>)
 8001a56:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8001a5a:	6013      	str	r3, [r2, #0]
    CLEAR_BIT(GPIOC->OTYPER, GPIO_OTYPER_OT13);
 8001a5c:	4b06      	ldr	r3, [pc, #24]	; (8001a78 <GPIO_Init+0x48>)
 8001a5e:	685b      	ldr	r3, [r3, #4]
 8001a60:	4a05      	ldr	r2, [pc, #20]	; (8001a78 <GPIO_Init+0x48>)
 8001a62:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8001a66:	6053      	str	r3, [r2, #4]

}
 8001a68:	bf00      	nop
 8001a6a:	46bd      	mov	sp, r7
 8001a6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a70:	4770      	bx	lr
 8001a72:	bf00      	nop
 8001a74:	40023800 	andmi	r3, r2, r0, lsl #16
 8001a78:	40020800 	andmi	r0, r2, r0, lsl #16

08001a7c <SetSysClkTo84>:

void SetSysClkTo84(void){
 8001a7c:	b480      	push	{r7}
 8001a7e:	af00      	add	r7, sp, #0

    SET_BIT(FLASH->ACR, FLASH_ACR_PRFTEN);
 8001a80:	4b3e      	ldr	r3, [pc, #248]	; (8001b7c <SetSysClkTo84+0x100>)
 8001a82:	681b      	ldr	r3, [r3, #0]
 8001a84:	4a3d      	ldr	r2, [pc, #244]	; (8001b7c <SetSysClkTo84+0x100>)
 8001a86:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001a8a:	6013      	str	r3, [r2, #0]
    MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, FLASH_ACR_LATENCY_2WS);
 8001a8c:	4b3b      	ldr	r3, [pc, #236]	; (8001b7c <SetSysClkTo84+0x100>)
 8001a8e:	681b      	ldr	r3, [r3, #0]
 8001a90:	f023 0307 	bic.w	r3, r3, #7
 8001a94:	4a39      	ldr	r2, [pc, #228]	; (8001b7c <SetSysClkTo84+0x100>)
 8001a96:	f043 0302 	orr.w	r3, r3, #2
 8001a9a:	6013      	str	r3, [r2, #0]
    while (READ_BIT(FLASH->ACR, FLASH_ACR_LATENCY)!= FLASH_ACR_LATENCY_2WS){}
 8001a9c:	bf00      	nop
 8001a9e:	4b37      	ldr	r3, [pc, #220]	; (8001b7c <SetSysClkTo84+0x100>)
 8001aa0:	681b      	ldr	r3, [r3, #0]
 8001aa2:	f003 0307 	and.w	r3, r3, #7
 8001aa6:	2b02      	cmp	r3, #2
 8001aa8:	d1f9      	bne.n	8001a9e <SetSysClkTo84+0x22>

    CLEAR_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM);
 8001aaa:	4b35      	ldr	r3, [pc, #212]	; (8001b80 <SetSysClkTo84+0x104>)
 8001aac:	685b      	ldr	r3, [r3, #4]
 8001aae:	4a34      	ldr	r2, [pc, #208]	; (8001b80 <SetSysClkTo84+0x104>)
 8001ab0:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8001ab4:	6053      	str	r3, [r2, #4]
    SET_BIT(RCC->PLLCFGR, 25 << RCC_PLLCFGR_PLLM_Pos);
 8001ab6:	4b32      	ldr	r3, [pc, #200]	; (8001b80 <SetSysClkTo84+0x104>)
 8001ab8:	685b      	ldr	r3, [r3, #4]
 8001aba:	4a31      	ldr	r2, [pc, #196]	; (8001b80 <SetSysClkTo84+0x104>)
 8001abc:	f043 0319 	orr.w	r3, r3, #25
 8001ac0:	6053      	str	r3, [r2, #4]

    CLEAR_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN);
 8001ac2:	4b2f      	ldr	r3, [pc, #188]	; (8001b80 <SetSysClkTo84+0x104>)
 8001ac4:	685b      	ldr	r3, [r3, #4]
 8001ac6:	4a2e      	ldr	r2, [pc, #184]	; (8001b80 <SetSysClkTo84+0x104>)
 8001ac8:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 8001acc:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8001ad0:	6053      	str	r3, [r2, #4]
    SET_BIT(RCC->PLLCFGR, 168 << RCC_PLLCFGR_PLLN_Pos);
 8001ad2:	4b2b      	ldr	r3, [pc, #172]	; (8001b80 <SetSysClkTo84+0x104>)
 8001ad4:	685b      	ldr	r3, [r3, #4]
 8001ad6:	4a2a      	ldr	r2, [pc, #168]	; (8001b80 <SetSysClkTo84+0x104>)
 8001ad8:	f443 5328 	orr.w	r3, r3, #10752	; 0x2a00
 8001adc:	6053      	str	r3, [r2, #4]

    CLEAR_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLP);
 8001ade:	4b28      	ldr	r3, [pc, #160]	; (8001b80 <SetSysClkTo84+0x104>)
 8001ae0:	685b      	ldr	r3, [r3, #4]
 8001ae2:	4a27      	ldr	r2, [pc, #156]	; (8001b80 <SetSysClkTo84+0x104>)
 8001ae4:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001ae8:	6053      	str	r3, [r2, #4]

    SET_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC);
 8001aea:	4b25      	ldr	r3, [pc, #148]	; (8001b80 <SetSysClkTo84+0x104>)
 8001aec:	685b      	ldr	r3, [r3, #4]
 8001aee:	4a24      	ldr	r2, [pc, #144]	; (8001b80 <SetSysClkTo84+0x104>)
 8001af0:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8001af4:	6053      	str	r3, [r2, #4]

    CLEAR_BIT(RCC->CFGR, RCC_CFGR_HPRE_3);    // AHB prescaler - not divided
 8001af6:	4b22      	ldr	r3, [pc, #136]	; (8001b80 <SetSysClkTo84+0x104>)
 8001af8:	689b      	ldr	r3, [r3, #8]
 8001afa:	4a21      	ldr	r2, [pc, #132]	; (8001b80 <SetSysClkTo84+0x104>)
 8001afc:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8001b00:	6093      	str	r3, [r2, #8]

    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1_0 | RCC_CFGR_PPRE1_1, RCC_CFGR_PPRE1_2);   // APB1 prescaler - divided by 2
 8001b02:	4b1f      	ldr	r3, [pc, #124]	; (8001b80 <SetSysClkTo84+0x104>)
 8001b04:	689b      	ldr	r3, [r3, #8]
 8001b06:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8001b0a:	4a1d      	ldr	r2, [pc, #116]	; (8001b80 <SetSysClkTo84+0x104>)
 8001b0c:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8001b10:	6093      	str	r3, [r2, #8]

    CLEAR_BIT(RCC->CFGR, RCC_CFGR_PPRE2_2);    // APB2 prescaler - not divided
 8001b12:	4b1b      	ldr	r3, [pc, #108]	; (8001b80 <SetSysClkTo84+0x104>)
 8001b14:	689b      	ldr	r3, [r3, #8]
 8001b16:	4a1a      	ldr	r2, [pc, #104]	; (8001b80 <SetSysClkTo84+0x104>)
 8001b18:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8001b1c:	6093      	str	r3, [r2, #8]

    SET_BIT(RCC->CR, RCC_CR_HSEON);
 8001b1e:	4b18      	ldr	r3, [pc, #96]	; (8001b80 <SetSysClkTo84+0x104>)
 8001b20:	681b      	ldr	r3, [r3, #0]
 8001b22:	4a17      	ldr	r2, [pc, #92]	; (8001b80 <SetSysClkTo84+0x104>)
 8001b24:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001b28:	6013      	str	r3, [r2, #0]
    while(!READ_BIT(RCC->CR, RCC_CR_HSERDY)){}
 8001b2a:	bf00      	nop
 8001b2c:	4b14      	ldr	r3, [pc, #80]	; (8001b80 <SetSysClkTo84+0x104>)
 8001b2e:	681b      	ldr	r3, [r3, #0]
 8001b30:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001b34:	2b00      	cmp	r3, #0
 8001b36:	d0f9      	beq.n	8001b2c <SetSysClkTo84+0xb0>

    SET_BIT(RCC->CR, RCC_CR_PLLON);
 8001b38:	4b11      	ldr	r3, [pc, #68]	; (8001b80 <SetSysClkTo84+0x104>)
 8001b3a:	681b      	ldr	r3, [r3, #0]
 8001b3c:	4a10      	ldr	r2, [pc, #64]	; (8001b80 <SetSysClkTo84+0x104>)
 8001b3e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8001b42:	6013      	str	r3, [r2, #0]
    while(!READ_BIT(RCC->CR, RCC_CR_PLLRDY)){}    
 8001b44:	bf00      	nop
 8001b46:	4b0e      	ldr	r3, [pc, #56]	; (8001b80 <SetSysClkTo84+0x104>)
 8001b48:	681b      	ldr	r3, [r3, #0]
 8001b4a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001b4e:	2b00      	cmp	r3, #0
 8001b50:	d0f9      	beq.n	8001b46 <SetSysClkTo84+0xca>

    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW_0, RCC_CFGR_SW_1);  // System clock - PLL
 8001b52:	4b0b      	ldr	r3, [pc, #44]	; (8001b80 <SetSysClkTo84+0x104>)
 8001b54:	689b      	ldr	r3, [r3, #8]
 8001b56:	f023 0303 	bic.w	r3, r3, #3
 8001b5a:	4a09      	ldr	r2, [pc, #36]	; (8001b80 <SetSysClkTo84+0x104>)
 8001b5c:	f043 0302 	orr.w	r3, r3, #2
 8001b60:	6093      	str	r3, [r2, #8]

    while(READ_BIT(RCC->CFGR, RCC_CFGR_SWS) != RCC_CFGR_SWS_PLL){}
 8001b62:	bf00      	nop
 8001b64:	4b06      	ldr	r3, [pc, #24]	; (8001b80 <SetSysClkTo84+0x104>)
 8001b66:	689b      	ldr	r3, [r3, #8]
 8001b68:	f003 030c 	and.w	r3, r3, #12
 8001b6c:	2b08      	cmp	r3, #8
 8001b6e:	d1f9      	bne.n	8001b64 <SetSysClkTo84+0xe8>

}
 8001b70:	bf00      	nop
 8001b72:	bf00      	nop
 8001b74:	46bd      	mov	sp, r7
 8001b76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b7a:	4770      	bx	lr
 8001b7c:	40023c00 	andmi	r3, r2, r0, lsl #24
 8001b80:	40023800 	andmi	r3, r2, r0, lsl #16

08001b84 <main>:

//void WriteToFlash(){
//    flash
//}

int main(void){
 8001b84:	b580      	push	{r7, lr}
 8001b86:	af00      	add	r7, sp, #0
    SetSysClkTo84();
 8001b88:	f7ff ff78 	bl	8001a7c <SetSysClkTo84>
    SystemCoreClockUpdate();
 8001b8c:	f000 fb7a 	bl	8002284 <SystemCoreClockUpdate>
    SysTick_Config(SystemCoreClock/1000);
 8001b90:	4b18      	ldr	r3, [pc, #96]	; (8001bf4 <main+0x70>)
 8001b92:	681b      	ldr	r3, [r3, #0]
 8001b94:	4a18      	ldr	r2, [pc, #96]	; (8001bf8 <main+0x74>)
 8001b96:	fba2 2303 	umull	r2, r3, r2, r3
 8001b9a:	099b      	lsrs	r3, r3, #6
 8001b9c:	4618      	mov	r0, r3
 8001b9e:	f7fe ff2b 	bl	80009f8 <SysTick_Config>
    GPIO_Init();
 8001ba2:	f7ff ff45 	bl	8001a30 <GPIO_Init>

    setupTimer();
 8001ba6:	f7fe ff49 	bl	8000a3c <setupTimer>

    st7789_GPIOInit();
 8001baa:	f7fe ff63 	bl	8000a74 <st7789_GPIOInit>
    st7789_Reset();
 8001bae:	f000 f853 	bl	8001c58 <st7789_Reset>
    st7789_Init_1_3_LCD();
 8001bb2:	f000 f93d 	bl	8001e30 <st7789_Init_1_3_LCD>

    while (1) {
        SET_BIT(GPIOC->BSRR, GPIO_BSRR_BR13);
 8001bb6:	4b11      	ldr	r3, [pc, #68]	; (8001bfc <main+0x78>)
 8001bb8:	699b      	ldr	r3, [r3, #24]
 8001bba:	4a10      	ldr	r2, [pc, #64]	; (8001bfc <main+0x78>)
 8001bbc:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8001bc0:	6193      	str	r3, [r2, #24]
        delay_ms(500);
 8001bc2:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8001bc6:	f7ff ff1b 	bl	8001a00 <delay_ms>
        SET_BIT(GPIOC->BSRR, GPIO_BSRR_BS13);
 8001bca:	4b0c      	ldr	r3, [pc, #48]	; (8001bfc <main+0x78>)
 8001bcc:	699b      	ldr	r3, [r3, #24]
 8001bce:	4a0b      	ldr	r2, [pc, #44]	; (8001bfc <main+0x78>)
 8001bd0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8001bd4:	6193      	str	r3, [r2, #24]
        delay_ms(300);
 8001bd6:	f44f 7096 	mov.w	r0, #300	; 0x12c
 8001bda:	f7ff ff11 	bl	8001a00 <delay_ms>

        demoIcon(IMAGE_ADDR);
 8001bde:	4808      	ldr	r0, [pc, #32]	; (8001c00 <main+0x7c>)
 8001be0:	f7ff fe9e 	bl	8001920 <demoIcon>
        demoCycleColors();
 8001be4:	f7fe ffa2 	bl	8000b2c <demoCycleColors>
        demoCheckboard();
 8001be8:	f7ff f986 	bl	8000ef8 <demoCheckboard>
        demoMandelbrot();
 8001bec:	f7ff fd7c 	bl	80016e8 <demoMandelbrot>
        SET_BIT(GPIOC->BSRR, GPIO_BSRR_BR13);
 8001bf0:	e7e1      	b.n	8001bb6 <main+0x32>
 8001bf2:	bf00      	nop
 8001bf4:	2000042c 	andcs	r0, r0, ip, lsr #8
 8001bf8:	10624dd3 	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
 8001bfc:	40020800 	andmi	r0, r2, r0, lsl #16
 8001c00:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>

08001c04 <SysTick_Handler>:
    }

    return 0;
}

void SysTick_Handler(void){
 8001c04:	b480      	push	{r7}
 8001c06:	af00      	add	r7, sp, #0
    tick++;
 8001c08:	4b04      	ldr	r3, [pc, #16]	; (8001c1c <SysTick_Handler+0x18>)
 8001c0a:	681b      	ldr	r3, [r3, #0]
 8001c0c:	3301      	adds	r3, #1
 8001c0e:	4a03      	ldr	r2, [pc, #12]	; (8001c1c <SysTick_Handler+0x18>)
 8001c10:	6013      	str	r3, [r2, #0]
}
 8001c12:	bf00      	nop
 8001c14:	46bd      	mov	sp, r7
 8001c16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c1a:	4770      	bx	lr
 8001c1c:	20000450 	andcs	r0, r0, r0, asr r4

08001c20 <st7789_WaitNanosecs>:

#define LCD_FILL_BUFFER_SIZE 64


// Weak attribute to allow override
void __attribute__((weak)) st7789_WaitNanosecs(uint32_t ns) {
 8001c20:	b480      	push	{r7}
 8001c22:	b085      	sub	sp, #20
 8001c24:	af00      	add	r7, sp, #0
 8001c26:	6078      	str	r0, [r7, #4]
    int ctr = ((ST7789_PRESCALER * ST7789_OSC_MHZ) * ns / 6);
 8001c28:	687b      	ldr	r3, [r7, #4]
 8001c2a:	01db      	lsls	r3, r3, #7
 8001c2c:	4a09      	ldr	r2, [pc, #36]	; (8001c54 <st7789_WaitNanosecs+0x34>)
 8001c2e:	fba2 2303 	umull	r2, r3, r2, r3
 8001c32:	089b      	lsrs	r3, r3, #2
 8001c34:	60fb      	str	r3, [r7, #12]
    while (ctr) {
 8001c36:	e003      	b.n	8001c40 <st7789_WaitNanosecs+0x20>
        __asm__ volatile ("nop");
 8001c38:	bf00      	nop
        --ctr;
 8001c3a:	68fb      	ldr	r3, [r7, #12]
 8001c3c:	3b01      	subs	r3, #1
 8001c3e:	60fb      	str	r3, [r7, #12]
    while (ctr) {
 8001c40:	68fb      	ldr	r3, [r7, #12]
 8001c42:	2b00      	cmp	r3, #0
 8001c44:	d1f8      	bne.n	8001c38 <st7789_WaitNanosecs+0x18>
    }
}
 8001c46:	bf00      	nop
 8001c48:	bf00      	nop
 8001c4a:	3714      	adds	r7, #20
 8001c4c:	46bd      	mov	sp, r7
 8001c4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c52:	4770      	bx	lr
 8001c54:	aaaaaaab 	bge	6aac708 <_Min_Stack_Size+0x6aac308>

08001c58 <st7789_Reset>:


void st7789_Reset(void) {
 8001c58:	b580      	push	{r7, lr}
 8001c5a:	af00      	add	r7, sp, #0
    ST7789_RST_PORT->ODR &= ~ST7789_RST_PIN;
 8001c5c:	4b0a      	ldr	r3, [pc, #40]	; (8001c88 <st7789_Reset+0x30>)
 8001c5e:	695b      	ldr	r3, [r3, #20]
 8001c60:	4a09      	ldr	r2, [pc, #36]	; (8001c88 <st7789_Reset+0x30>)
 8001c62:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8001c66:	6153      	str	r3, [r2, #20]
    st7789_WaitNanosecs(10000); // Reset pulse time
 8001c68:	f242 7010 	movw	r0, #10000	; 0x2710
 8001c6c:	f7ff ffd8 	bl	8001c20 <st7789_WaitNanosecs>
    ST7789_RST_PORT->ODR |= ST7789_RST_PIN;
 8001c70:	4b05      	ldr	r3, [pc, #20]	; (8001c88 <st7789_Reset+0x30>)
 8001c72:	695b      	ldr	r3, [r3, #20]
 8001c74:	4a04      	ldr	r2, [pc, #16]	; (8001c88 <st7789_Reset+0x30>)
 8001c76:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001c7a:	6153      	str	r3, [r2, #20]
    st7789_WaitNanosecs(120000); // Maximum time of blanking sequence
 8001c7c:	4803      	ldr	r0, [pc, #12]	; (8001c8c <st7789_Reset+0x34>)
 8001c7e:	f7ff ffcf 	bl	8001c20 <st7789_WaitNanosecs>
}
 8001c82:	bf00      	nop
 8001c84:	bd80      	pop	{r7, pc}
 8001c86:	bf00      	nop
 8001c88:	40020400 	andmi	r0, r2, r0, lsl #8
 8001c8c:	0001d4c0 	andeq	sp, r1, r0, asr #9

08001c90 <st7789_StartCommand>:


void st7789_StartCommand(void) {
 8001c90:	b480      	push	{r7}
 8001c92:	af00      	add	r7, sp, #0
    //st7789_WaitNanosecs(10); //  D/CX setup time
    ST7789_DC_PORT->ODR &= ~ST7789_DC_PIN;
 8001c94:	4b05      	ldr	r3, [pc, #20]	; (8001cac <st7789_StartCommand+0x1c>)
 8001c96:	695b      	ldr	r3, [r3, #20]
 8001c98:	4a04      	ldr	r2, [pc, #16]	; (8001cac <st7789_StartCommand+0x1c>)
 8001c9a:	f023 0302 	bic.w	r3, r3, #2
 8001c9e:	6153      	str	r3, [r2, #20]
}
 8001ca0:	bf00      	nop
 8001ca2:	46bd      	mov	sp, r7
 8001ca4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ca8:	4770      	bx	lr
 8001caa:	bf00      	nop
 8001cac:	40020000 	andmi	r0, r2, r0

08001cb0 <st7789_StartData>:


void st7789_StartData(void) {
 8001cb0:	b480      	push	{r7}
 8001cb2:	af00      	add	r7, sp, #0
    //st7789_WaitNanosecs(10); //  D/CX setup time
    ST7789_DC_PORT->ODR |= ST7789_DC_PIN;
 8001cb4:	4b05      	ldr	r3, [pc, #20]	; (8001ccc <st7789_StartData+0x1c>)
 8001cb6:	695b      	ldr	r3, [r3, #20]
 8001cb8:	4a04      	ldr	r2, [pc, #16]	; (8001ccc <st7789_StartData+0x1c>)
 8001cba:	f043 0302 	orr.w	r3, r3, #2
 8001cbe:	6153      	str	r3, [r2, #20]
}
 8001cc0:	bf00      	nop
 8001cc2:	46bd      	mov	sp, r7
 8001cc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cc8:	4770      	bx	lr
 8001cca:	bf00      	nop
 8001ccc:	40020000 	andmi	r0, r2, r0

08001cd0 <st7789_WriteSpi>:


void st7789_WriteSpi(uint8_t data) {
 8001cd0:	b480      	push	{r7}
 8001cd2:	b083      	sub	sp, #12
 8001cd4:	af00      	add	r7, sp, #0
 8001cd6:	4603      	mov	r3, r0
 8001cd8:	71fb      	strb	r3, [r7, #7]
    // TO DO: change to while
    //	for (int32_t i = 0; i<10000; i++) {
    //		if (ST7789_SPI->SR & SPI_SR_TXE) break;
    //	}

    while (!(ST7789_SPI->SR & SPI_SR_TXE)){}
 8001cda:	bf00      	nop
 8001cdc:	4b07      	ldr	r3, [pc, #28]	; (8001cfc <st7789_WriteSpi+0x2c>)
 8001cde:	689b      	ldr	r3, [r3, #8]
 8001ce0:	f003 0302 	and.w	r3, r3, #2
 8001ce4:	2b00      	cmp	r3, #0
 8001ce6:	d0f9      	beq.n	8001cdc <st7789_WriteSpi+0xc>
    ST7789_SPI->DR = data;
 8001ce8:	4a04      	ldr	r2, [pc, #16]	; (8001cfc <st7789_WriteSpi+0x2c>)
 8001cea:	79fb      	ldrb	r3, [r7, #7]
 8001cec:	60d3      	str	r3, [r2, #12]
    // TO DO: delete waiting busy flag
    //    while (ST7789_SPI->SR & SPI_SR_BSY);
}
 8001cee:	bf00      	nop
 8001cf0:	370c      	adds	r7, #12
 8001cf2:	46bd      	mov	sp, r7
 8001cf4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cf8:	4770      	bx	lr
 8001cfa:	bf00      	nop
 8001cfc:	40013000 	andmi	r3, r1, r0

08001d00 <st7789_WriteDMA>:
    // Enable SPI output
    ST7789_SPI->CR1 |= SPI_CR1_BIDIOE;
}


void __attribute__((weak)) st7789_WriteDMA(void *data, uint16_t length) {
 8001d00:	b480      	push	{r7}
 8001d02:	b083      	sub	sp, #12
 8001d04:	af00      	add	r7, sp, #0
 8001d06:	6078      	str	r0, [r7, #4]
 8001d08:	460b      	mov	r3, r1
 8001d0a:	807b      	strh	r3, [r7, #2]
    ST7789_DMA->CR=  (DMA_SxCR_MINC | DMA_SxCR_DIR_0 | 3 << DMA_SxCR_CHSEL_Pos); // Memory increment, direction to peripherial
 8001d0c:	4b16      	ldr	r3, [pc, #88]	; (8001d68 <st7789_WriteDMA+0x68>)
 8001d0e:	4a17      	ldr	r2, [pc, #92]	; (8001d6c <st7789_WriteDMA+0x6c>)
 8001d10:	601a      	str	r2, [r3, #0]
    ST7789_DMA->M0AR  = (uint32_t)data; // Source address
 8001d12:	4a15      	ldr	r2, [pc, #84]	; (8001d68 <st7789_WriteDMA+0x68>)
 8001d14:	687b      	ldr	r3, [r7, #4]
 8001d16:	60d3      	str	r3, [r2, #12]
    ST7789_DMA->PAR  = (uint32_t)&ST7789_SPI->DR; // Destination address
 8001d18:	4b13      	ldr	r3, [pc, #76]	; (8001d68 <st7789_WriteDMA+0x68>)
 8001d1a:	4a15      	ldr	r2, [pc, #84]	; (8001d70 <st7789_WriteDMA+0x70>)
 8001d1c:	609a      	str	r2, [r3, #8]
    ST7789_DMA->NDTR = length;
 8001d1e:	4a12      	ldr	r2, [pc, #72]	; (8001d68 <st7789_WriteDMA+0x68>)
 8001d20:	887b      	ldrh	r3, [r7, #2]
 8001d22:	6053      	str	r3, [r2, #4]
    ST7789_SPI->CR1 &= ~(SPI_CR1_SPE);  // Disable SPI
 8001d24:	4b13      	ldr	r3, [pc, #76]	; (8001d74 <st7789_WriteDMA+0x74>)
 8001d26:	681b      	ldr	r3, [r3, #0]
 8001d28:	4a12      	ldr	r2, [pc, #72]	; (8001d74 <st7789_WriteDMA+0x74>)
 8001d2a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8001d2e:	6013      	str	r3, [r2, #0]
    ST7789_SPI->CR2 |= SPI_CR2_TXDMAEN; // Enable DMA transfer
 8001d30:	4b10      	ldr	r3, [pc, #64]	; (8001d74 <st7789_WriteDMA+0x74>)
 8001d32:	685b      	ldr	r3, [r3, #4]
 8001d34:	4a0f      	ldr	r2, [pc, #60]	; (8001d74 <st7789_WriteDMA+0x74>)
 8001d36:	f043 0302 	orr.w	r3, r3, #2
 8001d3a:	6053      	str	r3, [r2, #4]
    ST7789_SPI->CR1 |= SPI_CR1_SPE;     // Enable SPI
 8001d3c:	4b0d      	ldr	r3, [pc, #52]	; (8001d74 <st7789_WriteDMA+0x74>)
 8001d3e:	681b      	ldr	r3, [r3, #0]
 8001d40:	4a0c      	ldr	r2, [pc, #48]	; (8001d74 <st7789_WriteDMA+0x74>)
 8001d42:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001d46:	6013      	str	r3, [r2, #0]
    DMA2->LIFCR = 0xffffffff;
 8001d48:	4b0b      	ldr	r3, [pc, #44]	; (8001d78 <st7789_WriteDMA+0x78>)
 8001d4a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8001d4e:	609a      	str	r2, [r3, #8]
    ST7789_DMA->CR |= DMA_SxCR_EN;     // Start DMA transfer
 8001d50:	4b05      	ldr	r3, [pc, #20]	; (8001d68 <st7789_WriteDMA+0x68>)
 8001d52:	681b      	ldr	r3, [r3, #0]
 8001d54:	4a04      	ldr	r2, [pc, #16]	; (8001d68 <st7789_WriteDMA+0x68>)
 8001d56:	f043 0301 	orr.w	r3, r3, #1
 8001d5a:	6013      	str	r3, [r2, #0]
}
 8001d5c:	bf00      	nop
 8001d5e:	370c      	adds	r7, #12
 8001d60:	46bd      	mov	sp, r7
 8001d62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d66:	4770      	bx	lr
 8001d68:	40026458 	andmi	r6, r2, r8, asr r4
 8001d6c:	06000440 	streq	r0, [r0], -r0, asr #8
 8001d70:	4001300c 	andmi	r3, r1, ip
 8001d74:	40013000 	andmi	r3, r1, r0
 8001d78:	40026400 	andmi	r6, r2, r0, lsl #8

08001d7c <st7789_WaitForDMA>:


void st7789_WaitForDMA(void) {
 8001d7c:	b480      	push	{r7}
 8001d7e:	af00      	add	r7, sp, #0
    while(ST7789_DMA->NDTR);
 8001d80:	bf00      	nop
 8001d82:	4b05      	ldr	r3, [pc, #20]	; (8001d98 <st7789_WaitForDMA+0x1c>)
 8001d84:	685b      	ldr	r3, [r3, #4]
 8001d86:	2b00      	cmp	r3, #0
 8001d88:	d1fb      	bne.n	8001d82 <st7789_WaitForDMA+0x6>
}
 8001d8a:	bf00      	nop
 8001d8c:	bf00      	nop
 8001d8e:	46bd      	mov	sp, r7
 8001d90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d94:	4770      	bx	lr
 8001d96:	bf00      	nop
 8001d98:	40026458 	andmi	r6, r2, r8, asr r4

08001d9c <st7789_RunCommand>:
        st7789_WriteSpi(((const uint8_t *)data)[i]);
    }
}


void st7789_RunCommand(const st7789_Command *command) {
 8001d9c:	b580      	push	{r7, lr}
 8001d9e:	b084      	sub	sp, #16
 8001da0:	af00      	add	r7, sp, #0
 8001da2:	6078      	str	r0, [r7, #4]
    st7789_StartCommand();
 8001da4:	f7ff ff74 	bl	8001c90 <st7789_StartCommand>
    st7789_WriteSpi(command->command);
 8001da8:	687b      	ldr	r3, [r7, #4]
 8001daa:	781b      	ldrb	r3, [r3, #0]
 8001dac:	4618      	mov	r0, r3
 8001dae:	f7ff ff8f 	bl	8001cd0 <st7789_WriteSpi>
    if (command->dataSize > 0) {
 8001db2:	687b      	ldr	r3, [r7, #4]
 8001db4:	789b      	ldrb	r3, [r3, #2]
 8001db6:	2b00      	cmp	r3, #0
 8001db8:	d014      	beq.n	8001de4 <st7789_RunCommand+0x48>
        st7789_StartData();
 8001dba:	f7ff ff79 	bl	8001cb0 <st7789_StartData>
        for (uint8_t i = 0; i < command->dataSize; ++i) {
 8001dbe:	2300      	movs	r3, #0
 8001dc0:	73fb      	strb	r3, [r7, #15]
 8001dc2:	e00a      	b.n	8001dda <st7789_RunCommand+0x3e>
            st7789_WriteSpi(command->data[i]);
 8001dc4:	687b      	ldr	r3, [r7, #4]
 8001dc6:	685a      	ldr	r2, [r3, #4]
 8001dc8:	7bfb      	ldrb	r3, [r7, #15]
 8001dca:	4413      	add	r3, r2
 8001dcc:	781b      	ldrb	r3, [r3, #0]
 8001dce:	4618      	mov	r0, r3
 8001dd0:	f7ff ff7e 	bl	8001cd0 <st7789_WriteSpi>
        for (uint8_t i = 0; i < command->dataSize; ++i) {
 8001dd4:	7bfb      	ldrb	r3, [r7, #15]
 8001dd6:	3301      	adds	r3, #1
 8001dd8:	73fb      	strb	r3, [r7, #15]
 8001dda:	687b      	ldr	r3, [r7, #4]
 8001ddc:	789b      	ldrb	r3, [r3, #2]
 8001dde:	7bfa      	ldrb	r2, [r7, #15]
 8001de0:	429a      	cmp	r2, r3
 8001de2:	d3ef      	bcc.n	8001dc4 <st7789_RunCommand+0x28>
        }
    }
    if (command->waitMs > 0) {
 8001de4:	687b      	ldr	r3, [r7, #4]
 8001de6:	785b      	ldrb	r3, [r3, #1]
 8001de8:	2b00      	cmp	r3, #0
 8001dea:	d009      	beq.n	8001e00 <st7789_RunCommand+0x64>
        st7789_WaitNanosecs(command->waitMs * 1000);
 8001dec:	687b      	ldr	r3, [r7, #4]
 8001dee:	785b      	ldrb	r3, [r3, #1]
 8001df0:	461a      	mov	r2, r3
 8001df2:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001df6:	fb02 f303 	mul.w	r3, r2, r3
 8001dfa:	4618      	mov	r0, r3
 8001dfc:	f7ff ff10 	bl	8001c20 <st7789_WaitNanosecs>
    }
}
 8001e00:	bf00      	nop
 8001e02:	3710      	adds	r7, #16
 8001e04:	46bd      	mov	sp, r7
 8001e06:	bd80      	pop	{r7, pc}

08001e08 <st7789_RunCommands>:


void st7789_RunCommands(const st7789_Command *sequence) {
 8001e08:	b580      	push	{r7, lr}
 8001e0a:	b082      	sub	sp, #8
 8001e0c:	af00      	add	r7, sp, #0
 8001e0e:	6078      	str	r0, [r7, #4]
    while (sequence->command != ST7789_CMDLIST_END) {
 8001e10:	e005      	b.n	8001e1e <st7789_RunCommands+0x16>
        st7789_RunCommand(sequence);
 8001e12:	6878      	ldr	r0, [r7, #4]
 8001e14:	f7ff ffc2 	bl	8001d9c <st7789_RunCommand>
        sequence++;
 8001e18:	687b      	ldr	r3, [r7, #4]
 8001e1a:	3308      	adds	r3, #8
 8001e1c:	607b      	str	r3, [r7, #4]
    while (sequence->command != ST7789_CMDLIST_END) {
 8001e1e:	687b      	ldr	r3, [r7, #4]
 8001e20:	781b      	ldrb	r3, [r3, #0]
 8001e22:	2bff      	cmp	r3, #255	; 0xff
 8001e24:	d1f5      	bne.n	8001e12 <st7789_RunCommands+0xa>
    }
}
 8001e26:	bf00      	nop
 8001e28:	bf00      	nop
 8001e2a:	3708      	adds	r7, #8
 8001e2c:	46bd      	mov	sp, r7
 8001e2e:	bd80      	pop	{r7, pc}

08001e30 <st7789_Init_1_3_LCD>:


void st7789_Init_1_3_LCD(void) {
 8001e30:	b5b0      	push	{r4, r5, r7, lr}
 8001e32:	b0ae      	sub	sp, #184	; 0xb8
 8001e34:	af00      	add	r7, sp, #0
    // Resolution
    const uint8_t caset[4] = {
 8001e36:	f04f 436f 	mov.w	r3, #4009754624	; 0xef000000
 8001e3a:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
        0x00,
        0x00,
        (ST7789_LCD_WIDTH - 1) >> 8,
        (ST7789_LCD_WIDTH - 1) & 0xff
    };
    const uint8_t raset[4] = {
 8001e3e:	f04f 436f 	mov.w	r3, #4009754624	; 0xef000000
 8001e42:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
        0x00,
        0x00,
        (ST7789_LCD_HEIGHT - 1) >> 8,
        (ST7789_LCD_HEIGHT - 1) & 0xff
    };
    const st7789_Command initSequence[] = {
 8001e46:	2310      	movs	r3, #16
 8001e48:	f887 3020 	strb.w	r3, [r7, #32]
 8001e4c:	230a      	movs	r3, #10
 8001e4e:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
 8001e52:	2300      	movs	r3, #0
 8001e54:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 8001e58:	2300      	movs	r3, #0
 8001e5a:	627b      	str	r3, [r7, #36]	; 0x24
 8001e5c:	2301      	movs	r3, #1
 8001e5e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 8001e62:	23c8      	movs	r3, #200	; 0xc8
 8001e64:	f887 3029 	strb.w	r3, [r7, #41]	; 0x29
 8001e68:	2300      	movs	r3, #0
 8001e6a:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
 8001e6e:	2300      	movs	r3, #0
 8001e70:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001e72:	2311      	movs	r3, #17
 8001e74:	f887 3030 	strb.w	r3, [r7, #48]	; 0x30
 8001e78:	2378      	movs	r3, #120	; 0x78
 8001e7a:	f887 3031 	strb.w	r3, [r7, #49]	; 0x31
 8001e7e:	2300      	movs	r3, #0
 8001e80:	f887 3032 	strb.w	r3, [r7, #50]	; 0x32
 8001e84:	2300      	movs	r3, #0
 8001e86:	637b      	str	r3, [r7, #52]	; 0x34
 8001e88:	2336      	movs	r3, #54	; 0x36
 8001e8a:	f887 3038 	strb.w	r3, [r7, #56]	; 0x38
 8001e8e:	2300      	movs	r3, #0
 8001e90:	f887 3039 	strb.w	r3, [r7, #57]	; 0x39
 8001e94:	2301      	movs	r3, #1
 8001e96:	f887 303a 	strb.w	r3, [r7, #58]	; 0x3a
 8001e9a:	4b5e      	ldr	r3, [pc, #376]	; (8002014 <st7789_Init_1_3_LCD+0x1e4>)
 8001e9c:	63fb      	str	r3, [r7, #60]	; 0x3c
 8001e9e:	233a      	movs	r3, #58	; 0x3a
 8001ea0:	f887 3040 	strb.w	r3, [r7, #64]	; 0x40
 8001ea4:	2300      	movs	r3, #0
 8001ea6:	f887 3041 	strb.w	r3, [r7, #65]	; 0x41
 8001eaa:	2301      	movs	r3, #1
 8001eac:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 8001eb0:	4b59      	ldr	r3, [pc, #356]	; (8002018 <st7789_Init_1_3_LCD+0x1e8>)
 8001eb2:	647b      	str	r3, [r7, #68]	; 0x44
 8001eb4:	2321      	movs	r3, #33	; 0x21
 8001eb6:	f887 3048 	strb.w	r3, [r7, #72]	; 0x48
 8001eba:	2300      	movs	r3, #0
 8001ebc:	f887 3049 	strb.w	r3, [r7, #73]	; 0x49
 8001ec0:	2300      	movs	r3, #0
 8001ec2:	f887 304a 	strb.w	r3, [r7, #74]	; 0x4a
 8001ec6:	2300      	movs	r3, #0
 8001ec8:	64fb      	str	r3, [r7, #76]	; 0x4c
 8001eca:	232a      	movs	r3, #42	; 0x2a
 8001ecc:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 8001ed0:	2300      	movs	r3, #0
 8001ed2:	f887 3051 	strb.w	r3, [r7, #81]	; 0x51
 8001ed6:	2304      	movs	r3, #4
 8001ed8:	f887 3052 	strb.w	r3, [r7, #82]	; 0x52
 8001edc:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 8001ee0:	657b      	str	r3, [r7, #84]	; 0x54
 8001ee2:	232b      	movs	r3, #43	; 0x2b
 8001ee4:	f887 3058 	strb.w	r3, [r7, #88]	; 0x58
 8001ee8:	2300      	movs	r3, #0
 8001eea:	f887 3059 	strb.w	r3, [r7, #89]	; 0x59
 8001eee:	2304      	movs	r3, #4
 8001ef0:	f887 305a 	strb.w	r3, [r7, #90]	; 0x5a
 8001ef4:	f107 03b0 	add.w	r3, r7, #176	; 0xb0
 8001ef8:	65fb      	str	r3, [r7, #92]	; 0x5c
 8001efa:	23b2      	movs	r3, #178	; 0xb2
 8001efc:	f887 3060 	strb.w	r3, [r7, #96]	; 0x60
 8001f00:	2300      	movs	r3, #0
 8001f02:	f887 3061 	strb.w	r3, [r7, #97]	; 0x61
 8001f06:	2305      	movs	r3, #5
 8001f08:	f887 3062 	strb.w	r3, [r7, #98]	; 0x62
 8001f0c:	4b43      	ldr	r3, [pc, #268]	; (800201c <st7789_Init_1_3_LCD+0x1ec>)
 8001f0e:	667b      	str	r3, [r7, #100]	; 0x64
 8001f10:	23b7      	movs	r3, #183	; 0xb7
 8001f12:	f887 3068 	strb.w	r3, [r7, #104]	; 0x68
 8001f16:	2300      	movs	r3, #0
 8001f18:	f887 3069 	strb.w	r3, [r7, #105]	; 0x69
 8001f1c:	2301      	movs	r3, #1
 8001f1e:	f887 306a 	strb.w	r3, [r7, #106]	; 0x6a
 8001f22:	4b3f      	ldr	r3, [pc, #252]	; (8002020 <st7789_Init_1_3_LCD+0x1f0>)
 8001f24:	66fb      	str	r3, [r7, #108]	; 0x6c
 8001f26:	23bb      	movs	r3, #187	; 0xbb
 8001f28:	f887 3070 	strb.w	r3, [r7, #112]	; 0x70
 8001f2c:	2300      	movs	r3, #0
 8001f2e:	f887 3071 	strb.w	r3, [r7, #113]	; 0x71
 8001f32:	2301      	movs	r3, #1
 8001f34:	f887 3072 	strb.w	r3, [r7, #114]	; 0x72
 8001f38:	4b3a      	ldr	r3, [pc, #232]	; (8002024 <st7789_Init_1_3_LCD+0x1f4>)
 8001f3a:	677b      	str	r3, [r7, #116]	; 0x74
 8001f3c:	23c0      	movs	r3, #192	; 0xc0
 8001f3e:	f887 3078 	strb.w	r3, [r7, #120]	; 0x78
 8001f42:	2300      	movs	r3, #0
 8001f44:	f887 3079 	strb.w	r3, [r7, #121]	; 0x79
 8001f48:	2301      	movs	r3, #1
 8001f4a:	f887 307a 	strb.w	r3, [r7, #122]	; 0x7a
 8001f4e:	4b36      	ldr	r3, [pc, #216]	; (8002028 <st7789_Init_1_3_LCD+0x1f8>)
 8001f50:	67fb      	str	r3, [r7, #124]	; 0x7c
 8001f52:	23c2      	movs	r3, #194	; 0xc2
 8001f54:	f887 3080 	strb.w	r3, [r7, #128]	; 0x80
 8001f58:	2300      	movs	r3, #0
 8001f5a:	f887 3081 	strb.w	r3, [r7, #129]	; 0x81
 8001f5e:	2302      	movs	r3, #2
 8001f60:	f887 3082 	strb.w	r3, [r7, #130]	; 0x82
 8001f64:	4b31      	ldr	r3, [pc, #196]	; (800202c <st7789_Init_1_3_LCD+0x1fc>)
 8001f66:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8001f6a:	23c4      	movs	r3, #196	; 0xc4
 8001f6c:	f887 3088 	strb.w	r3, [r7, #136]	; 0x88
 8001f70:	2300      	movs	r3, #0
 8001f72:	f887 3089 	strb.w	r3, [r7, #137]	; 0x89
 8001f76:	2301      	movs	r3, #1
 8001f78:	f887 308a 	strb.w	r3, [r7, #138]	; 0x8a
 8001f7c:	4b2c      	ldr	r3, [pc, #176]	; (8002030 <st7789_Init_1_3_LCD+0x200>)
 8001f7e:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 8001f82:	23c6      	movs	r3, #198	; 0xc6
 8001f84:	f887 3090 	strb.w	r3, [r7, #144]	; 0x90
 8001f88:	2300      	movs	r3, #0
 8001f8a:	f887 3091 	strb.w	r3, [r7, #145]	; 0x91
 8001f8e:	2301      	movs	r3, #1
 8001f90:	f887 3092 	strb.w	r3, [r7, #146]	; 0x92
 8001f94:	4b27      	ldr	r3, [pc, #156]	; (8002034 <st7789_Init_1_3_LCD+0x204>)
 8001f96:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 8001f9a:	23d0      	movs	r3, #208	; 0xd0
 8001f9c:	f887 3098 	strb.w	r3, [r7, #152]	; 0x98
 8001fa0:	2300      	movs	r3, #0
 8001fa2:	f887 3099 	strb.w	r3, [r7, #153]	; 0x99
 8001fa6:	2302      	movs	r3, #2
 8001fa8:	f887 309a 	strb.w	r3, [r7, #154]	; 0x9a
 8001fac:	4b22      	ldr	r3, [pc, #136]	; (8002038 <st7789_Init_1_3_LCD+0x208>)
 8001fae:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8001fb2:	23b0      	movs	r3, #176	; 0xb0
 8001fb4:	f887 30a0 	strb.w	r3, [r7, #160]	; 0xa0
 8001fb8:	2300      	movs	r3, #0
 8001fba:	f887 30a1 	strb.w	r3, [r7, #161]	; 0xa1
 8001fbe:	2302      	movs	r3, #2
 8001fc0:	f887 30a2 	strb.w	r3, [r7, #162]	; 0xa2
 8001fc4:	4b1d      	ldr	r3, [pc, #116]	; (800203c <st7789_Init_1_3_LCD+0x20c>)
 8001fc6:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 8001fca:	23ff      	movs	r3, #255	; 0xff
 8001fcc:	f887 30a8 	strb.w	r3, [r7, #168]	; 0xa8
 8001fd0:	2300      	movs	r3, #0
 8001fd2:	f887 30a9 	strb.w	r3, [r7, #169]	; 0xa9
 8001fd6:	2300      	movs	r3, #0
 8001fd8:	f887 30aa 	strb.w	r3, [r7, #170]	; 0xaa
 8001fdc:	2300      	movs	r3, #0
 8001fde:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
        //{ST7789_CMD_NVGAMCTRL, 0, 14, (const uint8_t *)"\xd0\x08\x10\x08\x06\x06\x39\x44\x51\x0b\x16\x14\x2f\x31"},
        // Little endian
        {ST7789_CMD_RAMCTRL, 0, 2, (const uint8_t *)"\x00\x08"},
        {ST7789_CMDLIST_END, 0, 0, NULL},                   // End of commands
    };
    st7789_RunCommands(initSequence);
 8001fe2:	f107 0320 	add.w	r3, r7, #32
 8001fe6:	4618      	mov	r0, r3
 8001fe8:	f7ff ff0e 	bl	8001e08 <st7789_RunCommands>
    st7789_Clear(0x0000);
 8001fec:	2000      	movs	r0, #0
 8001fee:	f000 f903 	bl	80021f8 <st7789_Clear>
    const st7789_Command initSequence2[] = {
 8001ff2:	4b13      	ldr	r3, [pc, #76]	; (8002040 <st7789_Init_1_3_LCD+0x210>)
 8001ff4:	463c      	mov	r4, r7
 8001ff6:	461d      	mov	r5, r3
 8001ff8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001ffa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001ffc:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8002000:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
        {ST7789_CMD_DISPON, 100, 0, NULL},                  // Display on
        {ST7789_CMD_SLPOUT, 100, 0, NULL},                  // Sleep out
        {ST7789_CMD_TEON, 0, 0, NULL},                      // Tearing line effect on
        {ST7789_CMDLIST_END, 0, 0, NULL},                   // End of commands
    };
    st7789_RunCommands(initSequence2);
 8002004:	463b      	mov	r3, r7
 8002006:	4618      	mov	r0, r3
 8002008:	f7ff fefe 	bl	8001e08 <st7789_RunCommands>
}
 800200c:	bf00      	nop
 800200e:	37b8      	adds	r7, #184	; 0xb8
 8002010:	46bd      	mov	sp, r7
 8002012:	bdb0      	pop	{r4, r5, r7, pc}
 8002014:	080026d8 	stmdaeq	r0, {r3, r4, r6, r7, r9, sl, sp}
 8002018:	080026dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r9, sl, sp}
 800201c:	080026e0 	stmdaeq	r0, {r5, r6, r7, r9, sl, sp}
 8002020:	080026e8 	stmdaeq	r0, {r3, r5, r6, r7, r9, sl, sp}
 8002024:	080026ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl, sp}
 8002028:	080026f0 	stmdaeq	r0, {r4, r5, r6, r7, r9, sl, sp}
 800202c:	080026f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl, sp}
 8002030:	080026f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9, sl, sp}
 8002034:	080026fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r9, sl, sp}
 8002038:	08002700 	stmdaeq	r0, {r8, r9, sl, sp}
 800203c:	08002704 	stmdaeq	r0, {r2, r8, r9, sl, sp}
 8002040:	08002708 	stmdaeq	r0, {r3, r8, r9, sl, sp}

08002044 <st7789_StartMemoryWrite>:


void st7789_StartMemoryWrite(void) {
 8002044:	b580      	push	{r7, lr}
 8002046:	af00      	add	r7, sp, #0
    st7789_StartCommand();
 8002048:	f7ff fe22 	bl	8001c90 <st7789_StartCommand>
    st7789_WriteSpi(ST7789_CMD_RAMWR);
 800204c:	202c      	movs	r0, #44	; 0x2c
 800204e:	f7ff fe3f 	bl	8001cd0 <st7789_WriteSpi>
    st7789_StartData();
 8002052:	f7ff fe2d 	bl	8001cb0 <st7789_StartData>
}
 8002056:	bf00      	nop
 8002058:	bd80      	pop	{r7, pc}

0800205a <st7789_SetWindow>:


void st7789_SetWindow(uint16_t xStart, uint16_t yStart, uint16_t xEnd, uint16_t yEnd) {
 800205a:	b590      	push	{r4, r7, lr}
 800205c:	b08d      	sub	sp, #52	; 0x34
 800205e:	af00      	add	r7, sp, #0
 8002060:	4604      	mov	r4, r0
 8002062:	4608      	mov	r0, r1
 8002064:	4611      	mov	r1, r2
 8002066:	461a      	mov	r2, r3
 8002068:	4623      	mov	r3, r4
 800206a:	80fb      	strh	r3, [r7, #6]
 800206c:	4603      	mov	r3, r0
 800206e:	80bb      	strh	r3, [r7, #4]
 8002070:	460b      	mov	r3, r1
 8002072:	807b      	strh	r3, [r7, #2]
 8002074:	4613      	mov	r3, r2
 8002076:	803b      	strh	r3, [r7, #0]
    uint8_t caset[4];
    uint8_t raset[4];
    caset[0] = (uint8_t)(xStart >> 8);
 8002078:	88fb      	ldrh	r3, [r7, #6]
 800207a:	0a1b      	lsrs	r3, r3, #8
 800207c:	b29b      	uxth	r3, r3
 800207e:	b2db      	uxtb	r3, r3
 8002080:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
    caset[1] = (uint8_t)(xStart & 0xff);
 8002084:	88fb      	ldrh	r3, [r7, #6]
 8002086:	b2db      	uxtb	r3, r3
 8002088:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d
    caset[2] = (uint8_t)(xEnd >> 8);
 800208c:	887b      	ldrh	r3, [r7, #2]
 800208e:	0a1b      	lsrs	r3, r3, #8
 8002090:	b29b      	uxth	r3, r3
 8002092:	b2db      	uxtb	r3, r3
 8002094:	f887 302e 	strb.w	r3, [r7, #46]	; 0x2e
    caset[3] = (uint8_t)(xEnd & 0xff);
 8002098:	887b      	ldrh	r3, [r7, #2]
 800209a:	b2db      	uxtb	r3, r3
 800209c:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
    raset[0] = (uint8_t)(yStart >> 8);
 80020a0:	88bb      	ldrh	r3, [r7, #4]
 80020a2:	0a1b      	lsrs	r3, r3, #8
 80020a4:	b29b      	uxth	r3, r3
 80020a6:	b2db      	uxtb	r3, r3
 80020a8:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
    raset[1] = (uint8_t)(yStart & 0xff);
 80020ac:	88bb      	ldrh	r3, [r7, #4]
 80020ae:	b2db      	uxtb	r3, r3
 80020b0:	f887 3029 	strb.w	r3, [r7, #41]	; 0x29
    raset[2] = (uint8_t)(yEnd >> 8);
 80020b4:	883b      	ldrh	r3, [r7, #0]
 80020b6:	0a1b      	lsrs	r3, r3, #8
 80020b8:	b29b      	uxth	r3, r3
 80020ba:	b2db      	uxtb	r3, r3
 80020bc:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
    raset[3] = (uint8_t)(yEnd & 0xff);
 80020c0:	883b      	ldrh	r3, [r7, #0]
 80020c2:	b2db      	uxtb	r3, r3
 80020c4:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
    st7789_Command sequence[] = {
 80020c8:	232a      	movs	r3, #42	; 0x2a
 80020ca:	723b      	strb	r3, [r7, #8]
 80020cc:	2300      	movs	r3, #0
 80020ce:	727b      	strb	r3, [r7, #9]
 80020d0:	2304      	movs	r3, #4
 80020d2:	72bb      	strb	r3, [r7, #10]
 80020d4:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80020d8:	60fb      	str	r3, [r7, #12]
 80020da:	232b      	movs	r3, #43	; 0x2b
 80020dc:	743b      	strb	r3, [r7, #16]
 80020de:	2300      	movs	r3, #0
 80020e0:	747b      	strb	r3, [r7, #17]
 80020e2:	2304      	movs	r3, #4
 80020e4:	74bb      	strb	r3, [r7, #18]
 80020e6:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80020ea:	617b      	str	r3, [r7, #20]
 80020ec:	232c      	movs	r3, #44	; 0x2c
 80020ee:	763b      	strb	r3, [r7, #24]
 80020f0:	2300      	movs	r3, #0
 80020f2:	767b      	strb	r3, [r7, #25]
 80020f4:	2300      	movs	r3, #0
 80020f6:	76bb      	strb	r3, [r7, #26]
 80020f8:	2300      	movs	r3, #0
 80020fa:	61fb      	str	r3, [r7, #28]
 80020fc:	23ff      	movs	r3, #255	; 0xff
 80020fe:	f887 3020 	strb.w	r3, [r7, #32]
 8002102:	2300      	movs	r3, #0
 8002104:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
 8002108:	2300      	movs	r3, #0
 800210a:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 800210e:	2300      	movs	r3, #0
 8002110:	627b      	str	r3, [r7, #36]	; 0x24
        {ST7789_CMD_CASET, 0, 4, caset},
        {ST7789_CMD_RASET, 0, 4, raset},
        {ST7789_CMD_RAMWR, 0, 0, NULL},
        {ST7789_CMDLIST_END, 0, 0, NULL},
    };
    st7789_StartCommand();
 8002112:	f7ff fdbd 	bl	8001c90 <st7789_StartCommand>
    st7789_RunCommands(sequence);
 8002116:	f107 0308 	add.w	r3, r7, #8
 800211a:	4618      	mov	r0, r3
 800211c:	f7ff fe74 	bl	8001e08 <st7789_RunCommands>
    st7789_StartData();
 8002120:	f7ff fdc6 	bl	8001cb0 <st7789_StartData>
}
 8002124:	bf00      	nop
 8002126:	3734      	adds	r7, #52	; 0x34
 8002128:	46bd      	mov	sp, r7
 800212a:	bd90      	pop	{r4, r7, pc}

0800212c <st7789_FillArea>:


void st7789_FillArea(uint16_t color, uint16_t startX, uint16_t startY, uint16_t width, uint16_t height) {
 800212c:	b590      	push	{r4, r7, lr}
 800212e:	b0a7      	sub	sp, #156	; 0x9c
 8002130:	af00      	add	r7, sp, #0
 8002132:	4604      	mov	r4, r0
 8002134:	4608      	mov	r0, r1
 8002136:	4611      	mov	r1, r2
 8002138:	461a      	mov	r2, r3
 800213a:	4623      	mov	r3, r4
 800213c:	80fb      	strh	r3, [r7, #6]
 800213e:	4603      	mov	r3, r0
 8002140:	80bb      	strh	r3, [r7, #4]
 8002142:	460b      	mov	r3, r1
 8002144:	807b      	strh	r3, [r7, #2]
 8002146:	4613      	mov	r3, r2
 8002148:	803b      	strh	r3, [r7, #0]
    uint16_t buf[LCD_FILL_BUFFER_SIZE];
    for (size_t i = 0; i < LCD_FILL_BUFFER_SIZE; i++) {
 800214a:	2300      	movs	r3, #0
 800214c:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 8002150:	e00c      	b.n	800216c <st7789_FillArea+0x40>
        buf[i] = color;
 8002152:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8002156:	005b      	lsls	r3, r3, #1
 8002158:	3398      	adds	r3, #152	; 0x98
 800215a:	443b      	add	r3, r7
 800215c:	88fa      	ldrh	r2, [r7, #6]
 800215e:	f823 2c8c 	strh.w	r2, [r3, #-140]
    for (size_t i = 0; i < LCD_FILL_BUFFER_SIZE; i++) {
 8002162:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8002166:	3301      	adds	r3, #1
 8002168:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 800216c:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8002170:	2b3f      	cmp	r3, #63	; 0x3f
 8002172:	d9ee      	bls.n	8002152 <st7789_FillArea+0x26>
    }
    st7789_SetWindow(startX, startY, startX + width - 1, startY + height - 1);
 8002174:	88ba      	ldrh	r2, [r7, #4]
 8002176:	883b      	ldrh	r3, [r7, #0]
 8002178:	4413      	add	r3, r2
 800217a:	b29b      	uxth	r3, r3
 800217c:	3b01      	subs	r3, #1
 800217e:	b29c      	uxth	r4, r3
 8002180:	887a      	ldrh	r2, [r7, #2]
 8002182:	f8b7 30a8 	ldrh.w	r3, [r7, #168]	; 0xa8
 8002186:	4413      	add	r3, r2
 8002188:	b29b      	uxth	r3, r3
 800218a:	3b01      	subs	r3, #1
 800218c:	b29b      	uxth	r3, r3
 800218e:	8879      	ldrh	r1, [r7, #2]
 8002190:	88b8      	ldrh	r0, [r7, #4]
 8002192:	4622      	mov	r2, r4
 8002194:	f7ff ff61 	bl	800205a <st7789_SetWindow>
    size_t bytestToWrite = width * height * 2;
 8002198:	883b      	ldrh	r3, [r7, #0]
 800219a:	f8b7 20a8 	ldrh.w	r2, [r7, #168]	; 0xa8
 800219e:	fb02 f303 	mul.w	r3, r2, r3
 80021a2:	005b      	lsls	r3, r3, #1
 80021a4:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
    uint16_t transferSize = (uint16_t)LCD_FILL_BUFFER_SIZE * 2;
 80021a8:	2380      	movs	r3, #128	; 0x80
 80021aa:	f8a7 308e 	strh.w	r3, [r7, #142]	; 0x8e
    while (bytestToWrite > 0) {
 80021ae:	e01a      	b.n	80021e6 <st7789_FillArea+0xba>
        if (bytestToWrite < transferSize) {
 80021b0:	f8b7 308e 	ldrh.w	r3, [r7, #142]	; 0x8e
 80021b4:	f8d7 2090 	ldr.w	r2, [r7, #144]	; 0x90
 80021b8:	429a      	cmp	r2, r3
 80021ba:	d203      	bcs.n	80021c4 <st7789_FillArea+0x98>
            transferSize = bytestToWrite;
 80021bc:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 80021c0:	f8a7 308e 	strh.w	r3, [r7, #142]	; 0x8e
        }
        bytestToWrite -= transferSize;
 80021c4:	f8b7 308e 	ldrh.w	r3, [r7, #142]	; 0x8e
 80021c8:	f8d7 2090 	ldr.w	r2, [r7, #144]	; 0x90
 80021cc:	1ad3      	subs	r3, r2, r3
 80021ce:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
        st7789_WriteDMA(&buf, transferSize);
 80021d2:	f8b7 208e 	ldrh.w	r2, [r7, #142]	; 0x8e
 80021d6:	f107 030c 	add.w	r3, r7, #12
 80021da:	4611      	mov	r1, r2
 80021dc:	4618      	mov	r0, r3
 80021de:	f7ff fd8f 	bl	8001d00 <st7789_WriteDMA>
        st7789_WaitForDMA();
 80021e2:	f7ff fdcb 	bl	8001d7c <st7789_WaitForDMA>
    while (bytestToWrite > 0) {
 80021e6:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 80021ea:	2b00      	cmp	r3, #0
 80021ec:	d1e0      	bne.n	80021b0 <st7789_FillArea+0x84>
    }
}
 80021ee:	bf00      	nop
 80021f0:	bf00      	nop
 80021f2:	379c      	adds	r7, #156	; 0x9c
 80021f4:	46bd      	mov	sp, r7
 80021f6:	bd90      	pop	{r4, r7, pc}

080021f8 <st7789_Clear>:


void st7789_Clear(uint16_t color) {
 80021f8:	b580      	push	{r7, lr}
 80021fa:	b084      	sub	sp, #16
 80021fc:	af02      	add	r7, sp, #8
 80021fe:	4603      	mov	r3, r0
 8002200:	80fb      	strh	r3, [r7, #6]
    st7789_FillArea(color, 0, 0, ST7789_LCD_WIDTH, ST7789_LCD_HEIGHT);
 8002202:	88f8      	ldrh	r0, [r7, #6]
 8002204:	23f0      	movs	r3, #240	; 0xf0
 8002206:	9300      	str	r3, [sp, #0]
 8002208:	23f0      	movs	r3, #240	; 0xf0
 800220a:	2200      	movs	r2, #0
 800220c:	2100      	movs	r1, #0
 800220e:	f7ff ff8d 	bl	800212c <st7789_FillArea>
}
 8002212:	bf00      	nop
 8002214:	3708      	adds	r7, #8
 8002216:	46bd      	mov	sp, r7
 8002218:	bd80      	pop	{r7, pc}

0800221a <st7789_RGBToColor>:


uint16_t st7789_RGBToColor(uint8_t r, uint8_t g, uint8_t b) {
 800221a:	b480      	push	{r7}
 800221c:	b083      	sub	sp, #12
 800221e:	af00      	add	r7, sp, #0
 8002220:	4603      	mov	r3, r0
 8002222:	71fb      	strb	r3, [r7, #7]
 8002224:	460b      	mov	r3, r1
 8002226:	71bb      	strb	r3, [r7, #6]
 8002228:	4613      	mov	r3, r2
 800222a:	717b      	strb	r3, [r7, #5]
    return (((uint16_t)r >> 3) << 11) | (((uint16_t)g >> 2) << 5) | ((uint16_t)b >> 3);
 800222c:	79fb      	ldrb	r3, [r7, #7]
 800222e:	08db      	lsrs	r3, r3, #3
 8002230:	b2db      	uxtb	r3, r3
 8002232:	02db      	lsls	r3, r3, #11
 8002234:	b21a      	sxth	r2, r3
 8002236:	79bb      	ldrb	r3, [r7, #6]
 8002238:	089b      	lsrs	r3, r3, #2
 800223a:	b2db      	uxtb	r3, r3
 800223c:	015b      	lsls	r3, r3, #5
 800223e:	b21b      	sxth	r3, r3
 8002240:	4313      	orrs	r3, r2
 8002242:	b21a      	sxth	r2, r3
 8002244:	797b      	ldrb	r3, [r7, #5]
 8002246:	08db      	lsrs	r3, r3, #3
 8002248:	b2db      	uxtb	r3, r3
 800224a:	b21b      	sxth	r3, r3
 800224c:	4313      	orrs	r3, r2
 800224e:	b21b      	sxth	r3, r3
 8002250:	b29b      	uxth	r3, r3
}
 8002252:	4618      	mov	r0, r3
 8002254:	370c      	adds	r7, #12
 8002256:	46bd      	mov	sp, r7
 8002258:	f85d 7b04 	ldr.w	r7, [sp], #4
 800225c:	4770      	bx	lr
	...

08002260 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8002260:	b480      	push	{r7}
 8002262:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8002264:	4b06      	ldr	r3, [pc, #24]	; (8002280 <SystemInit+0x20>)
 8002266:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800226a:	4a05      	ldr	r2, [pc, #20]	; (8002280 <SystemInit+0x20>)
 800226c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8002270:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8002274:	bf00      	nop
 8002276:	46bd      	mov	sp, r7
 8002278:	f85d 7b04 	ldr.w	r7, [sp], #4
 800227c:	4770      	bx	lr
 800227e:	bf00      	nop
 8002280:	e000ed00 	and	lr, r0, r0, lsl #26

08002284 <SystemCoreClockUpdate>:
  *     
  * @param  None
  * @retval None
  */
void SystemCoreClockUpdate(void)
{
 8002284:	b480      	push	{r7}
 8002286:	b087      	sub	sp, #28
 8002288:	af00      	add	r7, sp, #0
  uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 800228a:	2300      	movs	r3, #0
 800228c:	613b      	str	r3, [r7, #16]
 800228e:	2300      	movs	r3, #0
 8002290:	617b      	str	r3, [r7, #20]
 8002292:	2302      	movs	r3, #2
 8002294:	60fb      	str	r3, [r7, #12]
 8002296:	2300      	movs	r3, #0
 8002298:	60bb      	str	r3, [r7, #8]
 800229a:	2302      	movs	r3, #2
 800229c:	607b      	str	r3, [r7, #4]
  
  /* Get SYSCLK source -------------------------------------------------------*/
  tmp = RCC->CFGR & RCC_CFGR_SWS;
 800229e:	4b34      	ldr	r3, [pc, #208]	; (8002370 <SystemCoreClockUpdate+0xec>)
 80022a0:	689b      	ldr	r3, [r3, #8]
 80022a2:	f003 030c 	and.w	r3, r3, #12
 80022a6:	613b      	str	r3, [r7, #16]

  switch (tmp)
 80022a8:	693b      	ldr	r3, [r7, #16]
 80022aa:	2b08      	cmp	r3, #8
 80022ac:	d011      	beq.n	80022d2 <SystemCoreClockUpdate+0x4e>
 80022ae:	693b      	ldr	r3, [r7, #16]
 80022b0:	2b08      	cmp	r3, #8
 80022b2:	d844      	bhi.n	800233e <SystemCoreClockUpdate+0xba>
 80022b4:	693b      	ldr	r3, [r7, #16]
 80022b6:	2b00      	cmp	r3, #0
 80022b8:	d003      	beq.n	80022c2 <SystemCoreClockUpdate+0x3e>
 80022ba:	693b      	ldr	r3, [r7, #16]
 80022bc:	2b04      	cmp	r3, #4
 80022be:	d004      	beq.n	80022ca <SystemCoreClockUpdate+0x46>
 80022c0:	e03d      	b.n	800233e <SystemCoreClockUpdate+0xba>
  {
    case 0x00:  /* HSI used as system clock source */
      SystemCoreClock = HSI_VALUE;
 80022c2:	4b2c      	ldr	r3, [pc, #176]	; (8002374 <SystemCoreClockUpdate+0xf0>)
 80022c4:	4a2c      	ldr	r2, [pc, #176]	; (8002378 <SystemCoreClockUpdate+0xf4>)
 80022c6:	601a      	str	r2, [r3, #0]
      break;
 80022c8:	e03d      	b.n	8002346 <SystemCoreClockUpdate+0xc2>
    case 0x04:  /* HSE used as system clock source */
      SystemCoreClock = HSE_VALUE;
 80022ca:	4b2a      	ldr	r3, [pc, #168]	; (8002374 <SystemCoreClockUpdate+0xf0>)
 80022cc:	4a2b      	ldr	r2, [pc, #172]	; (800237c <SystemCoreClockUpdate+0xf8>)
 80022ce:	601a      	str	r2, [r3, #0]
      break;
 80022d0:	e039      	b.n	8002346 <SystemCoreClockUpdate+0xc2>
    case 0x08:  /* PLL used as system clock source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
         SYSCLK = PLL_VCO / PLL_P
         */    
      pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 80022d2:	4b27      	ldr	r3, [pc, #156]	; (8002370 <SystemCoreClockUpdate+0xec>)
 80022d4:	685b      	ldr	r3, [r3, #4]
 80022d6:	0d9b      	lsrs	r3, r3, #22
 80022d8:	f003 0301 	and.w	r3, r3, #1
 80022dc:	60bb      	str	r3, [r7, #8]
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80022de:	4b24      	ldr	r3, [pc, #144]	; (8002370 <SystemCoreClockUpdate+0xec>)
 80022e0:	685b      	ldr	r3, [r3, #4]
 80022e2:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80022e6:	607b      	str	r3, [r7, #4]
      
      if (pllsource != 0)
 80022e8:	68bb      	ldr	r3, [r7, #8]
 80022ea:	2b00      	cmp	r3, #0
 80022ec:	d00c      	beq.n	8002308 <SystemCoreClockUpdate+0x84>
      {
        /* HSE used as PLL clock source */
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 80022ee:	4a23      	ldr	r2, [pc, #140]	; (800237c <SystemCoreClockUpdate+0xf8>)
 80022f0:	687b      	ldr	r3, [r7, #4]
 80022f2:	fbb2 f3f3 	udiv	r3, r2, r3
 80022f6:	4a1e      	ldr	r2, [pc, #120]	; (8002370 <SystemCoreClockUpdate+0xec>)
 80022f8:	6852      	ldr	r2, [r2, #4]
 80022fa:	0992      	lsrs	r2, r2, #6
 80022fc:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8002300:	fb02 f303 	mul.w	r3, r2, r3
 8002304:	617b      	str	r3, [r7, #20]
 8002306:	e00b      	b.n	8002320 <SystemCoreClockUpdate+0x9c>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 8002308:	4a1b      	ldr	r2, [pc, #108]	; (8002378 <SystemCoreClockUpdate+0xf4>)
 800230a:	687b      	ldr	r3, [r7, #4]
 800230c:	fbb2 f3f3 	udiv	r3, r2, r3
 8002310:	4a17      	ldr	r2, [pc, #92]	; (8002370 <SystemCoreClockUpdate+0xec>)
 8002312:	6852      	ldr	r2, [r2, #4]
 8002314:	0992      	lsrs	r2, r2, #6
 8002316:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800231a:	fb02 f303 	mul.w	r3, r2, r3
 800231e:	617b      	str	r3, [r7, #20]
      }

      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 8002320:	4b13      	ldr	r3, [pc, #76]	; (8002370 <SystemCoreClockUpdate+0xec>)
 8002322:	685b      	ldr	r3, [r3, #4]
 8002324:	0c1b      	lsrs	r3, r3, #16
 8002326:	f003 0303 	and.w	r3, r3, #3
 800232a:	3301      	adds	r3, #1
 800232c:	005b      	lsls	r3, r3, #1
 800232e:	60fb      	str	r3, [r7, #12]
      SystemCoreClock = pllvco/pllp;
 8002330:	697a      	ldr	r2, [r7, #20]
 8002332:	68fb      	ldr	r3, [r7, #12]
 8002334:	fbb2 f3f3 	udiv	r3, r2, r3
 8002338:	4a0e      	ldr	r2, [pc, #56]	; (8002374 <SystemCoreClockUpdate+0xf0>)
 800233a:	6013      	str	r3, [r2, #0]
      break;
 800233c:	e003      	b.n	8002346 <SystemCoreClockUpdate+0xc2>
    default:
      SystemCoreClock = HSI_VALUE;
 800233e:	4b0d      	ldr	r3, [pc, #52]	; (8002374 <SystemCoreClockUpdate+0xf0>)
 8002340:	4a0d      	ldr	r2, [pc, #52]	; (8002378 <SystemCoreClockUpdate+0xf4>)
 8002342:	601a      	str	r2, [r3, #0]
      break;
 8002344:	bf00      	nop
  }
  /* Compute HCLK frequency --------------------------------------------------*/
  /* Get HCLK prescaler */
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 8002346:	4b0a      	ldr	r3, [pc, #40]	; (8002370 <SystemCoreClockUpdate+0xec>)
 8002348:	689b      	ldr	r3, [r3, #8]
 800234a:	091b      	lsrs	r3, r3, #4
 800234c:	f003 030f 	and.w	r3, r3, #15
 8002350:	4a0b      	ldr	r2, [pc, #44]	; (8002380 <SystemCoreClockUpdate+0xfc>)
 8002352:	5cd3      	ldrb	r3, [r2, r3]
 8002354:	613b      	str	r3, [r7, #16]
  /* HCLK frequency */
  SystemCoreClock >>= tmp;
 8002356:	4b07      	ldr	r3, [pc, #28]	; (8002374 <SystemCoreClockUpdate+0xf0>)
 8002358:	681a      	ldr	r2, [r3, #0]
 800235a:	693b      	ldr	r3, [r7, #16]
 800235c:	fa22 f303 	lsr.w	r3, r2, r3
 8002360:	4a04      	ldr	r2, [pc, #16]	; (8002374 <SystemCoreClockUpdate+0xf0>)
 8002362:	6013      	str	r3, [r2, #0]
}
 8002364:	bf00      	nop
 8002366:	371c      	adds	r7, #28
 8002368:	46bd      	mov	sp, r7
 800236a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800236e:	4770      	bx	lr
 8002370:	40023800 	andmi	r3, r2, r0, lsl #16
 8002374:	2000042c 	andcs	r0, r0, ip, lsr #8
 8002378:	00f42400 	rscseq	r2, r4, r0, lsl #8
 800237c:	017d7840 	cmneq	sp, r0, asr #16
 8002380:	0800272c 	stmdaeq	r0, {r2, r3, r5, r8, r9, sl, sp}

08002384 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 8002384:	f8df d034 	ldr.w	sp, [pc, #52]	; 80023bc <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8002388:	480d      	ldr	r0, [pc, #52]	; (80023c0 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 800238a:	490e      	ldr	r1, [pc, #56]	; (80023c4 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 800238c:	4a0e      	ldr	r2, [pc, #56]	; (80023c8 <LoopFillZerobss+0x1e>)
  movs r3, #0
 800238e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8002390:	e002      	b.n	8002398 <LoopCopyDataInit>

08002392 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8002392:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8002394:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8002396:	3304      	adds	r3, #4

08002398 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002398:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800239a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800239c:	d3f9      	bcc.n	8002392 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800239e:	4a0b      	ldr	r2, [pc, #44]	; (80023cc <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 80023a0:	4c0b      	ldr	r4, [pc, #44]	; (80023d0 <LoopFillZerobss+0x26>)
  movs r3, #0
 80023a2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80023a4:	e001      	b.n	80023aa <LoopFillZerobss>

080023a6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80023a6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80023a8:	3204      	adds	r2, #4

080023aa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80023aa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80023ac:	d3fb      	bcc.n	80023a6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80023ae:	f7ff ff57 	bl	8002260 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80023b2:	f7fe fa83 	bl	80008bc <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80023b6:	f7ff fbe5 	bl	8001b84 <main>
  bx  lr    
 80023ba:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 80023bc:	20010000 	andcs	r0, r1, r0
  ldr r0, =_sdata
 80023c0:	20000000 	andcs	r0, r0, r0
  ldr r1, =_edata
 80023c4:	20000430 	andcs	r0, r0, r0, lsr r4
  ldr r2, =_sidata
 80023c8:	08002750 	stmdaeq	r0, {r4, r6, r8, r9, sl, sp}
  ldr r2, =_sbss
 80023cc:	20000430 	andcs	r0, r0, r0, lsr r4
  ldr r4, =_ebss
 80023d0:	20000454 	andcs	r0, r0, r4, asr r4

080023d4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80023d4:	e7fe      	b.n	80023d4 <ADC_IRQHandler>

080023d6 <__aeabi_f2lz>:
 80023d6:	ee07 0a90 	vmov	s15, r0
 80023da:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80023de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80023e2:	b508      	push	{r3, lr}
 80023e4:	d403      	bmi.n	80023ee <__aeabi_f2lz+0x18>
 80023e6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80023ea:	f000 b80b 	b.w	8002404 <__aeabi_f2ulz>
 80023ee:	eef1 7a67 	vneg.f32	s15, s15
 80023f2:	ee17 0a90 	vmov	r0, s15
 80023f6:	f000 f805 	bl	8002404 <__aeabi_f2ulz>
 80023fa:	4240      	negs	r0, r0
 80023fc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8002400:	bd08      	pop	{r3, pc}
	...

08002404 <__aeabi_f2ulz>:
 8002404:	b5d0      	push	{r4, r6, r7, lr}
 8002406:	f7fe f9a5 	bl	8000754 <__aeabi_f2d>
 800240a:	4b0c      	ldr	r3, [pc, #48]	; (800243c <__aeabi_f2ulz+0x38>)
 800240c:	2200      	movs	r2, #0
 800240e:	4606      	mov	r6, r0
 8002410:	460f      	mov	r7, r1
 8002412:	f7fd ff0f 	bl	8000234 <__aeabi_dmul>
 8002416:	f7fe f9f5 	bl	8000804 <__aeabi_d2uiz>
 800241a:	4604      	mov	r4, r0
 800241c:	f7fe f978 	bl	8000710 <__aeabi_ui2d>
 8002420:	4b07      	ldr	r3, [pc, #28]	; (8002440 <__aeabi_f2ulz+0x3c>)
 8002422:	2200      	movs	r2, #0
 8002424:	f7fd ff06 	bl	8000234 <__aeabi_dmul>
 8002428:	4602      	mov	r2, r0
 800242a:	460b      	mov	r3, r1
 800242c:	4630      	mov	r0, r6
 800242e:	4639      	mov	r1, r7
 8002430:	f7fe f830 	bl	8000494 <__aeabi_dsub>
 8002434:	f7fe f9e6 	bl	8000804 <__aeabi_d2uiz>
 8002438:	4621      	mov	r1, r4
 800243a:	bdd0      	pop	{r4, r6, r7, pc}
 800243c:	3df00000 	ldclcc	0, cr0, [r0]
 8002440:	41f00000 	mvnsmi	r0, r0

08002444 <__udivmoddi4>:
 8002444:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002448:	468c      	mov	ip, r1
 800244a:	468e      	mov	lr, r1
 800244c:	9e08      	ldr	r6, [sp, #32]
 800244e:	4615      	mov	r5, r2
 8002450:	4604      	mov	r4, r0
 8002452:	4619      	mov	r1, r3
 8002454:	2b00      	cmp	r3, #0
 8002456:	f040 80af 	bne.w	80025b8 <__udivmoddi4+0x174>
 800245a:	4572      	cmp	r2, lr
 800245c:	fab2 f782 	clz	r7, r2
 8002460:	d943      	bls.n	80024ea <__udivmoddi4+0xa6>
 8002462:	b14f      	cbz	r7, 8002478 <__udivmoddi4+0x34>
 8002464:	f1c7 0320 	rsb	r3, r7, #32
 8002468:	fa0e fc07 	lsl.w	ip, lr, r7
 800246c:	fa20 f303 	lsr.w	r3, r0, r3
 8002470:	40bd      	lsls	r5, r7
 8002472:	ea43 0c0c 	orr.w	ip, r3, ip
 8002476:	40bc      	lsls	r4, r7
 8002478:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 800247c:	b2a8      	uxth	r0, r5
 800247e:	fbbc f8fe 	udiv	r8, ip, lr
 8002482:	0c23      	lsrs	r3, r4, #16
 8002484:	fb0e cc18 	mls	ip, lr, r8, ip
 8002488:	fb08 f900 	mul.w	r9, r8, r0
 800248c:	ea43 430c 	orr.w	r3, r3, ip, lsl #16
 8002490:	4599      	cmp	r9, r3
 8002492:	d928      	bls.n	80024e6 <__udivmoddi4+0xa2>
 8002494:	18eb      	adds	r3, r5, r3
 8002496:	f108 32ff 	add.w	r2, r8, #4294967295	; 0xffffffff
 800249a:	d204      	bcs.n	80024a6 <__udivmoddi4+0x62>
 800249c:	4599      	cmp	r9, r3
 800249e:	d902      	bls.n	80024a6 <__udivmoddi4+0x62>
 80024a0:	f1a8 0202 	sub.w	r2, r8, #2
 80024a4:	442b      	add	r3, r5
 80024a6:	eba3 0309 	sub.w	r3, r3, r9
 80024aa:	fbb3 fcfe 	udiv	ip, r3, lr
 80024ae:	b2a4      	uxth	r4, r4
 80024b0:	fb0e 331c 	mls	r3, lr, ip, r3
 80024b4:	fb0c f000 	mul.w	r0, ip, r0
 80024b8:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 80024bc:	42a0      	cmp	r0, r4
 80024be:	d979      	bls.n	80025b4 <__udivmoddi4+0x170>
 80024c0:	192c      	adds	r4, r5, r4
 80024c2:	f10c 33ff 	add.w	r3, ip, #4294967295	; 0xffffffff
 80024c6:	d204      	bcs.n	80024d2 <__udivmoddi4+0x8e>
 80024c8:	42a0      	cmp	r0, r4
 80024ca:	d902      	bls.n	80024d2 <__udivmoddi4+0x8e>
 80024cc:	f1ac 0302 	sub.w	r3, ip, #2
 80024d0:	442c      	add	r4, r5
 80024d2:	1a24      	subs	r4, r4, r0
 80024d4:	ea43 4002 	orr.w	r0, r3, r2, lsl #16
 80024d8:	b11e      	cbz	r6, 80024e2 <__udivmoddi4+0x9e>
 80024da:	40fc      	lsrs	r4, r7
 80024dc:	2300      	movs	r3, #0
 80024de:	6034      	str	r4, [r6, #0]
 80024e0:	6073      	str	r3, [r6, #4]
 80024e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80024e6:	4642      	mov	r2, r8
 80024e8:	e7dd      	b.n	80024a6 <__udivmoddi4+0x62>
 80024ea:	b902      	cbnz	r2, 80024ee <__udivmoddi4+0xaa>
 80024ec:	deff      	udf	#255	; 0xff
 80024ee:	b9e7      	cbnz	r7, 800252a <__udivmoddi4+0xe6>
 80024f0:	ebae 0302 	sub.w	r3, lr, r2
 80024f4:	2101      	movs	r1, #1
 80024f6:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80024fa:	b2a8      	uxth	r0, r5
 80024fc:	fbb3 fcfe 	udiv	ip, r3, lr
 8002500:	0c22      	lsrs	r2, r4, #16
 8002502:	fb0e 331c 	mls	r3, lr, ip, r3
 8002506:	fb0c f800 	mul.w	r8, ip, r0
 800250a:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
 800250e:	4598      	cmp	r8, r3
 8002510:	d94e      	bls.n	80025b0 <__udivmoddi4+0x16c>
 8002512:	18eb      	adds	r3, r5, r3
 8002514:	f10c 32ff 	add.w	r2, ip, #4294967295	; 0xffffffff
 8002518:	d204      	bcs.n	8002524 <__udivmoddi4+0xe0>
 800251a:	4598      	cmp	r8, r3
 800251c:	d902      	bls.n	8002524 <__udivmoddi4+0xe0>
 800251e:	f1ac 0202 	sub.w	r2, ip, #2
 8002522:	442b      	add	r3, r5
 8002524:	eba3 0308 	sub.w	r3, r3, r8
 8002528:	e7bf      	b.n	80024aa <__udivmoddi4+0x66>
 800252a:	f1c7 0120 	rsb	r1, r7, #32
 800252e:	fa2e f301 	lsr.w	r3, lr, r1
 8002532:	40bd      	lsls	r5, r7
 8002534:	fa0e fe07 	lsl.w	lr, lr, r7
 8002538:	fa20 f101 	lsr.w	r1, r0, r1
 800253c:	ea41 010e 	orr.w	r1, r1, lr
 8002540:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8002544:	b2aa      	uxth	r2, r5
 8002546:	fbb3 fcfe 	udiv	ip, r3, lr
 800254a:	fb0e 301c 	mls	r0, lr, ip, r3
 800254e:	0c0b      	lsrs	r3, r1, #16
 8002550:	fb0c f802 	mul.w	r8, ip, r2
 8002554:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8002558:	4598      	cmp	r8, r3
 800255a:	fa04 f407 	lsl.w	r4, r4, r7
 800255e:	d923      	bls.n	80025a8 <__udivmoddi4+0x164>
 8002560:	18eb      	adds	r3, r5, r3
 8002562:	f10c 30ff 	add.w	r0, ip, #4294967295	; 0xffffffff
 8002566:	d204      	bcs.n	8002572 <__udivmoddi4+0x12e>
 8002568:	4598      	cmp	r8, r3
 800256a:	d902      	bls.n	8002572 <__udivmoddi4+0x12e>
 800256c:	f1ac 0002 	sub.w	r0, ip, #2
 8002570:	442b      	add	r3, r5
 8002572:	eba3 0308 	sub.w	r3, r3, r8
 8002576:	fbb3 fcfe 	udiv	ip, r3, lr
 800257a:	fb0c f802 	mul.w	r8, ip, r2
 800257e:	fb0e 321c 	mls	r2, lr, ip, r3
 8002582:	b28b      	uxth	r3, r1
 8002584:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002588:	4598      	cmp	r8, r3
 800258a:	d90f      	bls.n	80025ac <__udivmoddi4+0x168>
 800258c:	18eb      	adds	r3, r5, r3
 800258e:	f10c 31ff 	add.w	r1, ip, #4294967295	; 0xffffffff
 8002592:	d204      	bcs.n	800259e <__udivmoddi4+0x15a>
 8002594:	4598      	cmp	r8, r3
 8002596:	d902      	bls.n	800259e <__udivmoddi4+0x15a>
 8002598:	f1ac 0102 	sub.w	r1, ip, #2
 800259c:	442b      	add	r3, r5
 800259e:	eba3 0308 	sub.w	r3, r3, r8
 80025a2:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 80025a6:	e7a6      	b.n	80024f6 <__udivmoddi4+0xb2>
 80025a8:	4660      	mov	r0, ip
 80025aa:	e7e2      	b.n	8002572 <__udivmoddi4+0x12e>
 80025ac:	4661      	mov	r1, ip
 80025ae:	e7f6      	b.n	800259e <__udivmoddi4+0x15a>
 80025b0:	4662      	mov	r2, ip
 80025b2:	e7b7      	b.n	8002524 <__udivmoddi4+0xe0>
 80025b4:	4663      	mov	r3, ip
 80025b6:	e78c      	b.n	80024d2 <__udivmoddi4+0x8e>
 80025b8:	4573      	cmp	r3, lr
 80025ba:	d905      	bls.n	80025c8 <__udivmoddi4+0x184>
 80025bc:	b10e      	cbz	r6, 80025c2 <__udivmoddi4+0x17e>
 80025be:	e9c6 0e00 	strd	r0, lr, [r6]
 80025c2:	2100      	movs	r1, #0
 80025c4:	4608      	mov	r0, r1
 80025c6:	e78c      	b.n	80024e2 <__udivmoddi4+0x9e>
 80025c8:	fab3 f783 	clz	r7, r3
 80025cc:	b987      	cbnz	r7, 80025f0 <__udivmoddi4+0x1ac>
 80025ce:	4573      	cmp	r3, lr
 80025d0:	d301      	bcc.n	80025d6 <__udivmoddi4+0x192>
 80025d2:	4282      	cmp	r2, r0
 80025d4:	d80a      	bhi.n	80025ec <__udivmoddi4+0x1a8>
 80025d6:	1a84      	subs	r4, r0, r2
 80025d8:	eb6e 0303 	sbc.w	r3, lr, r3
 80025dc:	2001      	movs	r0, #1
 80025de:	469c      	mov	ip, r3
 80025e0:	2e00      	cmp	r6, #0
 80025e2:	d06a      	beq.n	80026ba <__udivmoddi4+0x276>
 80025e4:	e9c6 4c00 	strd	r4, ip, [r6]
 80025e8:	2100      	movs	r1, #0
 80025ea:	e77a      	b.n	80024e2 <__udivmoddi4+0x9e>
 80025ec:	4638      	mov	r0, r7
 80025ee:	e7f7      	b.n	80025e0 <__udivmoddi4+0x19c>
 80025f0:	f1c7 0c20 	rsb	ip, r7, #32
 80025f4:	40bb      	lsls	r3, r7
 80025f6:	fa22 f40c 	lsr.w	r4, r2, ip
 80025fa:	431c      	orrs	r4, r3
 80025fc:	fa20 f10c 	lsr.w	r1, r0, ip
 8002600:	fa2e f30c 	lsr.w	r3, lr, ip
 8002604:	fa0e fe07 	lsl.w	lr, lr, r7
 8002608:	ea41 010e 	orr.w	r1, r1, lr
 800260c:	ea4f 4914 	mov.w	r9, r4, lsr #16
 8002610:	fa00 f507 	lsl.w	r5, r0, r7
 8002614:	fbb3 f8f9 	udiv	r8, r3, r9
 8002618:	fa1f fe84 	uxth.w	lr, r4
 800261c:	fb09 3018 	mls	r0, r9, r8, r3
 8002620:	0c0b      	lsrs	r3, r1, #16
 8002622:	fb08 fa0e 	mul.w	sl, r8, lr
 8002626:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800262a:	459a      	cmp	sl, r3
 800262c:	fa02 f207 	lsl.w	r2, r2, r7
 8002630:	d93f      	bls.n	80026b2 <__udivmoddi4+0x26e>
 8002632:	18e3      	adds	r3, r4, r3
 8002634:	f108 30ff 	add.w	r0, r8, #4294967295	; 0xffffffff
 8002638:	d204      	bcs.n	8002644 <__udivmoddi4+0x200>
 800263a:	459a      	cmp	sl, r3
 800263c:	d902      	bls.n	8002644 <__udivmoddi4+0x200>
 800263e:	f1a8 0002 	sub.w	r0, r8, #2
 8002642:	4423      	add	r3, r4
 8002644:	eba3 030a 	sub.w	r3, r3, sl
 8002648:	b289      	uxth	r1, r1
 800264a:	fbb3 f8f9 	udiv	r8, r3, r9
 800264e:	fb09 3318 	mls	r3, r9, r8, r3
 8002652:	fb08 fe0e 	mul.w	lr, r8, lr
 8002656:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800265a:	458e      	cmp	lr, r1
 800265c:	d92b      	bls.n	80026b6 <__udivmoddi4+0x272>
 800265e:	1861      	adds	r1, r4, r1
 8002660:	f108 33ff 	add.w	r3, r8, #4294967295	; 0xffffffff
 8002664:	d204      	bcs.n	8002670 <__udivmoddi4+0x22c>
 8002666:	458e      	cmp	lr, r1
 8002668:	d902      	bls.n	8002670 <__udivmoddi4+0x22c>
 800266a:	f1a8 0302 	sub.w	r3, r8, #2
 800266e:	4421      	add	r1, r4
 8002670:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8002674:	fba0 9802 	umull	r9, r8, r0, r2
 8002678:	eba1 010e 	sub.w	r1, r1, lr
 800267c:	4541      	cmp	r1, r8
 800267e:	46ce      	mov	lr, r9
 8002680:	4643      	mov	r3, r8
 8002682:	d302      	bcc.n	800268a <__udivmoddi4+0x246>
 8002684:	d106      	bne.n	8002694 <__udivmoddi4+0x250>
 8002686:	454d      	cmp	r5, r9
 8002688:	d204      	bcs.n	8002694 <__udivmoddi4+0x250>
 800268a:	ebb9 0e02 	subs.w	lr, r9, r2
 800268e:	eb68 0304 	sbc.w	r3, r8, r4
 8002692:	3801      	subs	r0, #1
 8002694:	b18e      	cbz	r6, 80026ba <__udivmoddi4+0x276>
 8002696:	ebb5 020e 	subs.w	r2, r5, lr
 800269a:	eb61 0103 	sbc.w	r1, r1, r3
 800269e:	fa01 fc0c 	lsl.w	ip, r1, ip
 80026a2:	fa22 f307 	lsr.w	r3, r2, r7
 80026a6:	ea4c 0303 	orr.w	r3, ip, r3
 80026aa:	40f9      	lsrs	r1, r7
 80026ac:	e9c6 3100 	strd	r3, r1, [r6]
 80026b0:	e79a      	b.n	80025e8 <__udivmoddi4+0x1a4>
 80026b2:	4640      	mov	r0, r8
 80026b4:	e7c6      	b.n	8002644 <__udivmoddi4+0x200>
 80026b6:	4643      	mov	r3, r8
 80026b8:	e7da      	b.n	8002670 <__udivmoddi4+0x22c>
 80026ba:	4631      	mov	r1, r6
 80026bc:	e711      	b.n	80024e2 <__udivmoddi4+0x9e>
	...

080026c0 <_init>:
 80026c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80026c2:	bf00      	nop
 80026c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80026c6:	bc08      	pop	{r3}
 80026c8:	469e      	mov	lr, r3
 80026ca:	4770      	bx	lr

080026cc <_fini>:
 80026cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80026ce:	bf00      	nop
 80026d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80026d2:	bc08      	pop	{r3}
 80026d4:	469e      	mov	lr, r3
 80026d6:	4770      	bx	lr

Disassembly of section .rodata:

080026d8 <_global_impure_ptr-0x50>:
 80026d8:	00000000 	andeq	r0, r0, r0
 80026dc:	00000055 	andeq	r0, r0, r5, asr r0
 80026e0:	33000c0c 	movwcc	r0, #3084	; 0xc0c
 80026e4:	00000033 	andeq	r0, r0, r3, lsr r0
 80026e8:	00000035 	andeq	r0, r0, r5, lsr r0
 80026ec:	0000001f 	andeq	r0, r0, pc, lsl r0
 80026f0:	0000002c 	andeq	r0, r0, ip, lsr #32
 80026f4:	0000c301 	andeq	ip, r0, r1, lsl #6
 80026f8:	00000020 	andeq	r0, r0, r0, lsr #32
 80026fc:	0000000f 	andeq	r0, r0, pc
 8002700:	0000a1a4 	andeq	sl, r0, r4, lsr #3
 8002704:	00000800 	andeq	r0, r0, r0, lsl #16
 8002708:	00006429 	andeq	r6, r0, r9, lsr #8
 800270c:	00000000 	andeq	r0, r0, r0
 8002710:	00006411 	andeq	r6, r0, r1, lsl r4
 8002714:	00000000 	andeq	r0, r0, r0
 8002718:	00000035 	andeq	r0, r0, r5, lsr r0
 800271c:	00000000 	andeq	r0, r0, r0
 8002720:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
 8002724:	00000000 	andeq	r0, r0, r0

08002728 <_global_impure_ptr>:
 8002728:	20000000 	andcs	r0, r0, r0

0800272c <AHBPrescTable>:
	...
 8002734:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8002738:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}

Disassembly of section .ARM:

0800273c <__exidx_start>:
 800273c:	7ffffd08 	svcvc	0x00fffd08
 8002740:	00000001 	andeq	r0, r0, r1

Disassembly of section .init_array:

08002744 <__init_array_start>:
 8002744:	08000989 	stmdaeq	r0, {r0, r3, r7, r8, fp}

08002748 <__frame_dummy_init_array_entry>:
 8002748:	08000869 	stmdaeq	r0, {r0, r3, r5, r6, fp}

Disassembly of section .fini_array:

0800274c <__do_global_dtors_aux_fini_array_entry>:
 800274c:	08000845 	stmdaeq	r0, {r0, r2, r6, fp}

Disassembly of section .data:

20000000 <impure_data>:
20000000:	00000000 	andeq	r0, r0, r0
20000004:	200002ec 	andcs	r0, r0, ip, ror #5
20000008:	20000354 	andcs	r0, r0, r4, asr r3
2000000c:	200003bc 			; <UNDEFINED> instruction: 0x200003bc
	...
200000a8:	00000001 	andeq	r0, r0, r1
200000ac:	00000000 	andeq	r0, r0, r0
200000b0:	abcd330e 	blge	1f34ccf0 <_sidata+0x1734a5a0>
200000b4:	e66d1234 			; <UNDEFINED> instruction: 0xe66d1234
200000b8:	0005deec 	andeq	sp, r5, ip, ror #29
200000bc:	0000000b 	andeq	r0, r0, fp
	...

20000428 <__atexit_recursive_mutex>:
20000428:	2000044c 	andcs	r0, r0, ip, asr #8

2000042c <SystemCoreClock>:
uint32_t SystemCoreClock = 16000000;
2000042c:	00f42400 	rscseq	r2, r4, r0, lsl #8

Disassembly of section .bss:

20000430 <completed.1>:
20000430:	00000000 	andeq	r0, r0, r0

20000434 <object.0>:
	...

2000044c <__lock___atexit_recursive_mutex>:
2000044c:	00000000 	andeq	r0, r0, r0

20000450 <tick>:
__IO uint32_t tick = 0;
20000450:	00000000 	andeq	r0, r0, r0

Disassembly of section ._user_heap_stack:

20000454 <._user_heap_stack>:
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
void st7789_ReadSpi(uint8_t *data, size_t length) {
   0:	00002f41 	andeq	r2, r0, r1, asr #30
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
    ST7789_SPI->CR1 &= ~(SPI_CR1_BIDIOE);
   c:	00000025 	andeq	r0, r0, r5, lsr #32
  10:	2d453705 	stclcs	7, cr3, [r5, #-20]	; 0xffffffec
  14:	0d06004d 	stceq	0, cr0, [r6, #-308]	; 0xfffffecc
    uint8_t dummy = 0;
  18:	02094d07 	andeq	r4, r9, #448	; 0x1c0
        while (!(ST7789_SPI->SR & SPI_SR_TXE));
  1c:	0412060a 	ldreq	r0, [r2], #-1546	; 0xfffff9f6
  20:	01150114 	tsteq	r5, r4, lsl r1
  24:	01180317 	tsteq	r8, r7, lsl r3
  28:	011b011a 	tsteq	fp, sl, lsl r1
        ST7789_SPI->DR = dummy;
  2c:	0122011c 			; <UNDEFINED> instruction: 0x0122011c

Disassembly of section .debug_info:

00000000 <.debug_info>:
void st7789_ReadSpi(uint8_t *data, size_t length) {
       0:	00001587 	andeq	r1, r0, r7, lsl #11
       4:	04010005 	streq	r0, [r1], #-5
       8:	00000000 	andeq	r0, r0, r0
    ST7789_SPI->CR1 &= ~(SPI_CR1_BIDIOE);
       c:	00011923 	andeq	r1, r1, r3, lsr #18
      10:	05be1d00 	ldreq	r1, [lr, #3328]!	; 0xd00
      14:	0afa0000 	beq	ffe8001c <_estack+0xdfe7001c>
    uint8_t dummy = 0;
      18:	000c0000 	andeq	r0, ip, r0
	...
        while (!(ST7789_SPI->SR & SPI_SR_TXE));
      24:	05240000 	streq	r0, [r4, #-0]!
      28:	0001b501 	andeq	fp, r1, r1, lsl #10
        ST7789_SPI->DR = dummy;
      2c:	01430300 	mrseq	r0, (UNDEF: 115)
        while (!(ST7789_SPI->SR & SPI_SR_RXNE));
      30:	000001b5 			; <UNDEFINED> instruction: 0x000001b5
      34:	00052d11 	andeq	r2, r5, r1, lsl sp
      38:	74117200 	ldrvc	r7, [r1], #-512	; 0xfffffe00
      3c:	74000005 	strvc	r0, [r0], #-5
        *data++ = ST7789_SPI->DR;
      40:	00064211 	andeq	r4, r6, r1, lsl r2
      44:	ab117500 	blge	45d44c <_Min_Stack_Size+0x45d04c>
      48:	76000003 	strvc	r0, [r0], -r3
    while (length--) {
      4c:	0006ba11 	andeq	fp, r6, r1, lsl sl
      50:	84117b00 	ldrhi	r7, [r1], #-2816	; 0xfffff500
      54:	7c000009 	stcvc	0, cr0, [r0], {9}
    while (ST7789_SPI->SR & SPI_SR_BSY);
      58:	000b1711 	andeq	r1, fp, r1, lsl r7
      5c:	83117e00 	tsthi	r1, #0, 28
      60:	7f000002 	svcvc	0x00000002
    ST7789_SPI->CR1 |= SPI_CR1_BIDIOE;
      64:	00055b02 	andeq	r5, r5, r2, lsl #22
      68:	0f020000 	svceq	0x00020000
      6c:	01000009 	tsteq	r0, r9
}
      70:	00059f02 	andeq	r9, r5, r2, lsl #30
      74:	09020200 	stmdbeq	r2, {r9}
      78:	03000000 	movweq	r0, #0
      7c:	00009502 	andeq	r9, r0, r2, lsl #10
        line = line + PIXEL_BUFFER_LINES;
      80:	e2020400 	and	r0, r2, #0, 8
      84:	05000009 	streq	r0, [r0, #-9]
        batch += 1;
      88:	00093102 	andeq	r3, r9, r2, lsl #2
      8c:	b2020600 	andlt	r0, r2, #0, 12
      90:	07000004 	streq	r0, [r0, -r4]
      94:	00001702 	andeq	r1, r0, r2, lsl #14
      98:	0c020800 	stceq	8, cr0, [r2], {-0}
      9c:	0900000b 	stmdbeq	r0, {r0, r1, r3}
    while (line < ST7789_LCD_HEIGHT) {
      a0:	00072a02 	andeq	r2, r7, r2, lsl #20
      a4:	f0020a00 			; <UNDEFINED> instruction: 0xf0020a00
      a8:	0b000007 	bleq	cc <_Min_Heap_Size-0x134>
    st7789_WaitNanosecs(2000000);
      ac:	00078e02 	andeq	r8, r7, r2, lsl #28
      b0:	bb020c00 	bllt	830b8 <_Min_Stack_Size+0x82cb8>
}
      b4:	0d000002 	stceq	0, cr0, [r0, #-8]
      b8:	000a1502 	andeq	r1, sl, r2, lsl #10
      bc:	53020e00 	movwpl	r0, #11776	; 0x2e00
      c0:	0f000009 	svceq	0x00000009
      c4:	0004db02 	andeq	sp, r4, r2, lsl #22
      c8:	22021000 	andcs	r1, r2, #0
      cc:	11000000 	mrsne	r0, (UNDEF: 0)
      d0:	0008e302 	andeq	lr, r8, r2, lsl #6
      d4:	af021200 	svcge	0x00021200
      d8:	1700000a 	strne	r0, [r0, -sl]
      dc:	00066302 	andeq	r6, r6, r2, lsl #6
      e0:	50021800 	andpl	r1, r2, r0, lsl #16
      e4:	1900000a 	stmdbne	r0, {r1, r3}
      e8:	00025902 	andeq	r5, r2, r2, lsl #18
      ec:	a5021a00 	strge	r1, [r2, #-2560]	; 0xfffff600
      f0:	1b000004 	blne	108 <_Min_Heap_Size-0xf8>
      f4:	0000a902 	andeq	sl, r0, r2, lsl #18
      f8:	6f021c00 	svcvs	0x00021c00
      fc:	1d000008 	stcne	0, cr0, [r0, #-32]	; 0xffffffe0
     100:	00042e02 	andeq	r2, r4, r2, lsl #28
     104:	5a021e00 	bpl	8790c <_Min_Stack_Size+0x8750c>
     108:	1f000004 	svcne	0x00000004
     10c:	00034102 	andeq	r4, r3, r2, lsl #2
     110:	52022000 	andpl	r2, r2, #0
     114:	21000007 	tstcs	r0, r7
     118:	00062302 	andeq	r2, r6, r2, lsl #6
     11c:	a8022200 	stmdage	r2, {r9, sp}
     120:	23000006 	movwcs	r0, #6
     124:	0001f302 	andeq	pc, r1, r2, lsl #6
     128:	7e022400 	cfcpysvc	mvf2, mvf2
     12c:	25000008 	strcs	r0, [r0, #-8]
     130:	00043802 	andeq	r3, r4, r2, lsl #16
     134:	49022600 	stmdbmi	r2, {r9, sl, sp}
     138:	28000008 	stmdacs	r0, {r3}
     13c:	00081402 	andeq	r1, r8, r2, lsl #8
     140:	14022900 	strne	r2, [r2], #-2304	; 0xfffff700
     144:	2a000007 	bcs	168 <_Min_Heap_Size-0x98>
     148:	000b3f02 	andeq	r3, fp, r2, lsl #30
     14c:	ea022f00 	b	8bd54 <_Min_Stack_Size+0x8b954>
     150:	3100000a 	tstcc	r0, sl
     154:	0003a102 	andeq	sl, r3, r2, lsl #2
     158:	8b023200 	blhi	8c960 <_Min_Stack_Size+0x8c560>
     15c:	33000000 	movwcc	r0, #0
     160:	00060c02 	andeq	r0, r6, r2, lsl #24
     164:	6e023800 	cdpvs	8, 0, cr3, cr2, cr0, {0}
     168:	39000000 	stmdbcc	r0, {}	; <UNPREDICTABLE>
     16c:	000b8c02 	andeq	r8, fp, r2, lsl #24
     170:	a0023a00 	andge	r3, r2, r0, lsl #20
     174:	3b000007 	blcc	198 <_Min_Heap_Size-0x68>
     178:	0002ef02 	andeq	lr, r2, r2, lsl #30
     17c:	19023c00 	stmdbne	r2, {sl, fp, ip, sp}
     180:	43000005 	movwmi	r0, #5
     184:	00024202 	andeq	r4, r2, r2, lsl #4
     188:	65024400 	strvs	r4, [r2, #-1024]	; 0xfffffc00
     18c:	45000009 	strmi	r0, [r0, #-9]
     190:	0004ff02 	andeq	pc, r4, r2, lsl #30
     194:	ce024600 	cfmadd32gt	mvax0, mvfx4, mvfx2, mvfx0
     198:	47000000 	strmi	r0, [r0, -r0]
     19c:	0009a302 	andeq	sl, r9, r2, lsl #6
     1a0:	37024800 	strcc	r4, [r2, -r0, lsl #16]
     1a4:	49000008 	stmdbmi	r0, {r3}
     1a8:	0006f202 	andeq	pc, r6, r2, lsl #4
     1ac:	2d025100 	stfcss	f5, [r2, #-0]
     1b0:	54000008 	strpl	r0, [r0], #-8
     1b4:	06010a00 	streq	r0, [r1], -r0, lsl #20
     1b8:	000002e3 	andeq	r0, r0, r3, ror #5
     1bc:	0005af08 	andeq	sl, r5, r8, lsl #30
     1c0:	03860300 	orreq	r0, r6, #0, 6
     1c4:	00000026 	andeq	r0, r0, r6, lsr #32
     1c8:	00010f08 	andeq	r0, r1, r8, lsl #30
     1cc:	182b0400 	stmdane	fp!, {sl}
     1d0:	000001d4 	ldrdeq	r0, [r0], -r4
     1d4:	e108010a 	tst	r8, sl, lsl #2
     1d8:	0a000002 	beq	1e8 <_Min_Heap_Size-0x18>
     1dc:	09d80502 	ldmibeq	r8, {r1, r8, sl}^
     1e0:	ee080000 	cdp	0, 0, cr0, cr8, cr0, {0}
     1e4:	04000003 	streq	r0, [r0], #-3
     1e8:	01ee1939 	mvneq	r1, r9, lsr r9
     1ec:	020a0000 	andeq	r0, sl, #0
     1f0:	000abc07 	andeq	fp, sl, r7, lsl #24
     1f4:	0b510800 	bleq	14421fc <_Min_Stack_Size+0x1441dfc>
     1f8:	4d040000 	stcmi	0, cr0, [r4, #-0]
     1fc:	00020118 	andeq	r0, r2, r8, lsl r1
     200:	05040a00 	streq	r0, [r4, #-2560]	; 0xfffff600
     204:	00000686 	andeq	r0, r0, r6, lsl #13
     208:	00067608 	andeq	r7, r6, r8, lsl #12
     20c:	194f0400 	stmdbne	pc, {sl}^	; <UNPREDICTABLE>
     210:	00000214 	andeq	r0, r0, r4, lsl r2
     214:	5d07040a 	cfstrspl	mvf0, [r7, #-40]	; 0xffffffd8
     218:	08000008 	stmdaeq	r0, {r3}
     21c:	00000a63 	andeq	r0, r0, r3, ror #20
     220:	27186704 	ldrcs	r6, [r8, -r4, lsl #14]
     224:	0a000002 	beq	234 <_Min_Heap_Size+0x34>
     228:	06810508 	streq	r0, [r1], r8, lsl #10
     22c:	080a0000 	stmdaeq	sl, {}	; <UNPREDICTABLE>
     230:	00085807 	andeq	r5, r8, r7, lsl #16
     234:	05042500 	streq	r2, [r4, #-1280]	; 0xfffffb00
     238:	00746e69 	rsbseq	r6, r4, r9, ror #28
     23c:	6207040a 	andvs	r0, r7, #167772160	; 0xa000000
     240:	08000008 	stmdaeq	r0, {r3}
     244:	00000111 	andeq	r0, r0, r1, lsl r1
     248:	c8131805 	ldmdagt	r3, {r0, r2, fp, ip}
     24c:	10000001 	andne	r0, r0, r1
     250:	00000243 	andeq	r0, r0, r3, asr #4
     254:	0003f008 	andeq	pc, r3, r8
     258:	14240500 	strtne	r0, [r4], #-1280	; 0xfffffb00
     25c:	000001e2 	andeq	r0, r0, r2, ror #3
     260:	000b5308 	andeq	r5, fp, r8, lsl #6
     264:	132c0500 			; <UNDEFINED> instruction: 0x132c0500
     268:	000001f5 	strdeq	r0, [r0], -r5
     26c:	00067808 	andeq	r7, r6, r8, lsl #16
     270:	14300500 	ldrtne	r0, [r0], #-1280	; 0xfffffb00
     274:	00000208 	andeq	r0, r0, r8, lsl #4
     278:	00026c10 	andeq	r6, r2, r0, lsl ip
     27c:	02781400 	rsbseq	r1, r8, #0, 8
     280:	6c140000 	ldcvs	0, cr0, [r4], {-0}
     284:	08000002 	stmdaeq	r0, {r1}
     288:	00000a65 	andeq	r0, r0, r5, ror #20
     28c:	1b133805 	blne	4ce2a8 <_Min_Stack_Size+0x4cdea8>
     290:	26000002 	strcs	r0, [r0], -r2
     294:	96010e04 	strls	r0, [r1], -r4, lsl #28
     298:	034d0901 	movteq	r0, #55553	; 0xd901
     29c:	5b010000 	blpl	402a4 <_Min_Stack_Size+0x3fea4>
     2a0:	0100000b 	tsteq	r0, fp
     2a4:	5d120198 	ldfpls	f0, [r2, #-608]	; 0xfffffda0
     2a8:	00000003 	andeq	r0, r0, r3
     2ac:	0002cd01 	andeq	ip, r2, r1, lsl #26
     2b0:	01990100 	orrseq	r0, r9, r0, lsl #2
     2b4:	00036212 	andeq	r6, r3, r2, lsl r2
     2b8:	ec012000 	stc	0, cr2, [r1], {-0}
     2bc:	01000008 	tsteq	r0, r8
     2c0:	5d12019a 	ldfpls	f0, [r2, #-616]	; 0xfffffd98
     2c4:	80000003 	andhi	r0, r0, r3
     2c8:	00000001 	andeq	r0, r0, r1
     2cc:	019b0100 	orrseq	r0, fp, r0, lsl #2
     2d0:	00036212 	andeq	r6, r3, r2, lsl r2
     2d4:	0712a000 	ldreq	sl, [r2, -r0]
     2d8:	9c00000b 	stcls	0, cr0, [r0], {11}
     2dc:	00035d01 	andeq	r5, r3, r1, lsl #26
     2e0:	12010000 	andne	r0, r1, #0
     2e4:	0000038d 	andeq	r0, r0, sp, lsl #7
     2e8:	0362019d 	cmneq	r2, #1073741863	; 0x40000027
     2ec:	01200000 			; <UNDEFINED> instruction: 0x01200000
     2f0:	0000c012 	andeq	ip, r0, r2, lsl r0
     2f4:	5d019e00 	stcpl	14, cr9, [r1, #-0]
     2f8:	80000003 	andhi	r0, r0, r3
     2fc:	03971201 	orrseq	r1, r7, #268435456	; 0x10000000
     300:	019f0000 	orrseq	r0, pc, r0
     304:	00000362 	andeq	r0, r0, r2, ror #6
     308:	3c1201a0 	ldfccs	f0, [r2], {160}	; 0xa0
     30c:	a0000003 	andge	r0, r0, r3
     310:	00035d01 	andeq	r5, r3, r1, lsl #26
     314:	12020000 	andne	r0, r2, #0
     318:	00000301 	andeq	r0, r0, r1, lsl #6
     31c:	037201a1 	cmneq	r2, #1073741864	; 0x40000028
     320:	02200000 	eoreq	r0, r0, #0
     324:	00504927 	subseq	r4, r0, r7, lsr #18
     328:	1201a201 	andne	sl, r1, #268435456	; 0x10000000
     32c:	00000392 	muleq	r0, r2, r3
     330:	0b120300 	bleq	480f38 <_Min_Stack_Size+0x480b38>
     334:	a3000003 	movwge	r0, #3
     338:	00039701 	andeq	r9, r3, r1, lsl #14
     33c:	1203f000 	andne	pc, r3, #0
     340:	00000455 	andeq	r0, r0, r5, asr r4
     344:	027801a4 	rsbseq	r0, r8, #164, 2	; 0x29
     348:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
     34c:	02780600 	rsbseq	r0, r8, #0, 12
     350:	035d0000 	cmpeq	sp, #0
     354:	3c070000 	stccc	0, cr0, [r7], {-0}
     358:	07000002 	streq	r0, [r0, -r2]
     35c:	034d1000 	movteq	r1, #53248	; 0xd000
     360:	6c060000 	stcvs	0, cr0, [r6], {-0}
     364:	72000002 	andvc	r0, r0, #2
     368:	07000003 	streq	r0, [r0, -r3]
     36c:	0000023c 	andeq	r0, r0, ip, lsr r2
     370:	6c060017 	stcvs	0, cr0, [r6], {23}
     374:	82000002 	andhi	r0, r0, #2
     378:	07000003 	streq	r0, [r0, -r3]
     37c:	0000023c 	andeq	r0, r0, ip, lsr r2
     380:	4f060037 	svcmi	0x00060037
     384:	92000002 	andls	r0, r0, #2
     388:	07000003 	streq	r0, [r0, -r3]
     38c:	0000023c 	andeq	r0, r0, ip, lsr r2
     390:	821000ef 	andshi	r0, r0, #239	; 0xef
     394:	06000003 	streq	r0, [r0], -r3
     398:	0000026c 	andeq	r0, r0, ip, ror #4
     39c:	000003a8 	andeq	r0, r0, r8, lsr #7
     3a0:	00023c19 	andeq	r3, r2, r9, lsl ip
     3a4:	00028300 	andeq	r8, r2, r0, lsl #6
     3a8:	00082313 	andeq	r2, r8, r3, lsl r3
     3ac:	01a50100 			; <UNDEFINED> instruction: 0x01a50100
     3b0:	00029304 	andeq	r9, r2, r4, lsl #6
     3b4:	018c1500 	orreq	r1, ip, r0, lsl #10
     3b8:	04e501b8 	strbteq	r0, [r5], #440	; 0x1b8
     3bc:	26010000 	strcs	r0, [r1], -r0
     3c0:	01000002 	tsteq	r0, r2
     3c4:	7d1201ba 	ldfvcs	f0, [r2, #-744]	; 0xfffffd18
     3c8:	00000002 	andeq	r0, r0, r2
     3cc:	00029801 	andeq	r9, r2, r1, lsl #16
     3d0:	01bb0100 			; <UNDEFINED> instruction: 0x01bb0100
     3d4:	00027812 	andeq	r7, r2, r2, lsl r8
     3d8:	86010400 	strhi	r0, [r1], -r0, lsl #8
     3dc:	01000000 	mrseq	r0, (UNDEF: 0)
     3e0:	781201bc 	ldmdavc	r2, {r2, r3, r4, r5, r7, r8}
     3e4:	08000002 	stmdaeq	r0, {r1}
     3e8:	00021801 	andeq	r1, r2, r1, lsl #16
     3ec:	01bd0100 			; <UNDEFINED> instruction: 0x01bd0100
     3f0:	00027812 	andeq	r7, r2, r2, lsl r8
     3f4:	53050c00 	movwpl	r0, #23552	; 0x5c00
     3f8:	01005243 	tsteq	r0, r3, asr #4
     3fc:	781201be 	ldmdavc	r2, {r1, r2, r3, r4, r5, r7, r8}
     400:	10000002 	andne	r0, r0, r2
     404:	52434305 	subpl	r4, r3, #335544320	; 0x14000000
     408:	01bf0100 			; <UNDEFINED> instruction: 0x01bf0100
     40c:	00027812 	andeq	r7, r2, r2, lsl r8
     410:	53051400 	movwpl	r1, #21504	; 0x5400
     414:	01005048 	tsteq	r0, r8, asr #32
     418:	f51201c0 			; <UNDEFINED> instruction: 0xf51201c0
     41c:	18000004 	stmdane	r0, {r2}
     420:	00044901 	andeq	r4, r4, r1, lsl #18
     424:	01c10100 	biceq	r0, r1, r0, lsl #2
     428:	00027812 	andeq	r7, r2, r2, lsl r8
     42c:	48012400 	stmdami	r1, {sl, sp}
     430:	01000009 	tsteq	r0, r9
     434:	781201c2 	ldmdavc	r2, {r1, r6, r7, r8}
     438:	28000002 	stmdacs	r0, {r1}
     43c:	00041501 	andeq	r1, r4, r1, lsl #10
     440:	01c30100 	biceq	r0, r3, r0, lsl #2
     444:	00027812 	andeq	r7, r2, r2, lsl r8
     448:	e0012c00 	and	r2, r1, r0, lsl #24
     44c:	01000003 	tsteq	r0, r3
     450:	781201c4 	ldmdavc	r2, {r2, r6, r7, r8}
     454:	30000002 	andcc	r0, r0, r2
     458:	0009d201 	andeq	sp, r9, r1, lsl #4
     45c:	01c50100 	biceq	r0, r5, r0, lsl #2
     460:	00027812 	andeq	r7, r2, r2, lsl r8
     464:	70013400 	andvc	r3, r1, r0, lsl #8
     468:	01000007 	tsteq	r0, r7
     46c:	781201c6 	ldmdavc	r2, {r1, r2, r6, r7, r8}
     470:	38000002 	stmdacc	r0, {r1}
     474:	00091801 	andeq	r1, r9, r1, lsl #16
     478:	01c70100 	biceq	r0, r7, r0, lsl #2
     47c:	00027812 	andeq	r7, r2, r2, lsl r8
     480:	50053c00 	andpl	r3, r5, r0, lsl #24
     484:	01005246 	tsteq	r0, r6, asr #4
     488:	0f1201c8 	svceq	0x001201c8
     48c:	40000005 	andmi	r0, r0, r5
     490:	52464405 	subpl	r4, r6, #83886080	; 0x5000000
     494:	01c90100 	biceq	r0, r9, r0, lsl #2
     498:	00027d12 	andeq	r7, r2, r2, lsl sp
     49c:	41054800 	tstmi	r5, r0, lsl #16
     4a0:	01005244 	tsteq	r0, r4, asr #4
     4a4:	7d1201ca 	ldfvcs	f0, [r2, #-808]	; 0xfffffcd8
     4a8:	4c000002 	stcmi	0, cr0, [r0], {2}
     4ac:	0009c101 	andeq	ip, r9, r1, lsl #2
     4b0:	01cb0100 	biceq	r0, fp, r0, lsl #2
     4b4:	00052912 	andeq	r2, r5, r2, lsl r9
     4b8:	10015000 	andne	r5, r1, r0
     4bc:	0100000a 	tsteq	r0, sl
     4c0:	431201cc 	tstmi	r2, #204, 2	; 0x33
     4c4:	60000005 	andvs	r0, r0, r5
     4c8:	0002cd01 	andeq	ip, r2, r1, lsl #26
     4cc:	01cd0100 	biceq	r0, sp, r0, lsl #2
     4d0:	00054812 	andeq	r4, r5, r2, lsl r8
     4d4:	f4017400 	vst3.8	{d7-d9}, [r1], r0
     4d8:	0100000a 	tsteq	r0, sl
     4dc:	781201ce 	ldmdavc	r2, {r1, r2, r3, r6, r7, r8}
     4e0:	88000002 	stmdahi	r0, {r1}
     4e4:	024f0600 	subeq	r0, pc, #0, 12
     4e8:	04f50000 	ldrbteq	r0, [r5], #0
     4ec:	3c070000 	stccc	0, cr0, [r7], {-0}
     4f0:	0b000002 	bleq	500 <_Min_Stack_Size+0x100>
     4f4:	04e51000 	strbteq	r1, [r5], #0
     4f8:	7d060000 	stcvc	0, cr0, [r6, #-0]
     4fc:	0a000002 	beq	50c <_Min_Stack_Size+0x10c>
     500:	07000005 	streq	r0, [r0, -r5]
     504:	0000023c 	andeq	r0, r0, ip, lsr r2
     508:	fa140001 	blx	500514 <_Min_Stack_Size+0x500114>
     50c:	10000004 	andne	r0, r0, r4
     510:	0000050a 	andeq	r0, r0, sl, lsl #10
     514:	00027d06 	andeq	r7, r2, r6, lsl #26
     518:	00052400 	andeq	r2, r5, r0, lsl #8
     51c:	023c0700 	eorseq	r0, ip, #0, 14
     520:	00030000 	andeq	r0, r3, r0
     524:	00051414 	andeq	r1, r5, r4, lsl r4
     528:	05241000 	streq	r1, [r4, #-0]!
     52c:	7d060000 	stcvc	0, cr0, [r6, #-0]
     530:	3e000002 	cdpcc	0, 0, cr0, cr0, cr2, {0}
     534:	07000005 	streq	r0, [r0, -r5]
     538:	0000023c 	andeq	r0, r0, ip, lsr r2
     53c:	2e140004 	cdpcs	0, 1, cr0, cr4, cr4, {0}
     540:	10000005 	andne	r0, r0, r5
     544:	0000053e 	andeq	r0, r0, lr, lsr r5
     548:	00026c06 	andeq	r6, r2, r6, lsl #24
     54c:	00055800 	andeq	r5, r5, r0, lsl #16
     550:	023c0700 	eorseq	r0, ip, #0, 14
     554:	00040000 	andeq	r0, r4, r0
     558:	0003d713 	andeq	sp, r3, r3, lsl r7
     55c:	01cf0100 	biceq	r0, pc, r0, lsl #2
     560:	0003b503 	andeq	fp, r3, r3, lsl #10
     564:	026c0600 	rsbeq	r0, ip, #0, 12
     568:	05750000 	ldrbeq	r0, [r5, #-0]!
     56c:	3c070000 	stccc	0, cr0, [r7], {-0}
     570:	00000002 	andeq	r0, r0, r2
     574:	01101500 	tsteq	r0, r0, lsl #10
     578:	05b702f7 	ldreq	r0, [r7, #759]!	; 0x2f7
     57c:	35010000 	strcc	r0, [r1, #-0]
     580:	01000007 	tsteq	r0, r7
     584:	781202f9 	ldmdavc	r2, {r0, r3, r4, r5, r6, r7, r9}
     588:	00000002 	andeq	r0, r0, r2
     58c:	00097f01 	andeq	r7, r9, r1, lsl #30
     590:	02fa0100 	rscseq	r0, sl, #0, 2
     594:	00027812 	andeq	r7, r2, r2, lsl r8
     598:	56050400 	strpl	r0, [r5], -r0, lsl #8
     59c:	01004c41 	tsteq	r0, r1, asr #24
     5a0:	781202fb 	ldmdavc	r2, {r0, r1, r3, r4, r5, r6, r7, r9}
     5a4:	08000002 	stmdaeq	r0, {r1}
     5a8:	00092401 	andeq	r2, r9, r1, lsl #8
     5ac:	02fc0100 	rscseq	r0, ip, #0, 2
     5b0:	00027d12 	andeq	r7, r2, r2, lsl sp
     5b4:	13000c00 	movwne	r0, #3072	; 0xc00
     5b8:	000007bf 			; <UNDEFINED> instruction: 0x000007bf
     5bc:	0302fd01 	movweq	pc, #11521	; 0x2d01	; <UNPREDICTABLE>
     5c0:	00000575 	andeq	r0, r0, r5, ror r5
     5c4:	00026c06 	andeq	r6, r2, r6, lsl #24
     5c8:	0005d400 	andeq	sp, r5, r0, lsl #8
     5cc:	023c0700 	eorseq	r0, ip, #0, 14
     5d0:	00010000 	andeq	r0, r1, r0
     5d4:	00058f28 	andeq	r8, r5, r8, lsr #30
     5d8:	114a0700 	cmpne	sl, r0, lsl #14
     5dc:	0000026c 	andeq	r0, r0, ip, ror #4
     5e0:	fa031c29 	blx	c768c <_Min_Stack_Size+0xc728c>
     5e4:	00063e09 	andeq	r3, r6, r9, lsl #28
     5e8:	43411e00 	movtmi	r1, #7680	; 0x1e00
     5ec:	78fc0052 	ldmvc	ip!, {r1, r4, r6}^
     5f0:	00000002 	andeq	r0, r0, r2
     5f4:	0005281f 	andeq	r2, r5, pc, lsl r8
     5f8:	0278fd00 	rsbseq	pc, r8, #0, 26
     5fc:	1f040000 	svcne	0x00040000
     600:	00000525 	andeq	r0, r0, r5, lsr #10
     604:	000278fe 	strdeq	r7, [r2], -lr
     608:	531e0800 	tstpl	lr, #0, 16
     60c:	78ff0052 	ldmvc	pc!, {r1, r4, r6}^	; <UNPREDICTABLE>
     610:	0c000002 	stceq	0, cr0, [r0], {2}
     614:	00524305 	subseq	r4, r2, r5, lsl #6
     618:	11010003 	tstne	r1, r3
     61c:	00000278 	andeq	r0, r0, r8, ror r2
     620:	0a960110 	beq	fe580a68 <_estack+0xde570a68>
     624:	01030000 	mrseq	r0, (UNDEF: 3)
     628:	02781101 	rsbseq	r1, r8, #1073741824	; 0x40000000
     62c:	01140000 	tsteq	r4, r0
     630:	000007e9 	andeq	r0, r0, r9, ror #15
     634:	11010203 	tstne	r1, r3, lsl #4
     638:	00000278 	andeq	r0, r0, r8, ror r2
     63c:	6d130018 	ldcvs	0, cr0, [r3, #-96]	; 0xffffffa0
     640:	0300000a 	movweq	r0, #10
     644:	e0030103 	and	r0, r3, r3, lsl #2
     648:	15000005 	strne	r0, [r0, #-5]
     64c:	01090328 	tsteq	r9, r8, lsr #6
     650:	000006d3 	ldrdeq	r0, [r0], -r3
     654:	000aa201 	andeq	sl, sl, r1, lsl #4
     658:	010b0300 	mrseq	r0, (UNDEF: 59)
     65c:	00027811 	andeq	r7, r2, r1, lsl r8
     660:	1d010000 	stcne	0, cr0, [r1, #-0]
     664:	03000009 	movweq	r0, #9
     668:	7811010c 	ldmdavc	r1, {r2, r3, r8}
     66c:	04000002 	streq	r0, [r0], #-2
     670:	00063a01 	andeq	r3, r6, r1, lsl #20
     674:	010d0300 	mrseq	r0, SP_mon
     678:	00027811 	andeq	r7, r2, r1, lsl r8
     67c:	8f010800 	svchi	0x00010800
     680:	03000006 	movweq	r0, #6
     684:	7811010e 	ldmdavc	r1, {r1, r2, r3, r8}
     688:	0c000002 	stceq	0, cr0, [r0], {2}
     68c:	52444905 	subpl	r4, r4, #81920	; 0x14000
     690:	010f0300 	mrseq	r0, SP_hyp
     694:	00027811 	andeq	r7, r2, r1, lsl r8
     698:	4f051000 	svcmi	0x00051000
     69c:	03005244 	movweq	r5, #580	; 0x244
     6a0:	78110110 	ldmdavc	r1, {r4, r8}
     6a4:	14000002 	strne	r0, [r0], #-2
     6a8:	000a3e01 	andeq	r3, sl, r1, lsl #28
     6ac:	01110300 	tsteq	r1, r0, lsl #6
     6b0:	00027811 	andeq	r7, r2, r1, lsl r8
     6b4:	1e011800 	cdpne	8, 0, cr1, cr1, cr0, {0}
     6b8:	03000006 	movweq	r0, #6
     6bc:	78110112 	ldmdavc	r1, {r1, r4, r8}
     6c0:	1c000002 	stcne	0, cr0, [r0], {2}
     6c4:	52464105 	subpl	r4, r6, #1073741825	; 0x40000001
     6c8:	01130300 	tsteq	r3, r0, lsl #6
     6cc:	0006e311 	andeq	lr, r6, r1, lsl r3
     6d0:	06002000 	streq	r2, [r0], -r0
     6d4:	00000278 	andeq	r0, r0, r8, ror r2
     6d8:	000006e3 	andeq	r0, r0, r3, ror #13
     6dc:	00023c07 	andeq	r3, r2, r7, lsl #24
     6e0:	10000100 	andne	r0, r0, r0, lsl #2
     6e4:	000006d3 	ldrdeq	r0, [r0], -r3
     6e8:	000a4313 	andeq	r4, sl, r3, lsl r3
     6ec:	01140300 	tsteq	r4, r0, lsl #6
     6f0:	00064b03 	andeq	r4, r6, r3, lsl #22
     6f4:	03901500 	orrseq	r1, r0, #0, 10
     6f8:	08be0150 	ldmeq	lr!, {r4, r6, r8}
     6fc:	43050000 	movwmi	r0, #20480	; 0x5000
     700:	52030052 	andpl	r0, r3, #82	; 0x52
     704:	02781101 	rsbseq	r1, r8, #1073741824	; 0x40000000
     708:	01000000 	mrseq	r0, (UNDEF: 0)
     70c:	000006b2 			; <UNDEFINED> instruction: 0x000006b2
     710:	11015303 	tstne	r1, r3, lsl #6
     714:	00000278 	andeq	r0, r0, r8, ror r2
     718:	02930104 	addseq	r0, r3, #4, 2
     71c:	54030000 	strpl	r0, [r3], #-0
     720:	02781101 	rsbseq	r1, r8, #1073741824	; 0x40000000
     724:	05080000 	streq	r0, [r8, #-0]
     728:	00524943 	subseq	r4, r2, r3, asr #18
     72c:	11015503 	tstne	r1, r3, lsl #10
     730:	00000278 	andeq	r0, r0, r8, ror r2
     734:	03e5010c 	mvneq	r0, #12, 2
     738:	56030000 	strpl	r0, [r3], -r0
     73c:	02781101 	rsbseq	r1, r8, #1073741824	; 0x40000000
     740:	01100000 	tsteq	r0, r0
     744:	000009b0 			; <UNDEFINED> instruction: 0x000009b0
     748:	11015703 	tstne	r1, r3, lsl #14
     74c:	00000278 	andeq	r0, r0, r8, ror r2
     750:	07cc0114 	bfieq	r0, r4, #2, #11
     754:	58030000 	stmdapl	r3, {}	; <UNPREDICTABLE>
     758:	02781101 	rsbseq	r1, r8, #1073741824	; 0x40000000
     75c:	01180000 	tsteq	r8, r0
     760:	000002cd 	andeq	r0, r0, sp, asr #5
     764:	11015903 	tstne	r1, r3, lsl #18
     768:	0000026c 	andeq	r0, r0, ip, ror #4
     76c:	080b011c 	stmdaeq	fp, {r2, r3, r4, r8}
     770:	5a030000 	bpl	c0778 <_Min_Stack_Size+0xc0378>
     774:	02781101 	rsbseq	r1, r8, #1073741824	; 0x40000000
     778:	01200000 			; <UNDEFINED> instruction: 0x01200000
     77c:	000006cf 	andeq	r0, r0, pc, asr #13
     780:	11015b03 	tstne	r1, r3, lsl #22
     784:	00000278 	andeq	r0, r0, r8, ror r2
     788:	02d70124 	sbcseq	r0, r7, #36, 2
     78c:	5c030000 	stcpl	0, cr0, [r3], {-0}
     790:	05c41101 	strbeq	r1, [r4, #257]	; 0x101
     794:	01280000 			; <UNDEFINED> instruction: 0x01280000
     798:	00000977 	andeq	r0, r0, r7, ror r9
     79c:	11015d03 	tstne	r1, r3, lsl #26
     7a0:	00000278 	andeq	r0, r0, r8, ror r2
     7a4:	03f90130 	mvnseq	r0, #48, 2
     7a8:	5e030000 	cdppl	0, 0, cr0, cr3, cr0, {0}
     7ac:	02781101 	rsbseq	r1, r8, #1073741824	; 0x40000000
     7b0:	01340000 	teqeq	r4, r0
     7b4:	000004bd 			; <UNDEFINED> instruction: 0x000004bd
     7b8:	11015f03 	tstne	r1, r3, lsl #30
     7bc:	00000278 	andeq	r0, r0, r8, ror r2
     7c0:	038d0138 	orreq	r0, sp, #56, 2
     7c4:	60030000 	andvs	r0, r3, r0
     7c8:	026c1101 	rsbeq	r1, ip, #1073741824	; 0x40000000
     7cc:	013c0000 	teqeq	ip, r0
     7d0:	00000565 	andeq	r0, r0, r5, ror #10
     7d4:	11016103 	tstne	r1, r3, lsl #2
     7d8:	00000278 	andeq	r0, r0, r8, ror r2
     7dc:	02710140 	rsbseq	r0, r1, #64, 2
     7e0:	62030000 	andvs	r0, r3, #0
     7e4:	02781101 	rsbseq	r1, r8, #1073741824	; 0x40000000
     7e8:	01440000 	mrseq	r0, (UNDEF: 68)
     7ec:	00000397 	muleq	r0, r7, r3
     7f0:	11016303 	tstne	r1, r3, lsl #6
     7f4:	000005c4 	andeq	r0, r0, r4, asr #11
     7f8:	02790148 	rsbseq	r0, r9, #72, 2
     7fc:	64030000 	strvs	r0, [r3], #-0
     800:	02781101 	rsbseq	r1, r8, #1073741824	; 0x40000000
     804:	01500000 	cmpeq	r0, r0
     808:	00000207 	andeq	r0, r0, r7, lsl #4
     80c:	11016503 	tstne	r1, r3, lsl #10
     810:	00000278 	andeq	r0, r0, r8, ror r2
     814:	08f60154 	ldmeq	r6!, {r2, r4, r6, r8}^
     818:	66030000 	strvs	r0, [r3], -r0
     81c:	02781101 	rsbseq	r1, r8, #1073741824	; 0x40000000
     820:	01580000 	cmpeq	r8, r0
     824:	00000301 	andeq	r0, r0, r1, lsl #6
     828:	11016703 	tstne	r1, r3, lsl #14
     82c:	0000026c 	andeq	r0, r0, ip, ror #4
     830:	0784015c 			; <UNDEFINED> instruction: 0x0784015c
     834:	68030000 	stmdavs	r3, {}	; <UNPREDICTABLE>
     838:	02781101 	rsbseq	r1, r8, #1073741824	; 0x40000000
     83c:	01600000 	cmneq	r0, r0
     840:	0000070a 	andeq	r0, r0, sl, lsl #14
     844:	11016903 	tstne	r1, r3, lsl #18
     848:	00000278 	andeq	r0, r0, r8, ror r2
     84c:	030b0164 	movweq	r0, #45412	; 0xb164
     850:	6a030000 	bvs	c0858 <_Min_Stack_Size+0xc0458>
     854:	05c41101 	strbeq	r1, [r4, #257]	; 0x101
     858:	01680000 	cmneq	r8, r0
     85c:	00000444 	andeq	r0, r0, r4, asr #8
     860:	11016b03 	tstne	r1, r3, lsl #22
     864:	00000278 	andeq	r0, r0, r8, ror r2
     868:	53430570 	movtpl	r0, #13680	; 0x3570
     86c:	6c030052 	stcvs	0, cr0, [r3], {82}	; 0x52
     870:	02781101 	rsbseq	r1, r8, #1073741824	; 0x40000000
     874:	01740000 	cmneq	r4, r0
     878:	00000315 	andeq	r0, r0, r5, lsl r3
     87c:	11016d03 	tstne	r1, r3, lsl #26
     880:	000005c4 	andeq	r0, r0, r4, asr #11
     884:	06a20178 			; <UNDEFINED> instruction: 0x06a20178
     888:	6e030000 	cdpvs	0, 0, cr0, cr3, cr0, {0}
     88c:	02781101 	rsbseq	r1, r8, #1073741824	; 0x40000000
     890:	01800000 	orreq	r0, r0, r0
     894:	0000003a 	andeq	r0, r0, sl, lsr r0
     898:	11016f03 	tstne	r1, r3, lsl #30
     89c:	00000278 	andeq	r0, r0, r8, ror r2
     8a0:	031f0184 	tsteq	pc, #132, 2	; 0x21
     8a4:	70030000 	andvc	r0, r3, r0
     8a8:	05651101 	strbeq	r1, [r5, #-257]!	; 0xfffffeff
     8ac:	01880000 	orreq	r0, r8, r0
     8b0:	00000290 	muleq	r0, r0, r2
     8b4:	11017103 	tstne	r1, r3, lsl #2
     8b8:	00000278 	andeq	r0, r0, r8, ror r2
     8bc:	c613008c 	ldrgt	r0, [r3], -ip, lsl #1
     8c0:	03000009 	movweq	r0, #9
     8c4:	f5030172 			; <UNDEFINED> instruction: 0xf5030172
     8c8:	15000006 	strne	r0, [r0, #-6]
     8cc:	01c40324 	biceq	r0, r4, r4, lsr #6
     8d0:	00000951 	andeq	r0, r0, r1, asr r9
     8d4:	31524305 	cmpcc	r2, r5, lsl #6
     8d8:	01c60300 	biceq	r0, r6, r0, lsl #6
     8dc:	00027811 	andeq	r7, r2, r1, lsl r8
     8e0:	43050000 	movwmi	r0, #20480	; 0x5000
     8e4:	03003252 	movweq	r3, #594	; 0x252
     8e8:	781101c7 	ldmdavc	r1, {r0, r1, r2, r6, r7, r8}
     8ec:	04000002 	streq	r0, [r0], #-2
     8f0:	00525305 	subseq	r5, r2, r5, lsl #6
     8f4:	1101c803 	tstne	r1, r3, lsl #16
     8f8:	00000278 	andeq	r0, r0, r8, ror r2
     8fc:	52440508 	subpl	r0, r4, #8, 10	; 0x2000000
     900:	01c90300 	biceq	r0, r9, r0, lsl #6
     904:	00027811 	andeq	r7, r2, r1, lsl r8
     908:	4d010c00 	stcmi	12, cr0, [r1, #-0]
     90c:	03000009 	movweq	r0, #9
     910:	781101ca 	ldmdavc	r1, {r1, r3, r6, r7, r8}
     914:	10000002 	andne	r0, r0, r2
     918:	0006fb01 	andeq	pc, r6, r1, lsl #22
     91c:	01cb0300 	biceq	r0, fp, r0, lsl #6
     920:	00027811 	andeq	r7, r2, r1, lsl r8
     924:	11011400 	tstne	r1, r0, lsl #8
     928:	03000002 	movweq	r0, #2
     92c:	781101cc 	ldmdavc	r1, {r2, r3, r6, r7, r8}
     930:	18000002 	stmdane	r0, {r1}
     934:	00003d01 	andeq	r3, r0, r1, lsl #26
     938:	01cd0300 	biceq	r0, sp, r0, lsl #6
     93c:	00027811 	andeq	r7, r2, r1, lsl r8
     940:	9c011c00 	stcls	12, cr1, [r1], {-0}
     944:	0300000a 	movweq	r0, #10
     948:	781101ce 	ldmdavc	r1, {r1, r2, r3, r6, r7, r8}
     94c:	20000002 	andcs	r0, r0, r2
     950:	093c1300 	ldmdbeq	ip!, {r8, r9, ip}
     954:	cf030000 	svcgt	0x00030000
     958:	08cb0301 	stmiaeq	fp, {r0, r8, r9}^
     95c:	54150000 	ldrpl	r0, [r5], #-0
     960:	8c01d603 	stchi	6, cr13, [r1], {3}
     964:	0500000a 	streq	r0, [r0, #-10]
     968:	00315243 	eorseq	r5, r1, r3, asr #4
     96c:	1101d803 	tstne	r1, r3, lsl #16
     970:	00000278 	andeq	r0, r0, r8, ror r2
     974:	52430500 	subpl	r0, r3, #0, 10
     978:	d9030032 	stmdble	r3, {r1, r4, r5}
     97c:	02781101 	rsbseq	r1, r8, #1073741824	; 0x40000000
     980:	01040000 	mrseq	r0, (UNDEF: 4)
     984:	000008f1 	strdeq	r0, [r0], -r1
     988:	1101da03 	tstne	r1, r3, lsl #20
     98c:	00000278 	andeq	r0, r0, r8, ror r2
     990:	058a0108 	streq	r0, [sl, #264]	; 0x108
     994:	db030000 	blle	c099c <_Min_Stack_Size+0xc059c>
     998:	02781101 	rsbseq	r1, r8, #1073741824	; 0x40000000
     99c:	050c0000 	streq	r0, [ip, #-0]
     9a0:	03005253 	movweq	r5, #595	; 0x253
     9a4:	781101dc 	ldmdavc	r1, {r2, r3, r4, r6, r7, r8}
     9a8:	10000002 	andne	r0, r0, r2
     9ac:	52474505 	subpl	r4, r7, #20971520	; 0x1400000
     9b0:	01dd0300 	bicseq	r0, sp, r0, lsl #6
     9b4:	00027811 	andeq	r7, r2, r1, lsl r8
     9b8:	bb011400 	bllt	459c0 <_Min_Stack_Size+0x455c0>
     9bc:	03000003 	movweq	r0, #3
     9c0:	781101de 	ldmdavc	r1, {r1, r2, r3, r4, r6, r7, r8}
     9c4:	18000002 	stmdane	r0, {r1}
     9c8:	0003c101 	andeq	ip, r3, r1, lsl #2
     9cc:	01df0300 	bicseq	r0, pc, r0, lsl #6
     9d0:	00027811 	andeq	r7, r2, r1, lsl r8
     9d4:	79011c00 	stmdbvc	r1, {sl, fp, ip}
     9d8:	03000008 	movweq	r0, #8
     9dc:	781101e0 	ldmdavc	r1, {r5, r6, r7, r8}
     9e0:	20000002 	andcs	r0, r0, r2
     9e4:	544e4305 	strbpl	r4, [lr], #-773	; 0xfffffcfb
     9e8:	01e10300 	mvneq	r0, r0, lsl #6
     9ec:	00027811 	andeq	r7, r2, r1, lsl r8
     9f0:	50052400 	andpl	r2, r5, r0, lsl #8
     9f4:	03004353 	movweq	r4, #851	; 0x353
     9f8:	781101e2 	ldmdavc	r1, {r1, r5, r6, r7, r8}
     9fc:	28000002 	stmdacs	r0, {r1}
     a00:	52524105 	subspl	r4, r2, #1073741825	; 0x40000001
     a04:	01e30300 	mvneq	r0, r0, lsl #6
     a08:	00027811 	andeq	r7, r2, r1, lsl r8
     a0c:	52052c00 	andpl	r2, r5, #0, 24
     a10:	03005243 	movweq	r5, #579	; 0x243
     a14:	781101e4 	ldmdavc	r1, {r2, r5, r6, r7, r8}
     a18:	30000002 	andcc	r0, r0, r2
     a1c:	0000eb01 	andeq	lr, r0, r1, lsl #22
     a20:	01e50300 	mvneq	r0, r0, lsl #6
     a24:	00027811 	andeq	r7, r2, r1, lsl r8
     a28:	f0013400 			; <UNDEFINED> instruction: 0xf0013400
     a2c:	03000000 	movweq	r0, #0
     a30:	781101e6 	ldmdavc	r1, {r1, r2, r5, r6, r7, r8}
     a34:	38000002 	stmdacc	r0, {r1}
     a38:	0000f501 	andeq	pc, r0, r1, lsl #10
     a3c:	01e70300 	mvneq	r0, r0, lsl #6
     a40:	00027811 	andeq	r7, r2, r1, lsl r8
     a44:	fa013c00 	blx	4fa4c <_Min_Stack_Size+0x4f64c>
     a48:	03000000 	movweq	r0, #0
     a4c:	781101e8 	ldmdavc	r1, {r3, r5, r6, r7, r8}
     a50:	40000002 	andmi	r0, r0, r2
     a54:	000a9101 	andeq	r9, sl, r1, lsl #2
     a58:	01e90300 	mvneq	r0, r0, lsl #6
     a5c:	00027811 	andeq	r7, r2, r1, lsl r8
     a60:	44054400 	strmi	r4, [r5], #-1024	; 0xfffffc00
     a64:	03005243 	movweq	r5, #579	; 0x243
     a68:	781101ea 	ldmdavc	r1, {r1, r3, r5, r6, r7, r8}
     a6c:	48000002 	stmdami	r0, {r1}
     a70:	0000bb01 	andeq	fp, r0, r1, lsl #22
     a74:	01eb0300 	mvneq	r0, r0, lsl #6
     a78:	00027811 	andeq	r7, r2, r1, lsl r8
     a7c:	4f054c00 	svcmi	0x00054c00
     a80:	ec030052 	stc	0, cr0, [r3], {82}	; 0x52
     a84:	02781101 	rsbseq	r1, r8, #1073741824	; 0x40000000
     a88:	00500000 	subseq	r0, r0, r0
     a8c:	0002af13 	andeq	sl, r2, r3, lsl pc
     a90:	01ed0300 	mvneq	r0, r0, lsl #6
     a94:	00095e03 	andeq	r5, r9, r3, lsl #28
     a98:	0aa80800 	beq	fea02aa0 <_estack+0xde9f2aa0>
     a9c:	d1060000 	mrsle	r0, (UNDEF: 6)
     aa0:	00023c17 	andeq	r3, r2, r7, lsl ip
     aa4:	04080a00 	streq	r0, [r8], #-2560	; 0xfffff600
     aa8:	000007d5 	ldrdeq	r0, [r0], -r5
     aac:	b31a042a 	tstlt	sl, #704643072	; 0x2a000000
     ab0:	0a00000a 	beq	ae0 <_Min_Stack_Size+0x6e0>
     ab4:	02ea0801 	rsceq	r0, sl, #65536	; 0x10000
     ab8:	b3140000 	tstlt	r4, #0
     abc:	1a00000a 	bne	aec <_Min_Stack_Size+0x6ec>
     ac0:	00000aba 			; <UNDEFINED> instruction: 0x00000aba
     ac4:	000ac91a 	andeq	ip, sl, sl, lsl r9
     ac8:	072c2b00 	streq	r2, [ip, -r0, lsl #22]!
     acc:	02000006 	andeq	r0, r0, #6
     ad0:	02780f07 	rsbseq	r0, r8, #7, 30
     ad4:	03050000 	movweq	r0, #20480	; 0x5000
     ad8:	20000450 	andcs	r0, r0, r0, asr r4
     adc:	0007e108 	andeq	lr, r7, r8, lsl #2
     ae0:	11090200 	mrsne	r0, R9_fiq
     ae4:	00000287 	andeq	r0, r0, r7, lsl #5
     ae8:	0007b208 	andeq	fp, r7, r8, lsl #4
     aec:	0d0e0200 	sfmeq	f0, 4, [lr, #-0]
     af0:	00000235 	andeq	r0, r0, r5, lsr r2
     af4:	0006de16 	andeq	sp, r6, r6, lsl lr
     af8:	067e0800 	ldrbteq	r0, [lr], -r0, lsl #16
     afc:	00065616 	andeq	r5, r6, r6, lsl r6
     b00:	06730800 	ldrbteq	r0, [r3], -r0, lsl #16
     b04:	000a7b16 	andeq	r7, sl, r6, lsl fp
     b08:	0d680700 	stcleq	7, cr0, [r8, #-0]
     b0c:	00004e1c 	andeq	r4, r0, ip, lsl lr
     b10:	07010900 	streq	r0, [r1, -r0, lsl #18]
     b14:	00000aac 	andeq	r0, r0, ip, lsr #21
     b18:	00000b27 	andeq	r0, r0, r7, lsr #22
     b1c:	0002350b 	andeq	r3, r2, fp, lsl #10
     b20:	0ac40b00 	beq	ff103728 <_estack+0xdf0f3728>
     b24:	1b000000 	blne	b2c <_Min_Stack_Size+0x72c>
     b28:	0000036c 	andeq	r0, r0, ip, ror #6
     b2c:	0b387208 	bleq	e1d354 <_Min_Stack_Size+0xe1cf54>
     b30:	6c0b0000 	stcvs	0, cr0, [fp], {-0}
     b34:	00000002 	andeq	r0, r0, r2
     b38:	0004ed16 	andeq	lr, r4, r6, lsl sp
     b3c:	06790800 	ldrbteq	r0, [r9], -r0, lsl #16
     b40:	0004881b 	andeq	r8, r4, fp, lsl r8
     b44:	56780800 	ldrbtpl	r0, [r8], -r0, lsl #16
     b48:	0b00000b 	bleq	b7c <_Min_Stack_Size+0x77c>
     b4c:	00000aac 	andeq	r0, r0, ip, lsr #21
     b50:	0002540b 	andeq	r5, r2, fp, lsl #8
     b54:	aa160000 	bge	580b5c <_Min_Stack_Size+0x58075c>
     b58:	08000008 	stmdaeq	r0, {r3}
     b5c:	981b067f 	ldmdals	fp, {r0, r1, r2, r3, r4, r5, r6, r9, sl}
     b60:	08000004 	stmdaeq	r0, {r2}
     b64:	000b6f82 	andeq	r6, fp, r2, lsl #31
     b68:	02540b00 	subseq	r0, r4, #0, 22
     b6c:	1c000000 	stcne	0, cr0, [r0], {-0}
     b70:	000009fe 	strdeq	r0, [r0], -lr
     b74:	540a8308 	strpl	r8, [sl], #-776	; 0xfffffcf8
     b78:	8f000002 	svchi	0x00000002
     b7c:	0b00000b 	bleq	bb0 <_Min_Stack_Size+0x7b0>
     b80:	00000243 	andeq	r0, r0, r3, asr #4
     b84:	0002430b 	andeq	r4, r2, fp, lsl #6
     b88:	02430b00 	subeq	r0, r3, #0, 22
     b8c:	1b000000 	blne	b94 <_Min_Stack_Size+0x794>
     b90:	00000b7a 	andeq	r0, r0, sl, ror fp
     b94:	0ba00209 	bleq	fe8013c0 <_estack+0xde7f13c0>
     b98:	bf0b0000 	svclt	0x000b0000
     b9c:	0000000a 	andeq	r0, r0, sl
     ba0:	0002541c 	andeq	r5, r2, ip, lsl r4
     ba4:	08e30a00 	stmiaeq	r3!, {r9, fp}^
     ba8:	00000aae 	andeq	r0, r0, lr, lsr #21
     bac:	00000bc0 	andeq	r0, r0, r0, asr #23
     bb0:	0002350b 	andeq	r3, r2, fp, lsl #10
     bb4:	0aae0b00 	beq	feb837bc <_estack+0xdeb737bc>
     bb8:	350b0000 	strcc	r0, [fp, #-0]
     bbc:	00000002 	andeq	r0, r0, r2
     bc0:	0002321d 	andeq	r3, r2, sp, lsl r2
     bc4:	04020c00 	streq	r0, [r2], #-3072	; 0xfffff400
     bc8:	1c08001c 	stcne	0, cr0, [r8], {28}
     bcc:	01000000 	mrseq	r0, (UNDEF: 0)
     bd0:	117c2d9c 			; <UNDEFINED> instruction: 0x117c2d9c
     bd4:	f1020000 	cps	#0
     bd8:	02350501 	eorseq	r0, r5, #4194304	; 0x400000
     bdc:	1b840000 	blne	fe100be4 <_estack+0xde0f0be4>
     be0:	00800800 	addeq	r0, r0, r0, lsl #16
     be4:	9c010000 	stcls	0, cr0, [r1], {-0}
     be8:	0004701d 	andeq	r7, r4, sp, lsl r0
     bec:	7c01cb00 			; <UNDEFINED> instruction: 0x7c01cb00
     bf0:	0808001a 	stmdaeq	r8, {r1, r3, r4}
     bf4:	01000001 	tsteq	r0, r1
     bf8:	047e1d9c 	ldrbteq	r1, [lr], #-3484	; 0xfffff264
     bfc:	01c20000 	biceq	r0, r2, r0
     c00:	08001a30 	stmdaeq	r0, {r4, r5, r9, fp, ip}
     c04:	0000004c 	andeq	r0, r0, ip, asr #32
     c08:	5b2e9c01 	blpl	ba7c14 <_Min_Stack_Size+0xba7814>
     c0c:	02000003 	andeq	r0, r0, #3
     c10:	000601bd 			; <UNDEFINED> instruction: 0x000601bd
     c14:	3008001a 	andcc	r0, r8, sl, lsl r0
     c18:	01000000 	mrseq	r0, (UNDEF: 0)
     c1c:	000c409c 	muleq	ip, ip, r0
     c20:	736d2f00 	cmnvc	sp, #0, 30
     c24:	01bd0200 			; <UNDEFINED> instruction: 0x01bd0200
     c28:	0002821e 	andeq	r8, r2, lr, lsl r2
     c2c:	6c910200 	lfmvs	f0, 4, [r1], {0}
     c30:	00003403 	andeq	r3, r0, r3, lsl #8
     c34:	0e01be00 	cdpeq	14, 0, cr11, cr1, cr0, {0}
     c38:	0000026c 	andeq	r0, r0, ip, ror #4
     c3c:	00749102 	rsbseq	r9, r4, r2, lsl #2
     c40:	00075f20 	andeq	r5, r7, r0, lsr #30
     c44:	20019f00 	andcs	r9, r1, r0, lsl #30
     c48:	e0080019 	and	r0, r8, r9, lsl r0
     c4c:	01000000 	mrseq	r0, (UNDEF: 0)
     c50:	000cbb9c 	muleq	ip, ip, fp
     c54:	029d0f00 	addseq	r0, sp, #0, 30
     c58:	9f020000 	svcls	0x00020000
     c5c:	026c1801 	rsbeq	r1, ip, #65536	; 0x10000
     c60:	91030000 	mrsls	r0, (UNDEF: 3)
     c64:	b9037c84 	stmdblt	r3, {r2, r7, sl, fp, ip, sp, lr}
     c68:	a0000005 	andge	r0, r0, r5
     c6c:	02540e01 	subseq	r0, r4, #1, 28
     c70:	91020000 	mrsls	r0, (UNDEF: 2)
     c74:	00800376 	addeq	r0, r0, r6, ror r3
     c78:	01a10000 			; <UNDEFINED> instruction: 0x01a10000
     c7c:	0002540e 	andeq	r5, r2, lr, lsl #8
     c80:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     c84:	00038603 	andeq	r8, r3, r3, lsl #12
     c88:	0e01a200 	cdpeq	2, 0, cr10, cr1, cr0, {0}
     c8c:	00000cbb 			; <UNDEFINED> instruction: 0x00000cbb
     c90:	7c8c9103 	stfvcd	f1, [ip], {3}
     c94:	00022c03 	andeq	r2, r2, r3, lsl #24
     c98:	0e01a300 	cdpeq	3, 0, cr10, cr1, cr0, {0}
     c9c:	0000026c 	andeq	r0, r0, ip, ror #4
     ca0:	0d6c9102 	stfeqp	f1, [ip, #-8]!
     ca4:	0800194e 	stmdaeq	r0, {r1, r2, r3, r6, r8, fp, ip}
     ca8:	0000006e 	andeq	r0, r0, lr, rrx
     cac:	ac006917 			; <UNDEFINED> instruction: 0xac006917
     cb0:	026c1701 	rsbeq	r1, ip, #262144	; 0x40000
     cb4:	91020000 	mrsls	r0, (UNDEF: 2)
     cb8:	06000070 			; <UNDEFINED> instruction: 0x06000070
     cbc:	00000254 	andeq	r0, r0, r4, asr r2
     cc0:	00000ccb 	andeq	r0, r0, fp, asr #25
     cc4:	00023c07 	andeq	r3, r2, r7, lsl #24
     cc8:	2100ef00 	tstcs	r0, r0, lsl #30
     ccc:	00000acf 	andeq	r0, r0, pc, asr #21
     cd0:	0000018c 	andeq	r0, r0, ip, lsl #3
     cd4:	00c40000 	sbceq	r0, r4, r0
     cd8:	9c010000 	stcls	0, cr0, [r1], {-0}
     cdc:	00000d10 	andeq	r0, r0, r0, lsl sp
     ce0:	0005b903 	andeq	fp, r5, r3, lsl #18
     ce4:	0e018d00 	cdpeq	13, 0, cr8, cr1, cr0, {0}
     ce8:	00000254 	andeq	r0, r0, r4, asr r2
     cec:	03769102 	cmneq	r6, #-2147483648	; 0x80000000
     cf0:	00000080 	andeq	r0, r0, r0, lsl #1
     cf4:	540e018e 	strpl	r0, [lr], #-398	; 0xfffffe72
     cf8:	02000002 	andeq	r0, r0, #2
     cfc:	86037491 			; <UNDEFINED> instruction: 0x86037491
     d00:	8f000003 	svchi	0x00000003
     d04:	0d100e01 	ldceq	14, cr0, [r0, #-4]
     d08:	91040000 	mrsls	r0, (UNDEF: 4)
     d0c:	007fb4f4 	ldrshteq	fp, [pc], #-68
     d10:	00025406 	andeq	r5, r2, r6, lsl #8
     d14:	000d2100 	andeq	r2, sp, r0, lsl #2
     d18:	023c1900 	eorseq	r1, ip, #0, 18
     d1c:	12bf0000 	adcsne	r0, pc, #0
     d20:	041f2100 	ldreq	r2, [pc], #-256	; d28 <_Min_Stack_Size+0x928>
     d24:	01710000 	cmneq	r1, r0
     d28:	080016e8 	stmdaeq	r0, {r3, r5, r6, r7, r9, sl, ip}
     d2c:	00000238 	andeq	r0, r0, r8, lsr r2
     d30:	0de39c01 	stcleq	12, cr9, [r3, #4]!
     d34:	b9030000 	stmdblt	r3, {}	; <UNPREDICTABLE>
     d38:	72000009 	andvc	r0, r0, #9
     d3c:	0de30b01 			; <UNDEFINED> instruction: 0x0de30b01
     d40:	91020000 	mrsls	r0, (UNDEF: 2)
     d44:	0511035c 	ldreq	r0, [r1, #-860]	; 0xfffffca4
     d48:	01730000 	cmneq	r3, r0
     d4c:	000de30b 	andeq	lr, sp, fp, lsl #6
     d50:	58910200 	ldmpl	r1, {r9}
     d54:	00070203 	andeq	r0, r7, r3, lsl #4
     d58:	0b017400 	bleq	5dd60 <_Min_Stack_Size+0x5d960>
     d5c:	00000de3 	andeq	r0, r0, r3, ror #27
     d60:	03549102 	cmpeq	r4, #-2147483648	; 0x80000000
     d64:	0000021e 	andeq	r0, r0, lr, lsl r2
     d68:	e30b0175 	movw	r0, #45429	; 0xb175
     d6c:	0200000d 	andeq	r0, r0, #13
     d70:	56035091 			; <UNDEFINED> instruction: 0x56035091
     d74:	76000000 	strvc	r0, [r0], -r0
     d78:	0dea1101 	stfeqe	f1, [sl, #4]!
     d7c:	91020000 	mrsls	r0, (UNDEF: 2)
     d80:	06950344 	ldreq	r0, [r5], r4, asr #6
     d84:	01770000 	cmneq	r7, r0
     d88:	000dea11 	andeq	lr, sp, r1, lsl sl
     d8c:	40910200 	addsmi	r0, r1, r0, lsl #4
     d90:	00099603 	andeq	r9, r9, r3, lsl #12
     d94:	11017800 	tstne	r1, r0, lsl #16
     d98:	00000dea 	andeq	r0, r0, sl, ror #27
     d9c:	7fbc9103 	svcvc	0x00bc9103
     da0:	00034e03 	andeq	r4, r3, r3, lsl #28
     da4:	11017900 	tstne	r1, r0, lsl #18
     da8:	00000dea 	andeq	r0, r0, sl, ror #27
     dac:	7fb89103 	svcvc	0x00b89103
     db0:	00171409 	andseq	r1, r7, r9, lsl #8
     db4:	00007408 	andeq	r7, r0, r8, lsl #8
     db8:	000dcb00 	andeq	ip, sp, r0, lsl #22
     dbc:	00691700 	rsbeq	r1, r9, r0, lsl #14
     dc0:	9911017b 	ldmdbls	r1, {r0, r1, r3, r4, r5, r6, r8}
     dc4:	0200000a 	andeq	r0, r0, #10
     dc8:	0d004c91 	stceq	12, cr4, [r0, #-580]	; 0xfffffdbc
     dcc:	08001788 	stmdaeq	r0, {r3, r7, r8, r9, sl, ip}
     dd0:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     dd4:	7f006917 	svcvc	0x00006917
     dd8:	0a991101 	beq	fe6451e4 <_estack+0xde6351e4>
     ddc:	91020000 	mrsls	r0, (UNDEF: 2)
     de0:	0a000048 	beq	f08 <_Min_Stack_Size+0xb08>
     de4:	0f150404 	svceq	0x00150404
     de8:	e3140000 	tst	r4, #0
     dec:	2000000d 	andcs	r0, r0, sp
     df0:	000008cd 	andeq	r0, r0, sp, asr #17
     df4:	1464013d 	strbtne	r0, [r4], #-317	; 0xfffffec3
     df8:	02820800 	addeq	r0, r2, #0, 16
     dfc:	9c010000 	stcls	0, cr0, [r1], {-0}
     e00:	00000f34 	andeq	r0, r0, r4, lsr pc
     e04:	0003640f 	andeq	r6, r3, pc, lsl #8
     e08:	013d0200 	teqeq	sp, r0, lsl #4
     e0c:	000adc24 	andeq	sp, sl, r4, lsr #24
     e10:	d8910300 	ldmle	r1, {r8, r9}
     e14:	0a360f67 	beq	d84bb8 <_Min_Stack_Size+0xd847b8>
     e18:	3d020000 	stccc	0, cr0, [r2, #-0]
     e1c:	0adc3501 	beq	ff70e228 <_estack+0xdf6fe228>
     e20:	91030000 	mrsls	r0, (UNDEF: 3)
     e24:	840f67d0 	strhi	r6, [pc], #-2000	; e2c <_Min_Stack_Size+0xa2c>
     e28:	0200000b 	andeq	r0, r0, #11
     e2c:	dc46013d 	stflee	f0, [r6], {61}	; 0x3d
     e30:	0200000a 	andeq	r0, r0, #10
     e34:	680f0091 	stmdavs	pc, {r0, r4, r7}	; <UNPREDICTABLE>
     e38:	02000007 	andeq	r0, r0, #7
     e3c:	dc57013d 	ldflee	f0, [r7], {61}	; 0x3d
     e40:	0200000a 	andeq	r0, r0, #10
     e44:	c2030891 	andgt	r0, r3, #9502720	; 0x910000
     e48:	3f000008 	svccc	0x00000008
     e4c:	0f340e01 	svceq	0x00340e01
     e50:	91030000 	mrsls	r0, (UNDEF: 3)
     e54:	621777e0 	andsvs	r7, r7, #224, 14	; 0x3800000
     e58:	40006675 	andmi	r6, r0, r5, ror r6
     e5c:	0f450f01 	svceq	0x00450f01
     e60:	91030000 	mrsls	r0, (UNDEF: 3)
     e64:	c5037fb8 	strgt	r7, [r3, #-4024]	; 0xfffff048
     e68:	41000000 	mrsmi	r0, (UNDEF: 0)
     e6c:	0f4a0e01 	svceq	0x004a0e01
     e70:	91030000 	mrsls	r0, (UNDEF: 3)
     e74:	010367e0 	smlatteq	r3, r0, r7, r6
     e78:	4a000004 	bmi	e90 <_Min_Stack_Size+0xa90>
     e7c:	0adc0d01 	beq	ff704288 <_estack+0xdf6f4288>
     e80:	91030000 	mrsls	r0, (UNDEF: 3)
     e84:	67037fb0 			; <UNDEFINED> instruction: 0x67037fb0
     e88:	4a000004 	bmi	ea0 <_Min_Stack_Size+0xaa0>
     e8c:	0adc1701 	beq	ff706a98 <_estack+0xdf6f6a98>
     e90:	91030000 	mrsls	r0, (UNDEF: 3)
     e94:	25037fa8 	strcs	r7, [r3, #-4008]	; 0xfffff058
     e98:	4a000007 	bmi	ebc <_Min_Stack_Size+0xabc>
     e9c:	0adc2101 	beq	ff7092a8 <_estack+0xdf6f92a8>
     ea0:	91020000 	mrsls	r0, (UNDEF: 2)
     ea4:	041a0348 	ldreq	r0, [sl], #-840	; 0xfffffcb8
     ea8:	014a0000 	mrseq	r0, (UNDEF: 74)
     eac:	000adc27 	andeq	sp, sl, r7, lsr #24
     eb0:	40910200 	addsmi	r0, r1, r0, lsl #4
     eb4:	0002a803 	andeq	sl, r2, r3, lsl #16
     eb8:	0d014b00 	vstreq	d4, [r1, #-0]
     ebc:	00000243 	andeq	r0, r0, r3, asr #4
     ec0:	7fbf9103 	svcvc	0x00bf9103
     ec4:	0005b903 	andeq	fp, r5, r3, lsl #18
     ec8:	15014b00 	strne	r4, [r1, #-2816]	; 0xfffff500
     ecc:	00000243 	andeq	r0, r0, r3, asr #4
     ed0:	7fbe9103 	svcvc	0x00be9103
     ed4:	00148a09 	andseq	r8, r4, r9, lsl #20
     ed8:	00008a08 	andeq	r8, r0, r8, lsl #20
     edc:	000eef00 	andeq	lr, lr, r0, lsl #30
     ee0:	00691700 	rsbeq	r1, r9, r0, lsl #14
     ee4:	350e0142 	strcc	r0, [lr, #-322]	; 0xfffffebe
     ee8:	02000002 	andeq	r0, r0, #2
     eec:	0d005491 	cfstrseq	mvf5, [r0, #-580]	; 0xfffffdbc
     ef0:	08001596 	stmdaeq	r0, {r1, r2, r4, r7, r8, sl, ip}
     ef4:	0000012e 	andeq	r0, r0, lr, lsr #2
     ef8:	000b6003 	andeq	r6, fp, r3
     efc:	13015200 	movwne	r5, #4608	; 0x1200
     f00:	00000f45 	andeq	r0, r0, r5, asr #30
     f04:	7fa49103 	svcvc	0x00a49103
     f08:	00006303 	andeq	r6, r0, r3, lsl #6
     f0c:	13015300 	movwne	r5, #4864	; 0x1300
     f10:	00000f45 	andeq	r0, r0, r5, asr #30
     f14:	7fa09103 	svcvc	0x00a09103
     f18:	0015fe0d 	andseq	pc, r5, sp, lsl #28
     f1c:	00007008 	andeq	r7, r0, r8
     f20:	06d80300 	ldrbeq	r0, [r8], r0, lsl #6
     f24:	015a0000 	cmpeq	sl, r0
     f28:	00025416 	andeq	r5, r2, r6, lsl r4
     f2c:	bc910300 	ldclt	3, cr0, [r1], {0}
     f30:	0000007f 	andeq	r0, r0, pc, ror r0
     f34:	00025406 	andeq	r5, r2, r6, lsl #8
     f38:	000f4500 	andeq	r4, pc, r0, lsl #10
     f3c:	023c1900 	eorseq	r1, ip, #0, 18
     f40:	01df0000 	bicseq	r0, pc, r0
     f44:	02541a00 	subseq	r1, r4, #0, 20
     f48:	54060000 	strpl	r0, [r6], #-0
     f4c:	5b000002 	blpl	f5c <_Min_Stack_Size+0xb5c>
     f50:	1900000f 	stmdbne	r0, {r0, r1, r2, r3}
     f54:	0000023c 	andeq	r0, r0, ip, lsr r2
     f58:	300003ff 	strdcc	r0, [r0], -pc	; <UNPREDICTABLE>
     f5c:	0000073a 	andeq	r0, r0, sl, lsr r7
     f60:	0a012a02 	beq	4b770 <_Min_Stack_Size+0x4b370>
     f64:	00000254 	andeq	r0, r0, r4, asr r2
     f68:	08001310 	stmdaeq	r0, {r4, r8, r9, ip}
     f6c:	00000154 	andeq	r0, r0, r4, asr r1
     f70:	0fe59c01 	svceq	0x00e59c01
     f74:	c60f0000 	strgt	r0, [pc], -r0
     f78:	02000006 	andeq	r0, r0, #6
     f7c:	dc2a012a 	stfles	f0, [sl], #-168	; 0xffffff58
     f80:	0300000a 	movweq	r0, #10
     f84:	0f7fb091 	svceq	0x007fb091
     f88:	000000a0 	andeq	r0, r0, r0, lsr #1
     f8c:	3c012a02 			; <UNDEFINED> instruction: 0x3c012a02
     f90:	00000adc 	ldrdeq	r0, [r0], -ip
     f94:	7fa89103 	svcvc	0x00a89103
     f98:	0008a403 	andeq	sl, r8, r3, lsl #8
     f9c:	0d012b00 	vstreq	d2, [r1, #-0]
     fa0:	00000adc 	ldrdeq	r0, [r0], -ip
     fa4:	03409102 	movteq	r9, #258	; 0x102
     fa8:	0000044f 	andeq	r0, r0, pc, asr #8
     fac:	dc14012b 	ldfles	f0, [r4], {43}	; 0x2b
     fb0:	0300000a 	movweq	r0, #10
     fb4:	037fb891 	cmneq	pc, #9502720	; 0x910000
     fb8:	00000725 	andeq	r0, r0, r5, lsr #14
     fbc:	dc1b012b 	ldfles	f0, [fp], {43}	; 0x2b
     fc0:	0200000a 	andeq	r0, r0, #10
     fc4:	1a035891 	bne	d7210 <_Min_Stack_Size+0xd6e10>
     fc8:	2b000004 	blcs	fe0 <_Min_Stack_Size+0xbe0>
     fcc:	0adc2101 	beq	ff7093d8 <_estack+0xdf6f93d8>
     fd0:	91020000 	mrsls	r0, (UNDEF: 2)
     fd4:	00b60350 	adcseq	r0, r6, r0, asr r3
     fd8:	012c0000 			; <UNDEFINED> instruction: 0x012c0000
     fdc:	0002540e 	andeq	r5, r2, lr, lsl #8
     fe0:	4e910200 	cdpmi	2, 9, cr0, cr1, cr0, {0}
     fe4:	088a1800 	stmeq	sl, {fp, ip}
     fe8:	dcf60000 	ldclle	0, cr0, [r6]
     fec:	34080010 	strcc	r0, [r8], #-16
     ff0:	01000002 	tsteq	r0, r2
     ff4:	0011259c 	mulseq	r1, ip, r5
     ff8:	03640c00 	cmneq	r4, #0, 24
     ffc:	2df60000 	ldclcs	0, cr0, [r6]
    1000:	00000ae8 	andeq	r0, r0, r8, ror #21
    1004:	77849103 	strvc	r9, [r4, r3, lsl #2]
    1008:	000a360c 	andeq	r3, sl, ip, lsl #12
    100c:	e843f600 	stmda	r3, {r9, sl, ip, sp, lr, pc}^
    1010:	0300000a 	movweq	r0, #10
    1014:	0c778091 	ldcleq	0, cr8, [r7], #-580	; 0xfffffdbc
    1018:	00000b84 	andeq	r0, r0, r4, lsl #23
    101c:	0ae859f6 	beq	ffa177fc <_estack+0xdfa077fc>
    1020:	91030000 	mrsls	r0, (UNDEF: 3)
    1024:	680c76fc 	stmdavs	ip, {r2, r3, r4, r5, r6, r7, r9, sl, ip, sp, lr}
    1028:	f6000007 			; <UNDEFINED> instruction: 0xf6000007
    102c:	000ae86f 	andeq	lr, sl, pc, ror #16
    1030:	f8910300 			; <UNDEFINED> instruction: 0xf8910300
    1034:	00b30c76 	adcseq	r0, r3, r6, ror ip
    1038:	81f60000 	mvnshi	r0, r0
    103c:	00000254 	andeq	r0, r0, r4, asr r2
    1040:	04009102 	streq	r9, [r0], #-258	; 0xfffffefe
    1044:	000008c2 	andeq	r0, r0, r2, asr #17
    1048:	0f340ef8 	svceq	0x00340ef8
    104c:	91030000 	mrsls	r0, (UNDEF: 3)
    1050:	620e788c 	andvs	r7, lr, #140, 16	; 0x8c0000
    1054:	f9006675 			; <UNDEFINED> instruction: 0xf9006675
    1058:	000f450f 	andeq	r4, pc, pc, lsl #10
    105c:	5c910200 	lfmpl	f0, 4, [r1], {0}
    1060:	0000c504 	andeq	ip, r0, r4, lsl #10
    1064:	250efa00 	strcs	pc, [lr, #-2560]	; 0xfffff600
    1068:	03000011 	movweq	r0, #17
    106c:	03778c91 	cmneq	r7, #37120	; 0x9100
    1070:	00000401 	andeq	r0, r0, r1, lsl #8
    1074:	e8120103 	ldmda	r2, {r0, r1, r8}
    1078:	0200000a 	andeq	r0, r0, #10
    107c:	67035891 			; <UNDEFINED> instruction: 0x67035891
    1080:	03000004 	movweq	r0, #4
    1084:	0ae81c01 	beq	ffa08090 <_estack+0xdf9f8090>
    1088:	91020000 	mrsls	r0, (UNDEF: 2)
    108c:	07250354 			; <UNDEFINED> instruction: 0x07250354
    1090:	01030000 	mrseq	r0, (UNDEF: 3)
    1094:	000ae826 	andeq	lr, sl, r6, lsr #16
    1098:	68910200 	ldmvs	r1, {r9}
    109c:	00041a03 	andeq	r1, r4, r3, lsl #20
    10a0:	2c010300 	stccs	3, cr0, [r1], {-0}
    10a4:	00000ae8 	andeq	r0, r0, r8, ror #21
    10a8:	03649102 	cmneq	r4, #-2147483648	; 0x80000000
    10ac:	000002a8 	andeq	r0, r0, r8, lsr #5
    10b0:	430d0104 	movwmi	r0, #53508	; 0xd104
    10b4:	02000002 	andeq	r0, r0, #2
    10b8:	b9036391 	stmdblt	r3, {r0, r4, r7, r8, r9, sp, lr}
    10bc:	04000005 	streq	r0, [r0], #-5
    10c0:	02431501 	subeq	r1, r3, #4194304	; 0x400000
    10c4:	91020000 	mrsls	r0, (UNDEF: 2)
    10c8:	11180962 	tstne	r8, r2, ror #18
    10cc:	00620800 	rsbeq	r0, r2, r0, lsl #16
    10d0:	10e30000 	rscne	r0, r3, r0
    10d4:	690e0000 	stmdbvs	lr, {}	; <UNPREDICTABLE>
    10d8:	9911fb00 	ldmdbls	r1, {r8, r9, fp, ip, sp, lr, pc}
    10dc:	0200000a 	andeq	r0, r0, #10
    10e0:	0d006c91 	stceq	12, cr6, [r0, #-580]	; 0xfffffdbc
    10e4:	080011e0 	stmdaeq	r0, {r5, r6, r7, r8, ip}
    10e8:	0000010a 	andeq	r0, r0, sl, lsl #2
    10ec:	000b6003 	andeq	r6, fp, r3
    10f0:	13010b00 	movwne	r0, #6912	; 0x1b00
    10f4:	00000f45 	andeq	r0, r0, r5, asr #30
    10f8:	03509102 	cmpeq	r0, #-2147483648	; 0x80000000
    10fc:	00000063 	andeq	r0, r0, r3, rrx
    1100:	4513010c 	ldrmi	r0, [r3, #-268]	; 0xfffffef4
    1104:	0200000f 	andeq	r0, r0, #15
    1108:	460d4c91 			; <UNDEFINED> instruction: 0x460d4c91
    110c:	60080012 	andvs	r0, r8, r2, lsl r0
    1110:	03000000 	movweq	r0, #0
    1114:	000006d8 	ldrdeq	r0, [r0], -r8
    1118:	54160113 	ldrpl	r0, [r6], #-275	; 0xfffffeed
    111c:	02000002 	andeq	r0, r0, #2
    1120:	00006091 	muleq	r0, r1, r0
    1124:	02540600 	subseq	r0, r4, #0, 12
    1128:	11350000 	teqne	r5, r0
    112c:	3c070000 	stccc	0, cr0, [r7], {-0}
    1130:	3f000002 	svccc	0x00000002
    1134:	0b233100 	bleq	8cd53c <_Min_Stack_Size+0x8cd13c>
    1138:	e3020000 	movw	r0, #8192	; 0x2000
    113c:	0002540a 	andeq	r5, r2, sl, lsl #8
    1140:	00106400 	andseq	r6, r0, r0, lsl #8
    1144:	00007808 	andeq	r7, r0, r8, lsl #16
    1148:	c09c0100 	addsgt	r0, ip, r0, lsl #2
    114c:	0c000011 	stceq	0, cr0, [r0], {17}
    1150:	000006c6 	andeq	r0, r0, r6, asr #13
    1154:	0ae833e3 	beq	ffa0e0e8 <_estack+0xdf9fe0e8>
    1158:	91020000 	mrsls	r0, (UNDEF: 2)
    115c:	00a00c5c 	adceq	r0, r0, ip, asr ip
    1160:	4ae30000 	bmi	ff8c1168 <_estack+0xdf8b1168>
    1164:	00000ae8 	andeq	r0, r0, r8, ror #21
    1168:	0c589102 	ldfeqp	f1, [r8], {2}
    116c:	000000b3 	strheq	r0, [r0], -r3
    1170:	02545de3 	subseq	r5, r4, #14528	; 0x38c0
    1174:	91020000 	mrsls	r0, (UNDEF: 2)
    1178:	08a40456 	stmiaeq	r4!, {r1, r2, r4, r6, sl}
    117c:	12e40000 	rscne	r0, r4, #0
    1180:	00000ae8 	andeq	r0, r0, r8, ror #21
    1184:	04689102 	strbteq	r9, [r8], #-258	; 0xfffffefe
    1188:	0000044f 	andeq	r0, r0, pc, asr #8
    118c:	0ae819e4 	beq	ffa07924 <_estack+0xdf9f7924>
    1190:	91020000 	mrsls	r0, (UNDEF: 2)
    1194:	07250464 	streq	r0, [r5, -r4, ror #8]!
    1198:	20e40000 	rsccs	r0, r4, r0
    119c:	00000ae8 	andeq	r0, r0, r8, ror #21
    11a0:	04749102 	ldrbteq	r9, [r4], #-258	; 0xfffffefe
    11a4:	0000041a 	andeq	r0, r0, sl, lsl r4
    11a8:	0ae826e4 	beq	ffa0ad40 <_estack+0xdf9fad40>
    11ac:	91020000 	mrsls	r0, (UNDEF: 2)
    11b0:	00b60470 	adcseq	r0, r6, r0, ror r4
    11b4:	0ee50000 	cdpeq	0, 14, cr0, cr5, cr0, {0}
    11b8:	00000254 	andeq	r0, r0, r4, asr r2
    11bc:	006e9102 	rsbeq	r9, lr, r2, lsl #2
    11c0:	00077518 	andeq	r7, r7, r8, lsl r5
    11c4:	0ef8c000 	cdpeq	0, 15, cr12, cr8, cr0, {0}
    11c8:	016c0800 	cmneq	ip, r0, lsl #16
    11cc:	9c010000 	stcls	0, cr0, [r1], {-0}
    11d0:	00001297 	muleq	r0, r7, r2
    11d4:	00084404 	andeq	r4, r8, r4, lsl #8
    11d8:	540ec100 	strpl	ip, [lr], #-256	; 0xffffff00
    11dc:	02000002 	andeq	r0, r0, #2
    11e0:	f4047691 	vst1.32	{d7-d9}, [r4 :64], r1
    11e4:	c2000009 	andgt	r0, r0, #9
    11e8:	0002540e 	andeq	r5, r2, lr, lsl #8
    11ec:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    11f0:	0009f904 	andeq	pc, r9, r4, lsl #18
    11f4:	540ec300 	strpl	ip, [lr], #-768	; 0xfffffd00
    11f8:	02000002 	andeq	r0, r0, #2
    11fc:	0a097291 	beq	25dc48 <_Min_Stack_Size+0x25d848>
    1200:	2408000f 	strcs	r0, [r8], #-15
    1204:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    1208:	0e000012 	mcreq	0, 0, r0, cr0, cr2, {0}
    120c:	11c40069 	bicne	r0, r4, r9, rrx
    1210:	00000a99 	muleq	r0, r9, sl
    1214:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    1218:	000f2e09 	andeq	r2, pc, r9, lsl #28
    121c:	00002408 	andeq	r2, r0, r8, lsl #8
    1220:	00123200 	andseq	r3, r2, r0, lsl #4
    1224:	00690e00 	rsbeq	r0, r9, r0, lsl #28
    1228:	0a9911c8 	beq	fe645950 <_estack+0xde635950>
    122c:	91020000 	mrsls	r0, (UNDEF: 2)
    1230:	52090068 	andpl	r0, r9, #104	; 0x68
    1234:	3608000f 	strcc	r0, [r8], -pc
    1238:	4c000000 	stcmi	0, cr0, [r0], {-0}
    123c:	0e000012 	mcreq	0, 0, r0, cr0, cr2, {0}
    1240:	11cc0069 	bicne	r0, ip, r9, rrx
    1244:	00000a99 	muleq	r0, r9, sl
    1248:	00649102 	rsbeq	r9, r4, r2, lsl #2
    124c:	000f8809 	andeq	r8, pc, r9, lsl #16
    1250:	00004a08 	andeq	r4, r0, r8, lsl #20
    1254:	00126600 	andseq	r6, r2, r0, lsl #12
    1258:	00690e00 	rsbeq	r0, r9, r0, lsl #28
    125c:	0a9911d1 	beq	fe6459a8 <_estack+0xde6359a8>
    1260:	91020000 	mrsls	r0, (UNDEF: 2)
    1264:	d2090060 	andle	r0, r9, #96	; 0x60
    1268:	2a08000f 	bcs	2012ac <_Min_Stack_Size+0x200eac>
    126c:	80000000 	andhi	r0, r0, r0
    1270:	0e000012 	mcreq	0, 0, r0, cr0, cr2, {0}
    1274:	11d60069 	bicsne	r0, r6, r9, rrx
    1278:	00000a99 	muleq	r0, r9, sl
    127c:	005c9102 	subseq	r9, ip, r2, lsl #2
    1280:	000ffc0d 	andeq	pc, pc, sp, lsl #24
    1284:	00005608 	andeq	r5, r0, r8, lsl #12
    1288:	00690e00 	rsbeq	r0, r9, r0, lsl #28
    128c:	0a9911db 	beq	fe645a00 <_estack+0xde635a00>
    1290:	91020000 	mrsls	r0, (UNDEF: 2)
    1294:	18000058 	stmdane	r0, {r3, r4, r6}
    1298:	000004c5 	andeq	r0, r0, r5, asr #9
    129c:	000c4696 	muleq	ip, r6, r6
    12a0:	0002b208 	andeq	fp, r2, r8, lsl #4
    12a4:	929c0100 	addsls	r0, ip, #0, 2
    12a8:	0c000013 	stceq	0, cr0, [r0], {19}
    12ac:	00000541 	andeq	r0, r0, r1, asr #10
    12b0:	02542596 	subseq	r2, r4, #629145600	; 0x25800000
    12b4:	91030000 	mrsls	r0, (UNDEF: 3)
    12b8:	6c0c7896 	stcvs	8, cr7, [ip], {150}	; 0x96
    12bc:	9600000b 	strls	r0, [r0], -fp
    12c0:	0002543e 	andeq	r5, r2, lr, lsr r4
    12c4:	94910300 	ldrls	r0, [r1], #768	; 0x300
    12c8:	0b730c78 	bleq	1cc44b0 <_Min_Stack_Size+0x1cc40b0>
    12cc:	4f960000 	svcmi	0x00960000
    12d0:	00000254 	andeq	r0, r0, r4, asr r2
    12d4:	78929103 	ldmvc	r2, {r0, r1, r8, ip, pc}
    12d8:	00063004 	andeq	r3, r6, r4
    12dc:	920a9800 	andls	r9, sl, #0, 16
    12e0:	02000013 	andeq	r0, r0, #19
    12e4:	fd046f91 	stc2	15, cr6, [r4, #-580]	; 0xfffffdbc
    12e8:	99000001 	stmdbls	r0, {r0}
    12ec:	0013920a 	andseq	r9, r3, sl, lsl #4
    12f0:	6e910200 	cdpvs	2, 9, cr0, cr1, cr0, {0}
    12f4:	0000da04 	andeq	sp, r0, r4, lsl #20
    12f8:	920a9a00 	andls	r9, sl, #0, 20
    12fc:	02000013 	andeq	r0, r0, #19
    1300:	c2046591 	andgt	r6, r4, #608174080	; 0x24400000
    1304:	9d000008 	stcls	0, cr0, [r0, #-32]	; 0xffffffe0
    1308:	000f340e 	andeq	r3, pc, lr, lsl #8
    130c:	98910300 	ldmls	r1, {r8, r9}
    1310:	75620e78 	strbvc	r0, [r2, #-3704]!	; 0xfffff188
    1314:	0f9e0066 	svceq	0x009e0066
    1318:	00000f45 	andeq	r0, r0, r5, asr #30
    131c:	04609102 	strbteq	r9, [r0], #-258	; 0xfffffefe
    1320:	00000045 	andeq	r0, r0, r5, asr #32
    1324:	02540e9f 	subseq	r0, r4, #2544	; 0x9f0
    1328:	91020000 	mrsls	r0, (UNDEF: 2)
    132c:	0802046c 	stmdaeq	r2, {r2, r3, r5, r6, sl}
    1330:	0ea00000 	cdpeq	0, 10, cr0, cr0, cr0, {0}
    1334:	00000254 	andeq	r0, r0, r4, asr r2
    1338:	0d6a9102 	stfeqp	f1, [sl, #-8]!
    133c:	08000d6e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r8, sl, fp}
    1340:	0000017e 	andeq	r0, r0, lr, ror r1
    1344:	0005b904 	andeq	fp, r5, r4, lsl #18
    1348:	5413a200 	ldrpl	sl, [r3], #-512	; 0xfffffe00
    134c:	02000002 	andeq	r0, r0, #2
    1350:	760d6891 			; <UNDEFINED> instruction: 0x760d6891
    1354:	6208000d 	andvs	r0, r8, #13
    1358:	04000001 	streq	r0, [r0], #-1
    135c:	00000b60 	andeq	r0, r0, r0, ror #22
    1360:	0f4513a3 	svceq	0x004513a3
    1364:	91020000 	mrsls	r0, (UNDEF: 2)
    1368:	0063045c 	rsbeq	r0, r3, ip, asr r4
    136c:	13a40000 			; <UNDEFINED> instruction: 0x13a40000
    1370:	00000f45 	andeq	r0, r0, r5, asr #30
    1374:	0d589102 	ldfeqp	f1, [r8, #-8]
    1378:	08000de4 	stmdaeq	r0, {r2, r5, r6, r7, r8, sl, fp}
    137c:	000000a2 	andeq	r0, r0, r2, lsr #1
    1380:	0002a804 	andeq	sl, r2, r4, lsl #16
    1384:	541bab00 	ldrpl	sl, [fp], #-2816	; 0xfffff500
    1388:	02000002 	andeq	r0, r0, #2
    138c:	00006691 	muleq	r0, r1, r6
    1390:	010a0000 	mrseq	r0, (UNDEF: 10)
    1394:	00038002 	andeq	r8, r3, r2
    1398:	00ff1800 	rscseq	r1, pc, r0, lsl #16
    139c:	2c7d0000 	ldclcs	0, cr0, [sp], #-0
    13a0:	1a08000b 	bne	2013d4 <_Min_Stack_Size+0x200fd4>
    13a4:	01000001 	tsteq	r0, r1
    13a8:	00146e9c 	mulseq	r4, ip, lr
    13ac:	0b320900 	bleq	c837b4 <_Min_Stack_Size+0xc833b4>
    13b0:	00260800 	eoreq	r0, r6, r0, lsl #16
    13b4:	13c90000 	bicne	r0, r9, #0
    13b8:	d8040000 	stmdale	r4, {}	; <UNPREDICTABLE>
    13bc:	7e000006 	cdpvc	0, 0, cr0, cr0, cr6, {0}
    13c0:	00024312 	andeq	r4, r2, r2, lsl r3
    13c4:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    13c8:	0b580900 	bleq	16037d0 <_Min_Stack_Size+0x16033d0>
    13cc:	00260800 	eoreq	r0, r6, r0, lsl #16
    13d0:	13e50000 	mvnne	r0, #0
    13d4:	d8040000 	stmdale	r4, {}	; <UNPREDICTABLE>
    13d8:	81000006 	tsthi	r0, r6
    13dc:	00024312 	andeq	r4, r2, r2, lsl r3
    13e0:	76910200 	ldrvc	r0, [r1], r0, lsl #4
    13e4:	0b7e0900 	bleq	1f837ec <_Min_Stack_Size+0x1f833ec>
    13e8:	00260800 	eoreq	r0, r6, r0, lsl #16
    13ec:	14010000 	strne	r0, [r1], #-0
    13f0:	d8040000 	stmdale	r4, {}	; <UNPREDICTABLE>
    13f4:	84000006 	strhi	r0, [r0], #-6
    13f8:	00024312 	andeq	r4, r2, r2, lsl r3
    13fc:	75910200 	ldrvc	r0, [r1, #512]	; 0x200
    1400:	0ba40900 	bleq	fe903808 <_estack+0xde8f3808>
    1404:	00260800 	eoreq	r0, r6, r0, lsl #16
    1408:	141d0000 	ldrne	r0, [sp], #-0
    140c:	d8040000 	stmdale	r4, {}	; <UNPREDICTABLE>
    1410:	87000006 	strhi	r0, [r0, -r6]
    1414:	00024312 	andeq	r4, r2, r2, lsl r3
    1418:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    141c:	0bca0900 	bleq	ff283824 <_estack+0xdf273824>
    1420:	00260800 	eoreq	r0, r6, r0, lsl #16
    1424:	14390000 	ldrtne	r0, [r9], #-0
    1428:	d8040000 	stmdale	r4, {}	; <UNPREDICTABLE>
    142c:	8a000006 	bhi	144c <_Min_Stack_Size+0x104c>
    1430:	00024312 	andeq	r4, r2, r2, lsl r3
    1434:	73910200 	orrsvc	r0, r1, #0, 4
    1438:	0bf00900 	bleq	ffc03840 <_estack+0xdfbf3840>
    143c:	00260800 	eoreq	r0, r6, r0, lsl #16
    1440:	14550000 	ldrbne	r0, [r5], #-0
    1444:	d8040000 	stmdale	r4, {}	; <UNPREDICTABLE>
    1448:	8d000006 	stchi	0, cr0, [r0, #-24]	; 0xffffffe8
    144c:	00024312 	andeq	r4, r2, r2, lsl r3
    1450:	72910200 	addsvc	r0, r1, #0, 4
    1454:	0c160d00 	ldceq	13, cr0, [r6], {-0}
    1458:	00260800 	eoreq	r0, r6, r0, lsl #16
    145c:	d8040000 	stmdale	r4, {}	; <UNPREDICTABLE>
    1460:	90000006 	andls	r0, r0, r6
    1464:	00024312 	andeq	r4, r2, r2, lsl r3
    1468:	71910200 	orrsvc	r0, r1, r0, lsl #4
    146c:	c7220000 	strgt	r0, [r2, -r0]!
    1470:	44000003 	strmi	r0, [r0], #-3
    1474:	000a7409 	andeq	r7, sl, r9, lsl #8
    1478:	0000b808 	andeq	fp, r0, r8, lsl #16
    147c:	189c0100 	ldmne	ip, {r8}
    1480:	00000a27 	andeq	r0, r0, r7, lsr #20
    1484:	00000036 	andeq	r0, r0, r6, lsr r0
    1488:	00004c00 	andeq	r4, r0, r0, lsl #24
    148c:	c19c0100 	orrsgt	r0, ip, r0, lsl #2
    1490:	0c000014 	stceq	0, cr0, [r0], {20}
    1494:	0000092a 	andeq	r0, r0, sl, lsr #18
    1498:	02351936 	eorseq	r1, r5, #884736	; 0xd8000
    149c:	91020000 	mrsls	r0, (UNDEF: 2)
    14a0:	75620e6c 	strbvc	r0, [r2, #-3692]!	; 0xfffff194
    14a4:	11370066 	teqne	r7, r6, rrx
    14a8:	000014c1 	andeq	r1, r0, r1, asr #9
    14ac:	00000305 	andeq	r0, r0, r5, lsl #6
    14b0:	6d040000 	stcvs	0, cr0, [r4, #-0]
    14b4:	39000005 	stmdbcc	r0, {r0, r2}
    14b8:	000aae0b 	andeq	sl, sl, fp, lsl #28
    14bc:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    14c0:	0ab30600 	beq	fecc2cc8 <_estack+0xdecb2cc8>
    14c4:	14d10000 	ldrbne	r0, [r1], #0
    14c8:	3c070000 	stccc	0, cr0, [r7], {-0}
    14cc:	0b000002 	bleq	14dc <_Min_Stack_Size+0x10dc>
    14d0:	0ada3200 	beq	ff68dcd8 <_estack+0xdf67dcd8>
    14d4:	31020000 	mrscc	r0, (UNDEF: 2)
    14d8:	00000006 	andeq	r0, r0, r6
    14dc:	00001800 	andeq	r1, r0, r0, lsl #16
    14e0:	339c0100 	orrscc	r0, ip, #0, 2
    14e4:	0000040a 	andeq	r0, r0, sl, lsl #8
    14e8:	00062302 	andeq	r2, r6, r2, lsl #6
    14ec:	5c000000 	stcpl	0, cr0, [r0], {-0}
    14f0:	01000000 	mrseq	r0, (UNDEF: 0)
    14f4:	0015199c 	mulseq	r5, ip, r9
    14f8:	75620e00 	strbvc	r0, [r2, #-3584]!	; 0xfffff200
    14fc:	11240066 			; <UNDEFINED> instruction: 0x11240066
    1500:	000014c1 	andeq	r1, r0, r1, asr #9
    1504:	00000305 	andeq	r0, r0, r5, lsl #6
    1508:	6d040000 	stcvs	0, cr0, [r4, #-0]
    150c:	26000005 	strcs	r0, [r0], -r5
    1510:	000aae0b 	andeq	sl, sl, fp, lsl #28
    1514:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1518:	05502200 	ldrbeq	r2, [r0, #-512]	; 0xfffffe00
    151c:	061b0000 	ldreq	r0, [fp], -r0
    1520:	08000a3c 	stmdaeq	r0, {r2, r3, r4, r5, r9, fp}
    1524:	00000038 	andeq	r0, r0, r8, lsr r0
    1528:	00349c01 	eorseq	r9, r4, r1, lsl #24
    152c:	01000009 	tsteq	r0, r9
    1530:	6c1a07e6 	ldcvs	7, cr0, [sl], {230}	; 0xe6
    1534:	f8000002 			; <UNDEFINED> instruction: 0xf8000002
    1538:	44080009 	strmi	r0, [r8], #-9
    153c:	01000000 	mrseq	r0, (UNDEF: 0)
    1540:	0015569c 	mulseq	r5, ip, r6
    1544:	06500f00 	ldrbeq	r0, [r0], -r0, lsl #30
    1548:	e6010000 	str	r0, [r1], -r0
    154c:	026c3207 	rsbeq	r3, ip, #1879048192	; 0x70000000
    1550:	91020000 	mrsls	r0, (UNDEF: 2)
    1554:	29350074 	ldmdbcs	r5!, {r2, r4, r5, r6}
    1558:	01000003 	tsteq	r0, r3
    155c:	a4160718 	ldrge	r0, [r6], #-1816	; 0xfffff8e8
    1560:	54080009 	strpl	r0, [r8], #-9
    1564:	01000000 	mrseq	r0, (UNDEF: 0)
    1568:	0a5e0f9c 	beq	17853e0 <_Min_Stack_Size+0x1784fe0>
    156c:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
    1570:	01bc3307 			; <UNDEFINED> instruction: 0x01bc3307
    1574:	91020000 	mrsls	r0, (UNDEF: 2)
    1578:	09eb0f77 	stmibeq	fp!, {r0, r1, r2, r4, r5, r6, r8, r9, sl, fp}^
    157c:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
    1580:	026c4207 	rsbeq	r4, ip, #1879048192	; 0x70000000
    1584:	91020000 	mrsls	r0, (UNDEF: 2)
    1588:	30000070 	andcc	r0, r0, r0, ror r0
    158c:	05000007 	streq	r0, [r0, #-7]
    1590:	9f040100 	svcls	0x00040100
    1594:	18000003 	stmdane	r0, {r0, r1}
    1598:	00000119 	andeq	r0, r0, r9, lsl r1
    159c:	000c8e1d 	andeq	r8, ip, sp, lsl lr
    15a0:	000afa00 	andeq	pc, sl, r0, lsl #20
    15a4:	0000a900 	andeq	sl, r0, r0, lsl #18
    15a8:	00000000 	andeq	r0, r0, r0
    15ac:	000d2200 	andeq	r2, sp, r0, lsl #4
    15b0:	05041900 	streq	r1, [r4, #-2304]	; 0xfffff700
    15b4:	00746e69 	rsbseq	r6, r4, r9, ror #28
    15b8:	000aa805 	andeq	sl, sl, r5, lsl #16
    15bc:	17d10200 	ldrbne	r0, [r1, r0, lsl #4]
    15c0:	00000039 	andeq	r0, r0, r9, lsr r0
    15c4:	62070402 	andvs	r0, r7, #33554432	; 0x2000000
    15c8:	02000008 	andeq	r0, r0, #8
    15cc:	06810508 	streq	r0, [r1], r8, lsl #10
    15d0:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    15d4:	0007d504 	andeq	sp, r7, r4, lsl #10
    15d8:	06010200 	streq	r0, [r1], -r0, lsl #4
    15dc:	000002e3 	andeq	r0, r0, r3, ror #5
    15e0:	00010f05 	andeq	r0, r1, r5, lsl #30
    15e4:	182b0300 	stmdane	fp!, {r8, r9}
    15e8:	00000061 	andeq	r0, r0, r1, rrx
    15ec:	e1080102 	tst	r8, r2, lsl #2
    15f0:	02000002 	andeq	r0, r0, #2
    15f4:	09d80502 	ldmibeq	r8, {r1, r8, sl}^
    15f8:	ee050000 	cdp	0, 0, cr0, cr5, cr0, {0}
    15fc:	03000003 	movweq	r0, #3
    1600:	007b1939 	rsbseq	r1, fp, r9, lsr r9
    1604:	02020000 	andeq	r0, r2, #0
    1608:	000abc07 	andeq	fp, sl, r7, lsl #24
    160c:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    1610:	00000686 	andeq	r0, r0, r6, lsl #13
    1614:	00067605 	andeq	r7, r6, r5, lsl #12
    1618:	194f0300 	stmdbne	pc, {r8, r9}^	; <UNPREDICTABLE>
    161c:	00000095 	muleq	r0, r5, r0
    1620:	5d070402 	cfstrspl	mvf0, [r7, #-8]
    1624:	02000008 	andeq	r0, r0, #8
    1628:	08580708 	ldmdaeq	r8, {r3, r8, r9, sl}^
    162c:	11050000 	mrsne	r0, (UNDEF: 5)
    1630:	04000001 	streq	r0, [r0], #-1
    1634:	00551318 	subseq	r1, r5, r8, lsl r3
    1638:	a30b0000 	movwge	r0, #45056	; 0xb000
    163c:	05000000 	streq	r0, [r0, #-0]
    1640:	000003f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1644:	6f142404 	svcvs	0x00142404
    1648:	05000000 	streq	r0, [r0, #-0]
    164c:	00000678 	andeq	r0, r0, r8, ror r6
    1650:	89143004 	ldmdbhi	r4, {r2, ip, sp}
    1654:	13000000 	movwne	r0, #0
    1658:	000000c0 	andeq	r0, r0, r0, asr #1
    165c:	20d61814 	sbcscs	r1, r6, r4, lsl r8
    1660:	0f000001 	svceq	0x00000001
    1664:	d8005243 	stmdale	r0, {r0, r1, r6, r9, ip, lr}
    1668:	000000cc 	andeq	r0, r0, ip, asr #1
    166c:	0d310300 	ldceq	3, cr0, [r1, #-0]
    1670:	d9050000 	stmdble	r5, {}	; <UNPREDICTABLE>
    1674:	0000cc11 	andeq	ip, r0, r1, lsl ip
    1678:	500f0400 	andpl	r0, pc, r0, lsl #8
    167c:	da005241 	ble	15f88 <_Min_Stack_Size+0x15b88>
    1680:	000000cc 	andeq	r0, r0, ip, asr #1
    1684:	0d0e0308 	stceq	3, cr0, [lr, #-32]	; 0xffffffe0
    1688:	db050000 	blle	141690 <_Min_Stack_Size+0x141290>
    168c:	0000cc11 	andeq	ip, r0, r1, lsl ip
    1690:	ea030c00 	b	c4698 <_Min_Stack_Size+0xc4298>
    1694:	0500000c 	streq	r0, [r0, #-12]
    1698:	00cc11dc 	ldrdeq	r1, [ip], #28
    169c:	0f100000 	svceq	0x00100000
    16a0:	00524346 	subseq	r4, r2, r6, asr #6
    16a4:	0000ccdd 	ldrdeq	ip, [r0], -sp
    16a8:	05001400 	streq	r1, [r0, #-1024]	; 0xfffffc00
    16ac:	00000bc5 	andeq	r0, r0, r5, asr #23
    16b0:	d103de05 	tstle	r3, r5, lsl #28
    16b4:	14000000 	strne	r0, [r0], #-0
    16b8:	0168e010 	cmneq	r8, r0, lsl r0
    16bc:	36030000 	strcc	r0, [r3], -r0
    16c0:	0500000c 	streq	r0, [r0, #-12]
    16c4:	00cc11e2 	sbceq	r1, ip, r2, ror #3
    16c8:	03000000 	movweq	r0, #0
    16cc:	00000cd9 	ldrdeq	r0, [r0], -r9
    16d0:	cc11e305 	ldcgt	3, cr14, [r1], {5}
    16d4:	04000000 	streq	r0, [r0], #-0
    16d8:	000d2b03 	andeq	r2, sp, r3, lsl #22
    16dc:	11e40500 	mvnne	r0, r0, lsl #10
    16e0:	000000cc 	andeq	r0, r0, ip, asr #1
    16e4:	0c1b0308 	ldceq	3, cr0, [fp], {8}
    16e8:	e5050000 	str	r0, [r5, #-0]
    16ec:	0000cc11 	andeq	ip, r0, r1, lsl ip
    16f0:	05000c00 	streq	r0, [r0, #-3072]	; 0xfffff400
    16f4:	00000bfb 	strdeq	r0, [r0], -fp
    16f8:	2c03e605 	stccs	6, cr14, [r3], {5}
    16fc:	15000001 	strne	r0, [r0, #-1]
    1700:	e9010928 	stmdb	r1, {r3, r5, r8, fp}
    1704:	04000001 	streq	r0, [r0], #-1
    1708:	00000aa2 	andeq	r0, r0, r2, lsr #21
    170c:	00cc010b 	sbceq	r0, ip, fp, lsl #2
    1710:	04000000 	streq	r0, [r0], #-0
    1714:	0000091d 	andeq	r0, r0, sp, lsl r9
    1718:	00cc010c 	sbceq	r0, ip, ip, lsl #2
    171c:	04040000 	streq	r0, [r4], #-0
    1720:	0000063a 	andeq	r0, r0, sl, lsr r6
    1724:	00cc010d 	sbceq	r0, ip, sp, lsl #2
    1728:	04080000 	streq	r0, [r8], #-0
    172c:	0000068f 	andeq	r0, r0, pc, lsl #13
    1730:	00cc010e 	sbceq	r0, ip, lr, lsl #2
    1734:	080c0000 	stmdaeq	ip, {}	; <UNPREDICTABLE>
    1738:	00524449 	subseq	r4, r2, r9, asr #8
    173c:	00cc010f 	sbceq	r0, ip, pc, lsl #2
    1740:	08100000 	ldmdaeq	r0, {}	; <UNPREDICTABLE>
    1744:	0052444f 	subseq	r4, r2, pc, asr #8
    1748:	00cc0110 	sbceq	r0, ip, r0, lsl r1
    174c:	04140000 	ldreq	r0, [r4], #-0
    1750:	00000a3e 	andeq	r0, r0, lr, lsr sl
    1754:	00cc0111 	sbceq	r0, ip, r1, lsl r1
    1758:	04180000 	ldreq	r0, [r8], #-0
    175c:	0000061e 	andeq	r0, r0, lr, lsl r6
    1760:	00cc0112 	sbceq	r0, ip, r2, lsl r1
    1764:	081c0000 	ldmdaeq	ip, {}	; <UNPREDICTABLE>
    1768:	00524641 	subseq	r4, r2, r1, asr #12
    176c:	01f90113 	mvnseq	r0, r3, lsl r1
    1770:	00200000 	eoreq	r0, r0, r0
    1774:	0000cc09 	andeq	ip, r0, r9, lsl #24
    1778:	0001f900 	andeq	pc, r1, r0, lsl #18
    177c:	00390a00 	eorseq	r0, r9, r0, lsl #20
    1780:	00010000 	andeq	r0, r1, r0
    1784:	0001e913 	andeq	lr, r1, r3, lsl r9
    1788:	0a431600 	beq	10c6f90 <_Min_Stack_Size+0x10c6b90>
    178c:	01140000 	tsteq	r4, r0
    1790:	00000174 	andeq	r0, r0, r4, ror r1
    1794:	01c42415 	biceq	r2, r4, r5, lsl r4
    1798:	0000027c 	andeq	r0, r0, ip, ror r2
    179c:	31524308 	cmpcc	r2, r8, lsl #6
    17a0:	cc01c600 	stcgt	6, cr12, [r1], {-0}
    17a4:	00000000 	andeq	r0, r0, r0
    17a8:	32524308 	subscc	r4, r2, #8, 6	; 0x20000000
    17ac:	cc01c700 	stcgt	7, cr12, [r1], {-0}
    17b0:	04000000 	streq	r0, [r0], #-0
    17b4:	00525308 	subseq	r5, r2, r8, lsl #6
    17b8:	00cc01c8 	sbceq	r0, ip, r8, asr #3
    17bc:	08080000 	stmdaeq	r8, {}	; <UNPREDICTABLE>
    17c0:	c9005244 	stmdbgt	r0, {r2, r6, r9, ip, lr}
    17c4:	0000cc01 	andeq	ip, r0, r1, lsl #24
    17c8:	4d040c00 	stcmi	12, cr0, [r4, #-0]
    17cc:	ca000009 	bgt	17f8 <_Min_Stack_Size+0x13f8>
    17d0:	0000cc01 	andeq	ip, r0, r1, lsl #24
    17d4:	fb041000 	blx	1057de <_Min_Stack_Size+0x1053de>
    17d8:	cb000006 	blgt	17f8 <_Min_Stack_Size+0x13f8>
    17dc:	0000cc01 	andeq	ip, r0, r1, lsl #24
    17e0:	11041400 	tstne	r4, r0, lsl #8
    17e4:	cc000002 	stcgt	0, cr0, [r0], {2}
    17e8:	0000cc01 	andeq	ip, r0, r1, lsl #24
    17ec:	3d041800 	stccc	8, cr1, [r4, #-0]
    17f0:	cd000000 	stcgt	0, cr0, [r0, #-0]
    17f4:	0000cc01 	andeq	ip, r0, r1, lsl #24
    17f8:	9c041c00 	stcls	12, cr1, [r4], {-0}
    17fc:	ce00000a 	cdpgt	0, 0, cr0, cr0, cr10, {0}
    1800:	0000cc01 	andeq	ip, r0, r1, lsl #24
    1804:	16002000 	strne	r2, [r0], -r0
    1808:	0000093c 	andeq	r0, r0, ip, lsr r9
    180c:	020901cf 	andeq	r0, r9, #-1073741773	; 0xc0000033
    1810:	041a0000 	ldreq	r0, [sl], #-0
    1814:	ea080102 	b	201c24 <_Min_Stack_Size+0x201824>
    1818:	0d000002 	stceq	0, cr0, [r0, #-8]
    181c:	00000295 	muleq	r0, r5, r2
    1820:	0bec1c1b 	bleq	ffb08894 <_estack+0xdfaf8894>
    1824:	06080000 	streq	r0, [r8], -r0
    1828:	02d8106b 	sbcseq	r1, r8, #107	; 0x6b
    182c:	6b030000 	blvs	c1834 <_Min_Stack_Size+0xc1434>
    1830:	0600000d 	streq	r0, [r0], -sp
    1834:	00a30a6c 	adceq	r0, r3, ip, ror #20
    1838:	03000000 	movweq	r0, #0
    183c:	00000d46 	andeq	r0, r0, r6, asr #26
    1840:	a30a6d06 	movwge	r6, #44294	; 0xad06
    1844:	01000000 	mrseq	r0, (UNDEF: 0)
    1848:	000c0703 	andeq	r0, ip, r3, lsl #14
    184c:	0a6e0600 	beq	1b83054 <_Min_Stack_Size+0x1b82c54>
    1850:	000000a3 	andeq	r0, r0, r3, lsr #1
    1854:	0d130302 	ldceq	3, cr0, [r3, #-8]
    1858:	6f060000 	svcvs	0x00060000
    185c:	0002d811 	andeq	sp, r2, r1, lsl r8
    1860:	0d000400 	cfstrseq	mvf0, [r0, #-0]
    1864:	000000af 	andeq	r0, r0, pc, lsr #1
    1868:	000bec05 	andeq	lr, fp, r5, lsl #24
    186c:	03700600 	cmneq	r0, #0, 12
    1870:	00000296 	muleq	r0, r6, r2
    1874:	0002dd0b 	andeq	sp, r2, fp, lsl #26
    1878:	09fe1d00 	ldmibeq	lr!, {r8, sl, fp, ip}^
    187c:	fe010000 	cdp2	0, 0, cr0, cr1, cr0, {0}
    1880:	0000b40a 	andeq	fp, r0, sl, lsl #8
    1884:	00221a00 	eoreq	r1, r2, r0, lsl #20
    1888:	00004408 	andeq	r4, r0, r8, lsl #8
    188c:	2d9c0100 	ldfcss	f0, [ip]
    1890:	0e000003 	cdpeq	0, 0, cr0, cr0, cr3, {0}
    1894:	24fe0072 	ldrbtcs	r0, [lr], #114	; 0x72
    1898:	000000a3 	andeq	r0, r0, r3, lsr #1
    189c:	0e779102 	expeqs	f1, f2
    18a0:	2ffe0067 	svccs	0x00fe0067
    18a4:	000000a3 	andeq	r0, r0, r3, lsr #1
    18a8:	0e769102 	expeqs	f1, f2
    18ac:	3afe0062 	bcc	fff81a3c <_estack+0xdff71a3c>
    18b0:	000000a3 	andeq	r0, r0, r3, lsr #1
    18b4:	00759102 	rsbseq	r9, r5, r2, lsl #2
    18b8:	00049807 	andeq	r9, r4, r7, lsl #16
    18bc:	21f8f900 	mvnscs	pc, r0, lsl #18
    18c0:	00220800 	eoreq	r0, r2, r0, lsl #16
    18c4:	9c010000 	stcls	0, cr0, [r1], {-0}
    18c8:	00000350 	andeq	r0, r0, r0, asr r3
    18cc:	0006d801 	andeq	sp, r6, r1, lsl #16
    18d0:	b41cf900 	ldrlt	pc, [ip], #-2304	; 0xfffff700
    18d4:	02000000 	andeq	r0, r0, #0
    18d8:	07007691 			; <UNDEFINED> instruction: 0x07007691
    18dc:	00000c5a 	andeq	r0, r0, sl, asr ip
    18e0:	00212ce6 	eoreq	r2, r1, r6, ror #25
    18e4:	0000cc08 	andeq	ip, r0, r8, lsl #24
    18e8:	f09c0100 			; <UNDEFINED> instruction: 0xf09c0100
    18ec:	01000003 	tsteq	r0, r3
    18f0:	000006d8 	ldrdeq	r0, [r0], -r8
    18f4:	00b41fe6 	adcseq	r1, r4, r6, ror #31
    18f8:	91030000 	mrsls	r0, (UNDEF: 3)
    18fc:	6c017ede 	stcvs	14, cr7, [r1], {222}	; 0xde
    1900:	e600000b 	str	r0, [r0], -fp
    1904:	0000b42f 	andeq	fp, r0, pc, lsr #8
    1908:	dc910300 	ldcle	3, cr0, [r1], {0}
    190c:	0b73017e 	bleq	1cc1f0c <_Min_Stack_Size+0x1cc1b0c>
    1910:	40e60000 	rscmi	r0, r6, r0
    1914:	000000b4 	strheq	r0, [r0], -r4
    1918:	7eda9103 	atnvce	f1, f3
    191c:	000c1001 	andeq	r1, ip, r1
    1920:	b451e600 	ldrblt	lr, [r1], #-1536	; 0xfffffa00
    1924:	03000000 	movweq	r0, #0
    1928:	017ed891 			; <UNDEFINED> instruction: 0x017ed891
    192c:	00000c87 	andeq	r0, r0, r7, lsl #25
    1930:	00b461e6 	adcseq	r6, r4, r6, ror #3
    1934:	91020000 	mrsls	r0, (UNDEF: 2)
    1938:	75620c00 	strbvc	r0, [r2, #-3072]!	; 0xfffff400
    193c:	0ee70066 	cdpeq	0, 14, cr0, cr7, cr6, {3}
    1940:	000003f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1944:	7ee49103 	urdvcs	f1, f3
    1948:	000c2806 	andeq	r2, ip, r6, lsl #16
    194c:	2d0cec00 	stccs	12, cr14, [ip, #-0]
    1950:	02000000 	andeq	r0, r0, #0
    1954:	d8066891 	stmdale	r6, {r0, r4, r7, fp, sp, lr}
    1958:	ed00000b 	stc	0, cr0, [r0, #-44]	; 0xffffffd4
    195c:	0000b40e 	andeq	fp, r0, lr, lsl #8
    1960:	66910200 	ldrvs	r0, [r1], r0, lsl #4
    1964:	00214a10 	eoreq	r4, r1, r0, lsl sl
    1968:	00002a08 	andeq	r2, r0, r8, lsl #20
    196c:	00690c00 	rsbeq	r0, r9, r0, lsl #24
    1970:	002d11e8 	eoreq	r1, sp, r8, ror #3
    1974:	91020000 	mrsls	r0, (UNDEF: 2)
    1978:	0900006c 	stmdbeq	r0, {r2, r3, r5, r6}
    197c:	000000b4 	strheq	r0, [r0], -r4
    1980:	00000400 	andeq	r0, r0, r0, lsl #8
    1984:	0000390a 	andeq	r3, r0, sl, lsl #18
    1988:	07003f00 	streq	r3, [r0, -r0, lsl #30]
    198c:	00000cef 	andeq	r0, r0, pc, ror #25
    1990:	00205acf 	eoreq	r5, r0, pc, asr #21
    1994:	0000d208 	andeq	sp, r0, r8, lsl #4
    1998:	779c0100 	ldrvc	r0, [ip, r0, lsl #2]
    199c:	01000004 	tsteq	r0, r4
    19a0:	00000d4d 	andeq	r0, r0, sp, asr #26
    19a4:	00b420cf 	adcseq	r2, r4, pc, asr #1
    19a8:	91020000 	mrsls	r0, (UNDEF: 2)
    19ac:	0c210146 	stfeqs	f0, [r1], #-280	; 0xfffffee8
    19b0:	31cf0000 	biccc	r0, pc, r0
    19b4:	000000b4 	strheq	r0, [r0], -r4
    19b8:	01449102 	cmpeq	r4, r2, lsl #2
    19bc:	00000bc0 	andeq	r0, r0, r0, asr #23
    19c0:	00b442cf 	adcseq	r4, r4, pc, asr #5
    19c4:	91020000 	mrsls	r0, (UNDEF: 2)
    19c8:	0c160142 	ldfeqs	f0, [r6], {66}	; 0x42
    19cc:	51cf0000 	bicpl	r0, pc, r0
    19d0:	000000b4 	strheq	r0, [r0], -r4
    19d4:	06409102 	strbeq	r9, [r0], -r2, lsl #2
    19d8:	00000ce4 	andeq	r0, r0, r4, ror #25
    19dc:	04770dd0 	ldrbteq	r0, [r7], #-3536	; 0xfffff230
    19e0:	91020000 	mrsls	r0, (UNDEF: 2)
    19e4:	0cde066c 	ldcleq	6, cr0, [lr], {108}	; 0x6c
    19e8:	0dd10000 	ldcleq	0, cr0, [r1]
    19ec:	00000477 	andeq	r0, r0, r7, ror r4
    19f0:	06689102 	strbteq	r9, [r8], -r2, lsl #2
    19f4:	00000c6a 	andeq	r0, r0, sl, ror #24
    19f8:	048714da 	streq	r1, [r7], #1242	; 0x4da
    19fc:	91020000 	mrsls	r0, (UNDEF: 2)
    1a00:	a3090048 	movwge	r0, #36936	; 0x9048
    1a04:	87000000 	strhi	r0, [r0, -r0]
    1a08:	0a000004 	beq	1a20 <_Min_Stack_Size+0x1620>
    1a0c:	00000039 	andeq	r0, r0, r9, lsr r0
    1a10:	dd090003 	stcle	0, cr0, [r9, #-12]
    1a14:	97000002 	strls	r0, [r0, -r2]
    1a18:	0a000004 	beq	1a30 <_Min_Stack_Size+0x1630>
    1a1c:	00000039 	andeq	r0, r0, r9, lsr r0
    1a20:	aa170003 	bge	5c1a34 <_Min_Stack_Size+0x5c1634>
    1a24:	c8000008 	stmdagt	r0, {r3}
    1a28:	08002044 	stmdaeq	r0, {r2, r6, sp}
    1a2c:	00000016 	andeq	r0, r0, r6, lsl r0
    1a30:	de079c01 	cdple	12, 0, cr9, cr7, cr1, {0}
    1a34:	8d000006 	stchi	0, cr0, [r0, #-24]	; 0xffffffe8
    1a38:	08001e30 	stmdaeq	r0, {r4, r5, r9, sl, fp, ip}
    1a3c:	00000214 	andeq	r0, r0, r4, lsl r2
    1a40:	04f69c01 	ldrbteq	r9, [r6], #3073	; 0xc01
    1a44:	e4060000 	str	r0, [r6], #-0
    1a48:	8f00000c 	svchi	0x0000000c
    1a4c:	00050613 	andeq	r0, r5, r3, lsl r6
    1a50:	6c910200 	lfmvs	f0, 4, [r1], {0}
    1a54:	000cde06 	andeq	sp, ip, r6, lsl #28
    1a58:	06139500 	ldreq	r9, [r3], -r0, lsl #10
    1a5c:	02000005 	andeq	r0, r0, #5
    1a60:	4d066891 	stcmi	8, cr6, [r6, #-580]	; 0xfffffdbc
    1a64:	9b00000c 	blls	1a9c <_Min_Stack_Size+0x169c>
    1a68:	00051b1a 	andeq	r1, r5, sl, lsl fp
    1a6c:	d8910300 	ldmle	r1, {r8, r9}
    1a70:	0d00067e 	stceq	6, cr0, [r0, #-504]	; 0xfffffe08
    1a74:	1abe0000 	bne	fef81a7c <_estack+0xdef71a7c>
    1a78:	00000530 	andeq	r0, r0, r0, lsr r5
    1a7c:	7eb89103 	asnvce	f1, f3
    1a80:	00af0900 	adceq	r0, pc, r0, lsl #18
    1a84:	05060000 	streq	r0, [r6, #-0]
    1a88:	390a0000 	stmdbcc	sl, {}	; <UNPREDICTABLE>
    1a8c:	03000000 	movweq	r0, #0
    1a90:	04f60b00 	ldrbteq	r0, [r6], #2816	; 0xb00
    1a94:	e9090000 	stmdb	r9, {}	; <UNPREDICTABLE>
    1a98:	1b000002 	blne	1aa8 <_Min_Stack_Size+0x16a8>
    1a9c:	0a000005 	beq	1ab8 <_Min_Stack_Size+0x16b8>
    1aa0:	00000039 	andeq	r0, r0, r9, lsr r0
    1aa4:	0b0b0011 	bleq	2c1af0 <_Min_Stack_Size+0x2c16f0>
    1aa8:	09000005 	stmdbeq	r0, {r0, r2}
    1aac:	000002e9 	andeq	r0, r0, r9, ror #5
    1ab0:	00000530 	andeq	r0, r0, r0, lsr r5
    1ab4:	0000390a 	andeq	r3, r0, sl, lsl #18
    1ab8:	0b000300 	bleq	26c0 <_Min_Stack_Size+0x22c0>
    1abc:	00000520 	andeq	r0, r0, r0, lsr #10
    1ac0:	000d1807 	andeq	r1, sp, r7, lsl #16
    1ac4:	1e088500 	cfsh32ne	mvfx8, mvfx8, #0
    1ac8:	00280800 	eoreq	r0, r8, r0, lsl #16
    1acc:	9c010000 	stcls	0, cr0, [r1], {-0}
    1ad0:	00000558 	andeq	r0, r0, r8, asr r5
    1ad4:	000c6a01 	andeq	r6, ip, r1, lsl #20
    1ad8:	582f8500 	stmdapl	pc!, {r8, sl, pc}	; <UNPREDICTABLE>
    1adc:	02000005 	andeq	r0, r0, #5
    1ae0:	0d007491 	cfstrseq	mvf7, [r0, #-580]	; 0xfffffdbc
    1ae4:	000002e9 	andeq	r0, r0, r9, ror #5
    1ae8:	000c3b07 	andeq	r3, ip, r7, lsl #22
    1aec:	1d9c7600 	ldcne	6, cr7, [ip]
    1af0:	006c0800 	rsbeq	r0, ip, r0, lsl #16
    1af4:	9c010000 	stcls	0, cr0, [r1], {-0}
    1af8:	00000596 	muleq	r0, r6, r5
    1afc:	000d6b01 	andeq	r6, sp, r1, lsl #22
    1b00:	582e7600 	stmdapl	lr!, {r9, sl, ip, sp, lr}
    1b04:	02000005 	andeq	r0, r0, #5
    1b08:	be106c91 	mrclt	12, 0, r6, cr0, cr1, {4}
    1b0c:	2608001d 			; <UNDEFINED> instruction: 0x2608001d
    1b10:	0c000000 	stceq	0, cr0, [r0], {-0}
    1b14:	167b0069 	ldrbtne	r0, [fp], -r9, rrx
    1b18:	000000a3 	andeq	r0, r0, r3, lsr #1
    1b1c:	00779102 	rsbseq	r9, r7, r2, lsl #2
    1b20:	0d730700 	ldcleq	7, cr0, [r3, #-0]
    1b24:	006c0000 	rsbeq	r0, ip, r0
    1b28:	4a000000 	bmi	1b30 <_Min_Stack_Size+0x1730>
    1b2c:	01000000 	mrseq	r0, (UNDEF: 0)
    1b30:	0005eb9c 	muleq	r5, ip, fp
    1b34:	0d6b0100 	stfeqe	f0, [fp, #-0]
    1b38:	226c0000 	rsbcs	r0, ip, #0
    1b3c:	000000a3 	andeq	r0, r0, r3, lsr #1
    1b40:	016f9102 	cmneq	pc, r2, lsl #2
    1b44:	00000d13 	andeq	r0, r0, r3, lsl sp
    1b48:	0290376c 	addseq	r3, r0, #108, 14	; 0x1b00000
    1b4c:	91020000 	mrsls	r0, (UNDEF: 2)
    1b50:	0be50168 	bleq	ff9420f8 <_estack+0xdf9320f8>
    1b54:	446c0000 	strbtmi	r0, [ip], #-0
    1b58:	0000002d 	andeq	r0, r0, sp, lsr #32
    1b5c:	10649102 	rsbne	r9, r4, r2, lsl #2
    1b60:	00000000 	andeq	r0, r0, r0
    1b64:	00000022 	andeq	r0, r0, r2, lsr #32
    1b68:	7000690c 	andvc	r6, r0, ip, lsl #18
    1b6c:	00002d11 	andeq	r2, r0, r1, lsl sp
    1b70:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1b74:	9e070000 	cdpls	0, 0, cr0, cr7, cr0, {0}
    1b78:	6400000b 	strvs	r0, [r0], #-11
    1b7c:	00000000 	andeq	r0, r0, r0
    1b80:	0000002e 	andeq	r0, r0, lr, lsr #32
    1b84:	062a9c01 	strteq	r9, [sl], -r1, lsl #24
    1b88:	6b010000 	blvs	41b90 <_Min_Stack_Size+0x41790>
    1b8c:	6400000d 	strvs	r0, [r0], #-13
    1b90:	0000a321 	andeq	sl, r0, r1, lsr #6
    1b94:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    1b98:	000d1301 	andeq	r1, sp, r1, lsl #6
    1b9c:	87306400 	ldrhi	r6, [r0, -r0, lsl #8]!
    1ba0:	02000002 	andeq	r0, r0, #2
    1ba4:	e5017091 	str	r7, [r1, #-145]	; 0xffffff6f
    1ba8:	6400000b 	strvs	r0, [r0], #-11
    1bac:	00002d3d 	andeq	r2, r0, sp, lsr sp
    1bb0:	6c910200 	lfmvs	f0, 4, [r1], {0}
    1bb4:	04ed1100 	strbteq	r1, [sp], #256	; 0x100
    1bb8:	7c600000 	stclvc	0, cr0, [r0], #-0
    1bbc:	2008001d 	andcs	r0, r8, sp, lsl r0
    1bc0:	01000000 	mrseq	r0, (UNDEF: 0)
    1bc4:	0488129c 	streq	r1, [r8], #668	; 0x29c
    1bc8:	1c530000 	mrane	r0, r3, acc0
    1bcc:	08001d00 	stmdaeq	r0, {r8, sl, fp, ip}
    1bd0:	0000007c 	andeq	r0, r0, ip, ror r0
    1bd4:	066c9c01 	strbteq	r9, [ip], -r1, lsl #24
    1bd8:	13010000 	movwne	r0, #4096	; 0x1000
    1bdc:	5300000d 	movwpl	r0, #13
    1be0:	00028732 	andeq	r8, r2, r2, lsr r7
    1be4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1be8:	000be501 	andeq	lr, fp, r1, lsl #10
    1bec:	b4415300 	strblt	r5, [r1], #-768	; 0xfffffd00
    1bf0:	02000000 	andeq	r0, r0, #0
    1bf4:	12007291 	andne	r7, r0, #268435465	; 0x10000009
    1bf8:	00000bb1 			; <UNDEFINED> instruction: 0x00000bb1
    1bfc:	00000636 	andeq	r0, r0, r6, lsr r6
    1c00:	00800000 	addeq	r0, r0, r0
    1c04:	9c010000 	stcls	0, cr0, [r1], {-0}
    1c08:	000006ac 	andeq	r0, r0, ip, lsr #13
    1c0c:	000d1301 	andeq	r1, sp, r1, lsl #6
    1c10:	ac1e3600 	ldcge	6, cr3, [lr], {-0}
    1c14:	02000006 	andeq	r0, r0, #6
    1c18:	e5016c91 	str	r6, [r1, #-3217]	; 0xfffff36f
    1c1c:	3600000b 	strcc	r0, [r0], -fp
    1c20:	00002d2b 	andeq	r2, r0, fp, lsr #26
    1c24:	68910200 	ldmvs	r1, {r9}
    1c28:	000d5406 	andeq	r5, sp, r6, lsl #8
    1c2c:	a30d3900 	movwge	r3, #55552	; 0xd900
    1c30:	02000000 	andeq	r0, r0, #0
    1c34:	0d007791 	stceq	7, cr7, [r0, #-580]	; 0xfffffdbc
    1c38:	000000a3 	andeq	r0, r0, r3, lsr #1
    1c3c:	000d3612 	andeq	r3, sp, r2, lsl r6
    1c40:	d0062900 	andle	r2, r6, r0, lsl #18
    1c44:	3008001c 	andcc	r0, r8, ip, lsl r0
    1c48:	01000000 	mrseq	r0, (UNDEF: 0)
    1c4c:	0006d59c 	muleq	r6, ip, r5
    1c50:	0d130100 	ldfeqs	f0, [r3, #-0]
    1c54:	1e290000 	cdpne	0, 2, cr0, cr9, cr0, {0}
    1c58:	000000a3 	andeq	r0, r0, r3, lsr #1
    1c5c:	00779102 	rsbseq	r9, r7, r2, lsl #2
    1c60:	000d5a11 	andeq	r5, sp, r1, lsl sl
    1c64:	1cb02300 	ldcne	3, cr2, [r0]
    1c68:	00200800 	eoreq	r0, r0, r0, lsl #16
    1c6c:	9c010000 	stcls	0, cr0, [r1], {-0}
    1c70:	000c7311 	andeq	r7, ip, r1, lsl r3
    1c74:	1c901d00 	ldcne	13, cr1, [r0], {0}
    1c78:	00200800 	eoreq	r0, r0, r0, lsl #16
    1c7c:	9c010000 	stcls	0, cr0, [r1], {-0}
    1c80:	00065617 	andeq	r5, r6, r7, lsl r6
    1c84:	1c581500 	cfldr64ne	mvdx1, [r8], {-0}
    1c88:	00380800 	eorseq	r0, r8, r0, lsl #16
    1c8c:	9c010000 	stcls	0, cr0, [r1], {-0}
    1c90:	00036c1e 	andeq	r6, r3, lr, lsl ip
    1c94:	1c0c0100 	stfnes	f0, [ip], {-0}
    1c98:	08001c20 	stmdaeq	r0, {r5, sl, fp, ip}
    1c9c:	00000038 	andeq	r0, r0, r8, lsr r0
    1ca0:	6e0e9c01 	cdpvs	12, 0, cr9, cr14, cr1, {0}
    1ca4:	390c0073 	stmdbcc	ip, {r0, r1, r4, r5, r6}
    1ca8:	000000c0 	andeq	r0, r0, r0, asr #1
    1cac:	0c6c9102 	stfeqp	f1, [ip], #-8
    1cb0:	00727463 	rsbseq	r7, r2, r3, ror #8
    1cb4:	0026090d 	eoreq	r0, r6, sp, lsl #18
    1cb8:	91020000 	mrsls	r0, (UNDEF: 2)
    1cbc:	2f000074 	svccs	0x00000074
    1cc0:	05000005 	streq	r0, [r0, #-5]
    1cc4:	92040100 	andls	r0, r4, #0, 2
    1cc8:	0e000005 	cdpeq	0, 0, cr0, cr0, cr5, {0}
    1ccc:	00000119 	andeq	r0, r0, r9, lsl r1
    1cd0:	000dc91d 	andeq	ip, sp, sp, lsl r9
    1cd4:	000afa00 	andeq	pc, sl, r0, lsl #20
    1cd8:	00012600 	andeq	r2, r1, r0, lsl #12
    1cdc:	00000000 	andeq	r0, r0, r0
    1ce0:	00128900 	andseq	r8, r2, r0, lsl #18
    1ce4:	06010200 	streq	r0, [r1], -r0, lsl #4
    1ce8:	000002e3 	andeq	r0, r0, r3, ror #5
    1cec:	00010f08 	andeq	r0, r1, r8, lsl #30
    1cf0:	182b0200 	stmdane	fp!, {r9}
    1cf4:	00000039 	andeq	r0, r0, r9, lsr r0
    1cf8:	e1080102 	tst	r8, r2, lsl #2
    1cfc:	02000002 	andeq	r0, r0, #2
    1d00:	09d80502 	ldmibeq	r8, {r1, r8, sl}^
    1d04:	02020000 	andeq	r0, r2, #0
    1d08:	000abc07 	andeq	fp, sl, r7, lsl #24
    1d0c:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    1d10:	00000686 	andeq	r0, r0, r6, lsl #13
    1d14:	00067608 	andeq	r7, r6, r8, lsl #12
    1d18:	194f0200 	stmdbne	pc, {r9}^	; <UNPREDICTABLE>
    1d1c:	00000061 	andeq	r0, r0, r1, rrx
    1d20:	5d070402 	cfstrspl	mvf0, [r7, #-8]
    1d24:	02000008 	andeq	r0, r0, #8
    1d28:	06810508 	streq	r0, [r1], r8, lsl #10
    1d2c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    1d30:	00085807 	andeq	r5, r8, r7, lsl #16
    1d34:	05040f00 	streq	r0, [r4, #-3840]	; 0xfffff100
    1d38:	00746e69 	rsbseq	r6, r4, r9, ror #28
    1d3c:	62070402 	andvs	r0, r7, #33554432	; 0x2000000
    1d40:	08000008 	stmdaeq	r0, {r3}
    1d44:	00000111 	andeq	r0, r0, r1, lsl r1
    1d48:	2d131803 	ldccs	8, cr1, [r3, #-12]
    1d4c:	07000000 	streq	r0, [r0, -r0]
    1d50:	00000084 	andeq	r0, r0, r4, lsl #1
    1d54:	00008406 	andeq	r8, r0, r6, lsl #8
    1d58:	06780800 	ldrbteq	r0, [r8], -r0, lsl #16
    1d5c:	30030000 	andcc	r0, r3, r0
    1d60:	00005514 	andeq	r5, r0, r4, lsl r5
    1d64:	009a0700 	addseq	r0, sl, r0, lsl #14
    1d68:	a6060000 	strge	r0, [r6], -r0
    1d6c:	0c000000 	stceq	0, cr0, [r0], {-0}
    1d70:	01b8048c 			; <UNDEFINED> instruction: 0x01b8048c
    1d74:	000001e0 	andeq	r0, r0, r0, ror #3
    1d78:	00022601 	andeq	r2, r2, r1, lsl #12
    1d7c:	01ba0400 			; <UNDEFINED> instruction: 0x01ba0400
    1d80:	0000ab12 	andeq	sl, r0, r2, lsl fp
    1d84:	98010000 	stmdals	r1, {}	; <UNPREDICTABLE>
    1d88:	04000002 	streq	r0, [r0], #-2
    1d8c:	a61201bb 			; <UNDEFINED> instruction: 0xa61201bb
    1d90:	04000000 	streq	r0, [r0], #-0
    1d94:	00008601 	andeq	r8, r0, r1, lsl #12
    1d98:	01bc0400 			; <UNDEFINED> instruction: 0x01bc0400
    1d9c:	0000a612 	andeq	sl, r0, r2, lsl r6
    1da0:	18010800 	stmdane	r1, {fp}
    1da4:	04000002 	streq	r0, [r0], #-2
    1da8:	a61201bd 			; <UNDEFINED> instruction: 0xa61201bd
    1dac:	0c000000 	stceq	0, cr0, [r0], {-0}
    1db0:	52435303 	subpl	r5, r3, #201326592	; 0xc000000
    1db4:	01be0400 			; <UNDEFINED> instruction: 0x01be0400
    1db8:	0000a612 	andeq	sl, r0, r2, lsl r6
    1dbc:	43031000 	movwmi	r1, #12288	; 0x3000
    1dc0:	04005243 	streq	r5, [r0], #-579	; 0xfffffdbd
    1dc4:	a61201bf 			; <UNDEFINED> instruction: 0xa61201bf
    1dc8:	14000000 	strne	r0, [r0], #-0
    1dcc:	50485303 	subpl	r5, r8, r3, lsl #6
    1dd0:	01c00400 	biceq	r0, r0, r0, lsl #8
    1dd4:	0001f012 	andeq	pc, r1, r2, lsl r0	; <UNPREDICTABLE>
    1dd8:	49011800 	stmdbmi	r1, {fp, ip}
    1ddc:	04000004 	streq	r0, [r0], #-4
    1de0:	a61201c1 	ldrge	r0, [r2], -r1, asr #3
    1de4:	24000000 	strcs	r0, [r0], #-0
    1de8:	00094801 	andeq	r4, r9, r1, lsl #16
    1dec:	01c20400 	biceq	r0, r2, r0, lsl #8
    1df0:	0000a612 	andeq	sl, r0, r2, lsl r6
    1df4:	15012800 	strne	r2, [r1, #-2048]	; 0xfffff800
    1df8:	04000004 	streq	r0, [r0], #-4
    1dfc:	a61201c3 	ldrge	r0, [r2], -r3, asr #3
    1e00:	2c000000 	stccs	0, cr0, [r0], {-0}
    1e04:	0003e001 	andeq	lr, r3, r1
    1e08:	01c40400 	biceq	r0, r4, r0, lsl #8
    1e0c:	0000a612 	andeq	sl, r0, r2, lsl r6
    1e10:	d2013000 	andle	r3, r1, #0
    1e14:	04000009 	streq	r0, [r0], #-9
    1e18:	a61201c5 	ldrge	r0, [r2], -r5, asr #3
    1e1c:	34000000 	strcc	r0, [r0], #-0
    1e20:	00077001 	andeq	r7, r7, r1
    1e24:	01c60400 	biceq	r0, r6, r0, lsl #8
    1e28:	0000a612 	andeq	sl, r0, r2, lsl r6
    1e2c:	18013800 	stmdane	r1, {fp, ip, sp}
    1e30:	04000009 	streq	r0, [r0], #-9
    1e34:	a61201c7 	ldrge	r0, [r2], -r7, asr #3
    1e38:	3c000000 	stccc	0, cr0, [r0], {-0}
    1e3c:	52465003 	subpl	r5, r6, #3
    1e40:	01c80400 	biceq	r0, r8, r0, lsl #8
    1e44:	00020a12 	andeq	r0, r2, r2, lsl sl
    1e48:	44034000 	strmi	r4, [r3], #-0
    1e4c:	04005246 	streq	r5, [r0], #-582	; 0xfffffdba
    1e50:	ab1201c9 	blge	48257c <_Min_Stack_Size+0x48217c>
    1e54:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
    1e58:	52444103 	subpl	r4, r4, #-1073741824	; 0xc0000000
    1e5c:	01ca0400 	biceq	r0, sl, r0, lsl #8
    1e60:	0000ab12 	andeq	sl, r0, r2, lsl fp
    1e64:	c1014c00 	tstgt	r1, r0, lsl #24
    1e68:	04000009 	streq	r0, [r0], #-9
    1e6c:	241201cb 	ldrcs	r0, [r2], #-459	; 0xfffffe35
    1e70:	50000002 	andpl	r0, r0, r2
    1e74:	000a1001 	andeq	r1, sl, r1
    1e78:	01cc0400 	biceq	r0, ip, r0, lsl #8
    1e7c:	00023e12 	andeq	r3, r2, r2, lsl lr
    1e80:	cd016000 	stcgt	0, cr6, [r1, #-0]
    1e84:	04000002 	streq	r0, [r0], #-2
    1e88:	431201cd 	tstmi	r2, #1073741875	; 0x40000033
    1e8c:	74000002 	strvc	r0, [r0], #-2
    1e90:	000af401 	andeq	pc, sl, r1, lsl #8
    1e94:	01ce0400 	biceq	r0, lr, r0, lsl #8
    1e98:	0000a612 	andeq	sl, r0, r2, lsl r6
    1e9c:	04008800 	streq	r8, [r0], #-2048	; 0xfffff800
    1ea0:	00000090 	muleq	r0, r0, r0
    1ea4:	000001f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1ea8:	00007d05 	andeq	r7, r0, r5, lsl #26
    1eac:	07000b00 	streq	r0, [r0, -r0, lsl #22]
    1eb0:	000001e0 	andeq	r0, r0, r0, ror #3
    1eb4:	0000ab04 	andeq	sl, r0, r4, lsl #22
    1eb8:	00020500 	andeq	r0, r2, r0, lsl #10
    1ebc:	007d0500 	rsbseq	r0, sp, r0, lsl #10
    1ec0:	00010000 	andeq	r0, r1, r0
    1ec4:	0001f506 	andeq	pc, r1, r6, lsl #10
    1ec8:	02050700 	andeq	r0, r5, #0, 14
    1ecc:	ab040000 	blge	101ed4 <_Min_Stack_Size+0x101ad4>
    1ed0:	1f000000 	svcne	0x00000000
    1ed4:	05000002 	streq	r0, [r0, #-2]
    1ed8:	0000007d 	andeq	r0, r0, sp, ror r0
    1edc:	0f060003 	svceq	0x00060003
    1ee0:	07000002 	streq	r0, [r0, -r2]
    1ee4:	0000021f 	andeq	r0, r0, pc, lsl r2
    1ee8:	0000ab04 	andeq	sl, r0, r4, lsl #22
    1eec:	00023900 	andeq	r3, r2, r0, lsl #18
    1ef0:	007d0500 	rsbseq	r0, sp, r0, lsl #10
    1ef4:	00040000 	andeq	r0, r4, r0
    1ef8:	00022906 	andeq	r2, r2, r6, lsl #18
    1efc:	02390700 	eorseq	r0, r9, #0, 14
    1f00:	9a040000 	bls	101f08 <_Min_Stack_Size+0x101b08>
    1f04:	53000000 	movwpl	r0, #0
    1f08:	05000002 	streq	r0, [r0, #-2]
    1f0c:	0000007d 	andeq	r0, r0, sp, ror r0
    1f10:	d70d0004 	strle	r0, [sp, -r4]
    1f14:	04000003 	streq	r0, [r0], #-3
    1f18:	00b001cf 	adcseq	r0, r0, pc, asr #3
    1f1c:	9a040000 	bls	101f24 <_Min_Stack_Size+0x101b24>
    1f20:	6f000000 	svcvs	0x00000000
    1f24:	05000002 	streq	r0, [r0, #-2]
    1f28:	0000007d 	andeq	r0, r0, sp, ror r0
    1f2c:	9a040000 	bls	101f34 <_Min_Stack_Size+0x101b34>
    1f30:	7f000000 	svcvc	0x00000000
    1f34:	05000002 	streq	r0, [r0, #-2]
    1f38:	0000007d 	andeq	r0, r0, sp, ror r0
    1f3c:	8f0a0001 	svchi	0x000a0001
    1f40:	4a000005 	bmi	1f5c <_Min_Stack_Size+0x1b5c>
    1f44:	00009a11 	andeq	r9, r0, r1, lsl sl
    1f48:	00950400 	addseq	r0, r5, r0, lsl #8
    1f4c:	029a0000 	addseq	r0, sl, #0
    1f50:	7d050000 	stcvc	0, cr0, [r5, #-0]
    1f54:	0f000000 	svceq	0x00000000
    1f58:	028a0600 	addeq	r0, sl, #0, 12
    1f5c:	bb0a0000 	bllt	281f64 <_Min_Stack_Size+0x281b64>
    1f60:	4c00000d 	stcmi	0, cr0, [r0], {13}
    1f64:	00029a17 	andeq	r9, r2, r7, lsl sl
    1f68:	00950400 	addseq	r0, r5, r0, lsl #8
    1f6c:	02ba0000 	adcseq	r0, sl, #0
    1f70:	7d050000 	stcvc	0, cr0, [r5, #-0]
    1f74:	07000000 	streq	r0, [r0, -r0]
    1f78:	02aa0600 	adceq	r0, sl, #0, 12
    1f7c:	a60a0000 	strge	r0, [sl], -r0
    1f80:	4d00000d 	stcmi	0, cr0, [r0, #-52]	; 0xffffffcc
    1f84:	0002ba17 	andeq	fp, r2, r7, lsl sl
    1f88:	06900c00 	ldreq	r0, [r0], r0, lsl #24
    1f8c:	04930150 	ldreq	r0, [r3], #336	; 0x150
    1f90:	43030000 	movwmi	r0, #12288	; 0x3000
    1f94:	52060052 	andpl	r0, r6, #82	; 0x52
    1f98:	00a61101 	adceq	r1, r6, r1, lsl #2
    1f9c:	01000000 	mrseq	r0, (UNDEF: 0)
    1fa0:	000006b2 			; <UNDEFINED> instruction: 0x000006b2
    1fa4:	11015306 	tstne	r1, r6, lsl #6
    1fa8:	000000a6 	andeq	r0, r0, r6, lsr #1
    1fac:	02930104 	addseq	r0, r3, #4, 2
    1fb0:	54060000 	strpl	r0, [r6], #-0
    1fb4:	00a61101 	adceq	r1, r6, r1, lsl #2
    1fb8:	03080000 	movweq	r0, #32768	; 0x8000
    1fbc:	00524943 	subseq	r4, r2, r3, asr #18
    1fc0:	11015506 	tstne	r1, r6, lsl #10
    1fc4:	000000a6 	andeq	r0, r0, r6, lsr #1
    1fc8:	03e5010c 	mvneq	r0, #12, 2
    1fcc:	56060000 	strpl	r0, [r6], -r0
    1fd0:	00a61101 	adceq	r1, r6, r1, lsl #2
    1fd4:	01100000 	tsteq	r0, r0
    1fd8:	000009b0 			; <UNDEFINED> instruction: 0x000009b0
    1fdc:	11015706 	tstne	r1, r6, lsl #14
    1fe0:	000000a6 	andeq	r0, r0, r6, lsr #1
    1fe4:	07cc0114 	bfieq	r0, r4, #2, #11
    1fe8:	58060000 	stmdapl	r6, {}	; <UNPREDICTABLE>
    1fec:	00a61101 	adceq	r1, r6, r1, lsl #2
    1ff0:	01180000 	tsteq	r8, r0
    1ff4:	000002cd 	andeq	r0, r0, sp, asr #5
    1ff8:	11015906 	tstne	r1, r6, lsl #18
    1ffc:	0000009a 	muleq	r0, sl, r0
    2000:	080b011c 	stmdaeq	fp, {r2, r3, r4, r8}
    2004:	5a060000 	bpl	18200c <_Min_Stack_Size+0x181c0c>
    2008:	00a61101 	adceq	r1, r6, r1, lsl #2
    200c:	01200000 			; <UNDEFINED> instruction: 0x01200000
    2010:	000006cf 	andeq	r0, r0, pc, asr #13
    2014:	11015b06 	tstne	r1, r6, lsl #22
    2018:	000000a6 	andeq	r0, r0, r6, lsr #1
    201c:	02d70124 	sbcseq	r0, r7, #36, 2
    2020:	5c060000 	stcpl	0, cr0, [r6], {-0}
    2024:	026f1101 	rsbeq	r1, pc, #1073741824	; 0x40000000
    2028:	01280000 			; <UNDEFINED> instruction: 0x01280000
    202c:	00000977 	andeq	r0, r0, r7, ror r9
    2030:	11015d06 	tstne	r1, r6, lsl #26
    2034:	000000a6 	andeq	r0, r0, r6, lsr #1
    2038:	03f90130 	mvnseq	r0, #48, 2
    203c:	5e060000 	cdppl	0, 0, cr0, cr6, cr0, {0}
    2040:	00a61101 	adceq	r1, r6, r1, lsl #2
    2044:	01340000 	teqeq	r4, r0
    2048:	000004bd 			; <UNDEFINED> instruction: 0x000004bd
    204c:	11015f06 	tstne	r1, r6, lsl #30
    2050:	000000a6 	andeq	r0, r0, r6, lsr #1
    2054:	038d0138 	orreq	r0, sp, #56, 2
    2058:	60060000 	andvs	r0, r6, r0
    205c:	009a1101 	addseq	r1, sl, r1, lsl #2
    2060:	013c0000 	teqeq	ip, r0
    2064:	00000565 	andeq	r0, r0, r5, ror #10
    2068:	11016106 	tstne	r1, r6, lsl #2
    206c:	000000a6 	andeq	r0, r0, r6, lsr #1
    2070:	02710140 	rsbseq	r0, r1, #64, 2
    2074:	62060000 	andvs	r0, r6, #0
    2078:	00a61101 	adceq	r1, r6, r1, lsl #2
    207c:	01440000 	mrseq	r0, (UNDEF: 68)
    2080:	00000397 	muleq	r0, r7, r3
    2084:	11016306 	tstne	r1, r6, lsl #6
    2088:	0000026f 	andeq	r0, r0, pc, ror #4
    208c:	02790148 	rsbseq	r0, r9, #72, 2
    2090:	64060000 	strvs	r0, [r6], #-0
    2094:	00a61101 	adceq	r1, r6, r1, lsl #2
    2098:	01500000 	cmpeq	r0, r0
    209c:	00000207 	andeq	r0, r0, r7, lsl #4
    20a0:	11016506 	tstne	r1, r6, lsl #10
    20a4:	000000a6 	andeq	r0, r0, r6, lsr #1
    20a8:	08f60154 	ldmeq	r6!, {r2, r4, r6, r8}^
    20ac:	66060000 	strvs	r0, [r6], -r0
    20b0:	00a61101 	adceq	r1, r6, r1, lsl #2
    20b4:	01580000 	cmpeq	r8, r0
    20b8:	00000301 	andeq	r0, r0, r1, lsl #6
    20bc:	11016706 	tstne	r1, r6, lsl #14
    20c0:	0000009a 	muleq	r0, sl, r0
    20c4:	0784015c 			; <UNDEFINED> instruction: 0x0784015c
    20c8:	68060000 	stmdavs	r6, {}	; <UNPREDICTABLE>
    20cc:	00a61101 	adceq	r1, r6, r1, lsl #2
    20d0:	01600000 	cmneq	r0, r0
    20d4:	0000070a 	andeq	r0, r0, sl, lsl #14
    20d8:	11016906 	tstne	r1, r6, lsl #18
    20dc:	000000a6 	andeq	r0, r0, r6, lsr #1
    20e0:	030b0164 	movweq	r0, #45412	; 0xb164
    20e4:	6a060000 	bvs	1820ec <_Min_Stack_Size+0x181cec>
    20e8:	026f1101 	rsbeq	r1, pc, #1073741824	; 0x40000000
    20ec:	01680000 	cmneq	r8, r0
    20f0:	00000444 	andeq	r0, r0, r4, asr #8
    20f4:	11016b06 	tstne	r1, r6, lsl #22
    20f8:	000000a6 	andeq	r0, r0, r6, lsr #1
    20fc:	53430370 	movtpl	r0, #13168	; 0x3370
    2100:	6c060052 	stcvs	0, cr0, [r6], {82}	; 0x52
    2104:	00a61101 	adceq	r1, r6, r1, lsl #2
    2108:	01740000 	cmneq	r4, r0
    210c:	00000315 	andeq	r0, r0, r5, lsl r3
    2110:	11016d06 	tstne	r1, r6, lsl #26
    2114:	0000026f 	andeq	r0, r0, pc, ror #4
    2118:	06a20178 			; <UNDEFINED> instruction: 0x06a20178
    211c:	6e060000 	cdpvs	0, 0, cr0, cr6, cr0, {0}
    2120:	00a61101 	adceq	r1, r6, r1, lsl #2
    2124:	01800000 	orreq	r0, r0, r0
    2128:	0000003a 	andeq	r0, r0, sl, lsr r0
    212c:	11016f06 	tstne	r1, r6, lsl #30
    2130:	000000a6 	andeq	r0, r0, r6, lsr #1
    2134:	031f0184 	tsteq	pc, #132, 2	; 0x21
    2138:	70060000 	andvc	r0, r6, r0
    213c:	025f1101 	subseq	r1, pc, #1073741824	; 0x40000000
    2140:	01880000 	orreq	r0, r8, r0
    2144:	00000290 	muleq	r0, r0, r2
    2148:	11017106 	tstne	r1, r6, lsl #2
    214c:	000000a6 	andeq	r0, r0, r6, lsr #1
    2150:	c60d008c 	strgt	r0, [sp], -ip, lsl #1
    2154:	06000009 	streq	r0, [r0], -r9
    2158:	02ca0172 	sbceq	r0, sl, #-2147483620	; 0x8000001c
    215c:	7f0b0000 	svcvc	0x000b0000
    2160:	8a000002 	bhi	2170 <_Min_Stack_Size+0x1d70>
    2164:	2c03050a 	cfstr32cs	mvfx0, [r3], {10}
    2168:	0b200004 	bleq	802180 <_Min_Stack_Size+0x801d80>
    216c:	0000029f 	muleq	r0, pc, r2	; <UNPREDICTABLE>
    2170:	03050f8b 	movweq	r0, #24459	; 0x5f8b
    2174:	0800272c 	stmdaeq	r0, {r2, r3, r5, r8, r9, sl, sp}
    2178:	0002bf0b 	andeq	fp, r2, fp, lsl #30
    217c:	050f8c00 	streq	r8, [pc, #-3072]	; 1584 <_Min_Stack_Size+0x1184>
    2180:	00000003 	andeq	r0, r0, r3
    2184:	0a7b1000 	beq	1ec618c <_Min_Stack_Size+0x1ec5d8c>
    2188:	dd010000 	stcle	0, cr0, [r1, #-0]
    218c:	00228406 	eoreq	r8, r2, r6, lsl #8
    2190:	00010008 	andeq	r0, r1, r8
    2194:	209c0100 	addscs	r0, ip, r0, lsl #2
    2198:	11000005 	tstne	r0, r5
    219c:	00706d74 	rsbseq	r6, r0, r4, ror sp
    21a0:	9a0cdf01 	bls	339dac <_Min_Stack_Size+0x3399ac>
    21a4:	02000000 	andeq	r0, r0, #0
    21a8:	b4097091 	strlt	r7, [r9], #-145	; 0xffffff6f
    21ac:	1500000d 	strne	r0, [r0, #-13]
    21b0:	0000009a 	muleq	r0, sl, r0
    21b4:	09749102 	ldmdbeq	r4!, {r1, r8, ip, pc}^
    21b8:	00000da1 	andeq	r0, r0, r1, lsr #27
    21bc:	00009a21 	andeq	r9, r0, r1, lsr #20
    21c0:	6c910200 	lfmvs	f0, 4, [r1], {0}
    21c4:	000d9209 	andeq	r9, sp, r9, lsl #4
    21c8:	009a2b00 	addseq	r2, sl, r0, lsl #22
    21cc:	91020000 	mrsls	r0, (UNDEF: 2)
    21d0:	0d9c0968 	vldreq.16	s0, [ip, #208]	; 0xd0	; <UNPREDICTABLE>
    21d4:	9a3a0000 	bls	e821dc <_Min_Stack_Size+0xe81ddc>
    21d8:	02000000 	andeq	r0, r0, #0
    21dc:	12006491 	andne	r6, r0, #-1862270976	; 0x91000000
    21e0:	00000d87 	andeq	r0, r0, r7, lsl #27
    21e4:	6006a801 	andvs	sl, r6, r1, lsl #16
    21e8:	24080022 	strcs	r0, [r8], #-34	; 0xffffffde
    21ec:	01000000 	mrseq	r0, (UNDEF: 0)
    21f0:	001e009c 	mulseq	lr, ip, r0
    21f4:	00020000 	andeq	r0, r2, r0
    21f8:	000006aa 	andeq	r0, r0, sl, lsr #13
    21fc:	14ed0104 	strbtne	r0, [sp], #260	; 0x104
    2200:	00000000 	andeq	r0, r0, r0
    2204:	0e1e0000 	cdpeq	0, 1, cr0, cr14, cr0, {0}
    2208:	0afa0000 	beq	ffe82210 <_estack+0xdfe72210>
    220c:	0e6d0000 	cdpeq	0, 6, cr0, cr13, cr0, {0}
    2210:	80010000 	andhi	r0, r1, r0
    2214:	00000021 	andeq	r0, r0, r1, lsr #32
    2218:	04010005 	streq	r0, [r1], #-5
    221c:	000006bc 			; <UNDEFINED> instruction: 0x000006bc
    2220:	00159c01 	andseq	r9, r5, r1, lsl #24
    2224:	00019400 	andeq	r9, r1, r0, lsl #8
    2228:	7901a008 	stmdbvc	r1, {r3, sp, pc}
    222c:	8100000e 	tsthi	r0, lr
    2230:	d100000e 	tstle	r0, lr
    2234:	0100000e 	tsteq	r0, lr
    2238:	00032480 	andeq	r2, r3, r0, lsl #9
    223c:	01000500 	tsteq	r0, r0, lsl #10
    2240:	0006d004 	andeq	sp, r6, r4
    2244:	0f1b0700 	svceq	0x001b0700
    2248:	c81d0000 	ldmdagt	sp, {}	; <UNPREDICTABLE>
    224c:	81000013 	tsthi	r0, r3, lsl r0
    2250:	4000000e 	andmi	r0, r0, lr
    2254:	00000001 	andeq	r0, r0, r1
    2258:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    225c:	02000016 	andeq	r0, r0, #22
    2260:	0f150404 	svceq	0x00150404
    2264:	04080000 	streq	r0, [r8], #-0
    2268:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    226c:	07040200 	streq	r0, [r4, -r0, lsl #4]
    2270:	00000862 	andeq	r0, r0, r2, ror #16
    2274:	81050802 	tsthi	r5, r2, lsl #16
    2278:	02000006 	andeq	r0, r0, #6
    227c:	07d50408 	ldrbeq	r0, [r5, r8, lsl #8]
    2280:	01020000 	mrseq	r0, (UNDEF: 2)
    2284:	0002e306 	andeq	lr, r2, r6, lsl #6
    2288:	08010200 	stmdaeq	r1, {r9}
    228c:	000002e1 	andeq	r0, r0, r1, ror #5
    2290:	d8050202 	stmdale	r5, {r1, r9}
    2294:	02000009 	andeq	r0, r0, #9
    2298:	0abc0702 	beq	fef03ea8 <_estack+0xdeef3ea8>
    229c:	04020000 	streq	r0, [r2], #-0
    22a0:	00068605 	andeq	r8, r6, r5, lsl #12
    22a4:	07040200 	streq	r0, [r4, -r0, lsl #4]
    22a8:	0000085d 	andeq	r0, r0, sp, asr r8
    22ac:	58070802 	stmdapl	r7, {r1, fp}
    22b0:	02000008 	andeq	r0, r0, #8
    22b4:	02ea0801 	rsceq	r0, sl, #65536	; 0x10000
    22b8:	10090000 	andne	r0, r9, r0
    22bc:	07000013 	smladeq	r0, r3, r0, r0
    22c0:	00005001 	andeq	r5, r0, r1
    22c4:	06170200 	ldreq	r0, [r7], -r0, lsl #4
    22c8:	0000020e 	andeq	r0, r0, lr, lsl #4
    22cc:	000fd601 	andeq	sp, pc, r1, lsl #12
    22d0:	b8010000 	stmdalt	r1, {}	; <UNPREDICTABLE>
    22d4:	01000013 	tsteq	r0, r3, lsl r0
    22d8:	0010d801 	andseq	sp, r0, r1, lsl #16
    22dc:	86010200 	strhi	r0, [r1], -r0, lsl #4
    22e0:	03000011 	movweq	r0, #17
    22e4:	00132901 	andseq	r2, r3, r1, lsl #18
    22e8:	0b010400 	bleq	432f0 <_Min_Stack_Size+0x42ef0>
    22ec:	05000014 	streq	r0, [r0, #-20]	; 0xffffffec
    22f0:	00133f01 	andseq	r3, r3, r1, lsl #30
    22f4:	a0010600 	andge	r0, r1, r0, lsl #12
    22f8:	07000011 	smladeq	r0, r1, r0, r0
    22fc:	0012c701 	andseq	ip, r2, r1, lsl #14
    2300:	d5010800 	strle	r0, [r1, #-2048]	; 0xfffff800
    2304:	09000012 	stmdbeq	r0, {r1, r4}
    2308:	0012e301 	andseq	lr, r2, r1, lsl #6
    230c:	fa010a00 	blx	44b14 <_Min_Stack_Size+0x44714>
    2310:	0b000011 	bleq	235c <_Min_Stack_Size+0x1f5c>
    2314:	0011ea01 	andseq	lr, r1, r1, lsl #20
    2318:	f2010c00 			; <UNDEFINED> instruction: 0xf2010c00
    231c:	0d00000f 	stceq	0, cr0, [r0, #-60]	; 0xffffffc4
    2320:	00100b01 	andseq	r0, r0, r1, lsl #22
    2324:	d3010e00 	movwle	r0, #7680	; 0x1e00
    2328:	0f000011 	svceq	0x00000011
    232c:	00138201 	andseq	r8, r3, r1, lsl #4
    2330:	ff011000 			; <UNDEFINED> instruction: 0xff011000
    2334:	11000012 	tstne	r0, r2, lsl r0
    2338:	00137301 	andseq	r7, r3, r1, lsl #6
    233c:	9a011200 	bls	46b44 <_Min_Stack_Size+0x46744>
    2340:	13000010 	movwne	r0, #16
    2344:	00104501 	andseq	r4, r0, r1, lsl #10
    2348:	ff011400 			; <UNDEFINED> instruction: 0xff011400
    234c:	1500000f 	strne	r0, [r0, #-15]
    2350:	00128001 	andseq	r8, r2, r1
    2354:	7c011600 	stcvc	6, cr1, [r1], {-0}
    2358:	17000010 	smladne	r0, r0, r0, r0
    235c:	000eec01 	andeq	lr, lr, r1, lsl #24
    2360:	65011800 	strvs	r1, [r1, #-2048]	; 0xfffff800
    2364:	19000013 	stmdbne	r0, {r0, r1, r4}
    2368:	0011af01 	andseq	sl, r1, r1, lsl #30
    236c:	98011a00 	stmdals	r1, {r9, fp, ip}
    2370:	1b000012 	blne	23c0 <_Min_Stack_Size+0x1fc0>
    2374:	00105001 	andseq	r5, r0, r1
    2378:	6b011c00 	blvs	49380 <_Min_Stack_Size+0x48f80>
    237c:	1d000011 	stcne	0, cr0, [r0, #-68]	; 0xffffffbc
    2380:	0010ca01 	andseq	ip, r0, r1, lsl #20
    2384:	f1011e00 			; <UNDEFINED> instruction: 0xf1011e00
    2388:	1f000012 	svcne	0x00000012
    238c:	00134d01 	andseq	r4, r3, r1, lsl #26
    2390:	8e012000 	cdphi	0, 0, cr2, cr1, cr0, {0}
    2394:	21000013 	tstcs	r0, r3, lsl r0
    2398:	00139c01 	andseq	r9, r3, r1, lsl #24
    239c:	c6012200 	strgt	r2, [r1], -r0, lsl #4
    23a0:	23000011 	movwcs	r0, #17
    23a4:	00112f01 	andseq	r2, r1, r1, lsl #30
    23a8:	5f012400 	svcpl	0x00012400
    23ac:	25000010 	strcs	r0, [r0, #-16]
    23b0:	00119301 	andseq	r9, r1, r1, lsl #6
    23b4:	18012600 	stmdane	r1, {r9, sl, sp}
    23b8:	27000010 	smladcs	r0, r0, r0, r0
    23bc:	00131c01 	andseq	r1, r3, r1, lsl #24
    23c0:	e4012800 	str	r2, [r1], #-2048	; 0xfffff800
    23c4:	29000010 	stmdbcs	r0, {r4}
    23c8:	0010f301 	andseq	pc, r0, r1, lsl #6
    23cc:	02012a00 	andeq	r2, r1, #0, 20
    23d0:	2b000011 	blcs	241c <_Min_Stack_Size+0x201c>
    23d4:	00111101 	andseq	r1, r1, r1, lsl #2
    23d8:	bb012c00 	bllt	4d3e0 <_Min_Stack_Size+0x4cfe0>
    23dc:	2d000010 	stccs	0, cr0, [r0, #-64]	; 0xffffffc0
    23e0:	00112001 	andseq	r2, r1, r1
    23e4:	b8012e00 	stmdalt	r1, {r9, sl, fp, sp}
    23e8:	2f000012 	svccs	0x00000012
    23ec:	00113e01 	andseq	r3, r1, r1, lsl #28
    23f0:	4d013000 	stcmi	0, cr3, [r1, #-0]
    23f4:	31000011 	tstcc	r0, r1, lsl r0
    23f8:	000fe001 	andeq	lr, pc, r1
    23fc:	20013200 	andcs	r3, r1, r0, lsl #4
    2400:	33000012 	movwcc	r0, #18
    2404:	00123001 	andseq	r3, r2, r1
    2408:	40013400 	andmi	r3, r1, r0, lsl #8
    240c:	35000012 	strcc	r0, [r0, #-18]	; 0xffffffee
    2410:	0010a901 	andseq	sl, r0, r1, lsl #18
    2414:	50013600 	andpl	r3, r1, r0, lsl #12
    2418:	37000012 	smladcc	r0, r2, r0, r0
    241c:	00126001 	andseq	r6, r2, r1
    2420:	70013800 	andvc	r3, r1, r0, lsl #16
    2424:	39000012 	stmdbcc	r0, {r1, r4}
    2428:	00106f01 	andseq	r6, r0, r1, lsl #30
    242c:	28013a00 	stmdacs	r1, {r9, fp, ip, sp}
    2430:	3b000010 	blcc	2478 <_Min_Stack_Size+0x2078>
    2434:	00115c01 	andseq	r5, r1, r1, lsl #24
    2438:	fc013c00 	stc2	12, cr3, [r1], {-0}
    243c:	3d00000e 	stccc	0, cr0, [r0, #-56]	; 0xffffffc8
    2440:	00128b01 	andseq	r8, r2, r1, lsl #22
    2444:	0a003e00 	beq	11c4c <_Min_Stack_Size+0x1184c>
    2448:	00001089 	andeq	r1, r0, r9, lsl #1
    244c:	026b0202 	rsbeq	r0, fp, #536870912	; 0x20000000
    2450:	00023508 	andeq	r3, r2, r8, lsl #10
    2454:	11810400 	orrne	r0, r1, r0, lsl #8
    2458:	02700000 	rsbseq	r0, r0, #0
    245c:	00000081 	andeq	r0, r0, r1, lsl #1
    2460:	10b60400 	adcsne	r0, r6, r0, lsl #8
    2464:	02710000 	rsbseq	r0, r1, #0
    2468:	00000081 	andeq	r0, r0, r1, lsl #1
    246c:	0e050001 	cdpeq	0, 0, cr0, cr5, cr1, {0}
    2470:	0b000002 	bleq	2480 <_Min_Stack_Size+0x2080>
    2474:	00000235 	andeq	r0, r0, r5, lsr r2
    2478:	0000024a 	andeq	r0, r0, sl, asr #4
    247c:	0000340c 	andeq	r3, r0, ip, lsl #8
    2480:	05001100 	streq	r1, [r0, #-256]	; 0xffffff00
    2484:	0000023a 	andeq	r0, r0, sl, lsr r2
    2488:	0012070d 	andseq	r0, r2, sp, lsl #14
    248c:	02740200 	rsbseq	r0, r4, #0, 4
    2490:	00024a26 	andeq	r4, r2, r6, lsr #20
    2494:	3d3a2400 	cfldrscc	mvf2, [sl, #-0]
    2498:	3d0f3d0a 	stccc	13, cr3, [pc, #-40]	; 2478 <_Min_Stack_Size+0x2078>
    249c:	3d323d24 	ldccc	13, cr3, [r2, #-144]!	; 0xffffff70
    24a0:	3d053d02 	stccc	13, cr3, [r5, #-8]
    24a4:	3d0d3d13 	stccc	13, cr3, [sp, #-76]	; 0xffffffb4
    24a8:	3d233d0c 	stccc	13, cr3, [r3, #-48]!	; 0xffffffd0
    24ac:	3d263d11 	stccc	13, cr3, [r6, #-68]!	; 0xffffffbc
    24b0:	3d173d01 	ldccc	13, cr3, [r7, #-4]
    24b4:	3d093d08 	stccc	13, cr3, [r9, #-32]	; 0xffffffe0
    24b8:	e3030000 	movw	r0, #12288	; 0x3000
    24bc:	84000011 	strhi	r0, [r0], #-17	; 0xffffffef
    24c0:	00003b0f 	andeq	r3, r0, pc, lsl #22
    24c4:	11e20300 	mvnne	r0, r0, lsl #6
    24c8:	16850000 	strne	r0, [r5], r0
    24cc:	00000073 	andeq	r0, r0, r3, ror r0
    24d0:	00121903 	andseq	r1, r2, r3, lsl #18
    24d4:	26109300 	ldrcs	r9, [r0], -r0, lsl #6
    24d8:	02000000 	andeq	r0, r0, #0
    24dc:	0f0d0308 	svceq	0x000d0308
    24e0:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    24e4:	0007da04 	andeq	sp, r7, r4, lsl #20
    24e8:	03100200 	tsteq	r0, #0, 4
    24ec:	000012a9 	andeq	r1, r0, r9, lsr #5
    24f0:	000edf0e 	andeq	sp, lr, lr, lsl #30
    24f4:	033b0100 	teqeq	fp, #0, 2
    24f8:	000013aa 	andeq	r1, r0, sl, lsr #7
    24fc:	0000028c 	andeq	r0, r0, ip, lsl #5
    2500:	000002d1 	ldrdeq	r0, [r0], -r1
    2504:	0002970f 	andeq	r9, r2, pc, lsl #14
    2508:	01100000 	tsteq	r0, r0
    250c:	01000014 	tsteq	r0, r4, lsl r0
    2510:	810105cf 	smlabthi	r1, pc, r5, r0	; <UNPREDICTABLE>
    2514:	d6000002 	strle	r0, [r0], -r2
    2518:	2c080023 	stccs	0, cr0, [r8], {35}	; 0x23
    251c:	01000000 	mrseq	r0, (UNDEF: 0)
    2520:	0061119c 	mlseq	r1, ip, r1, r1
    2524:	1305cf01 	movwne	ip, #24321	; 0x5f01
    2528:	00000297 	muleq	r0, r7, r2
    252c:	00000014 	andeq	r0, r0, r4, lsl r0
    2530:	0000000c 	andeq	r0, r0, ip
    2534:	0023ee12 	eoreq	lr, r3, r2, lsl lr
    2538:	0002b708 	andeq	fp, r2, r8, lsl #14
    253c:	00031200 	andeq	r1, r3, r0, lsl #4
    2540:	50010600 	andpl	r0, r1, r0, lsl #12
    2544:	a503a305 	strge	sl, [r3, #-773]	; 0xfffffcfb
    2548:	13002600 	movwne	r2, #1536	; 0x600
    254c:	080023fa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r8, r9, sp}
    2550:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    2554:	06500106 	ldrbeq	r0, [r0], -r6, lsl #2
    2558:	00a503a3 	adceq	r0, r5, r3, lsr #7
    255c:	00001f26 	andeq	r1, r0, r6, lsr #30
    2560:	00039b00 	andeq	r9, r3, r0, lsl #22
    2564:	01000500 	tsteq	r0, r0, lsl #10
    2568:	0007e504 	andeq	lr, r7, r4, lsl #10
    256c:	0f1b0900 	svceq	0x001b0900
    2570:	c81d0000 	ldmdagt	sp, {}	; <UNPREDICTABLE>
    2574:	81000013 	tsthi	r0, r3, lsl r0
    2578:	5300000e 	movwpl	r0, #14
    257c:	00000001 	andeq	r0, r0, r1
    2580:	cc000000 	stcgt	0, cr0, [r0], {-0}
    2584:	02000016 	andeq	r0, r0, #22
    2588:	07da0408 	ldrbeq	r0, [sl, r8, lsl #8]
    258c:	04020000 	streq	r0, [r2], #-0
    2590:	00086207 	andeq	r6, r8, r7, lsl #4
    2594:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    2598:	00000f15 	andeq	r0, r0, r5, lsl pc
    259c:	6905040a 	stmdbvs	r5, {r1, r3, sl}
    25a0:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    25a4:	06810508 	streq	r0, [r1], r8, lsl #10
    25a8:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    25ac:	0007d504 	andeq	sp, r7, r4, lsl #10
    25b0:	06010200 	streq	r0, [r1], -r0, lsl #4
    25b4:	000002e3 	andeq	r0, r0, r3, ror #5
    25b8:	e1080102 	tst	r8, r2, lsl #2
    25bc:	02000002 	andeq	r0, r0, #2
    25c0:	09d80502 	ldmibeq	r8, {r1, r8, sl}^
    25c4:	02020000 	andeq	r0, r2, #0
    25c8:	000abc07 	andeq	fp, sl, r7, lsl #24
    25cc:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    25d0:	00000686 	andeq	r0, r0, r6, lsl #13
    25d4:	5d070402 	cfstrspl	mvf0, [r7, #-8]
    25d8:	02000008 	andeq	r0, r0, #8
    25dc:	08580708 	ldmdaeq	r8, {r3, r8, r9, sl}^
    25e0:	01020000 	mrseq	r0, (UNDEF: 2)
    25e4:	0002ea08 	andeq	lr, r2, r8, lsl #20
    25e8:	13100b00 	tstne	r0, #0, 22
    25ec:	01070000 	mrseq	r0, (UNDEF: 7)
    25f0:	00000057 	andeq	r0, r0, r7, asr r0
    25f4:	15061702 	strne	r1, [r6, #-1794]	; 0xfffff8fe
    25f8:	01000002 	tsteq	r0, r2
    25fc:	00000fd6 	ldrdeq	r0, [r0], -r6
    2600:	13b80100 			; <UNDEFINED> instruction: 0x13b80100
    2604:	01010000 	mrseq	r0, (UNDEF: 1)
    2608:	000010d8 	ldrdeq	r1, [r0], -r8
    260c:	11860102 	orrne	r0, r6, r2, lsl #2
    2610:	01030000 	mrseq	r0, (UNDEF: 3)
    2614:	00001329 	andeq	r1, r0, r9, lsr #6
    2618:	140b0104 	strne	r0, [fp], #-260	; 0xfffffefc
    261c:	01050000 	mrseq	r0, (UNDEF: 5)
    2620:	0000133f 	andeq	r1, r0, pc, lsr r3
    2624:	11a00106 	lslne	r0, r6, #2
    2628:	01070000 	mrseq	r0, (UNDEF: 7)
    262c:	000012c7 	andeq	r1, r0, r7, asr #5
    2630:	12d50108 	sbcsne	r0, r5, #8, 2
    2634:	01090000 	mrseq	r0, (UNDEF: 9)
    2638:	000012e3 	andeq	r1, r0, r3, ror #5
    263c:	11fa010a 	mvnsne	r0, sl, lsl #2
    2640:	010b0000 	mrseq	r0, (UNDEF: 11)
    2644:	000011ea 	andeq	r1, r0, sl, ror #3
    2648:	0ff2010c 	svceq	0x00f2010c
    264c:	010d0000 	mrseq	r0, (UNDEF: 13)
    2650:	0000100b 	andeq	r1, r0, fp
    2654:	11d3010e 	bicsne	r0, r3, lr, lsl #2
    2658:	010f0000 	mrseq	r0, CPSR
    265c:	00001382 	andeq	r1, r0, r2, lsl #7
    2660:	12ff0110 	rscsne	r0, pc, #16, 2
    2664:	01110000 	tsteq	r1, r0
    2668:	00001373 	andeq	r1, r0, r3, ror r3
    266c:	109a0112 	addsne	r0, sl, r2, lsl r1
    2670:	01130000 	tsteq	r3, r0
    2674:	00001045 	andeq	r1, r0, r5, asr #32
    2678:	0fff0114 	svceq	0x00ff0114
    267c:	01150000 	tsteq	r5, r0
    2680:	00001280 	andeq	r1, r0, r0, lsl #5
    2684:	107c0116 	rsbsne	r0, ip, r6, lsl r1
    2688:	01170000 	tsteq	r7, r0
    268c:	00000eec 	andeq	r0, r0, ip, ror #29
    2690:	13650118 	cmnne	r5, #24, 2
    2694:	01190000 	tsteq	r9, r0
    2698:	000011af 	andeq	r1, r0, pc, lsr #3
    269c:	1298011a 	addsne	r0, r8, #-2147483642	; 0x80000006
    26a0:	011b0000 	tsteq	fp, r0
    26a4:	00001050 	andeq	r1, r0, r0, asr r0
    26a8:	116b011c 	cmnne	fp, ip, lsl r1
    26ac:	011d0000 	tsteq	sp, r0
    26b0:	000010ca 	andeq	r1, r0, sl, asr #1
    26b4:	12f1011e 	rscsne	r0, r1, #-2147483641	; 0x80000007
    26b8:	011f0000 	tsteq	pc, r0
    26bc:	0000134d 	andeq	r1, r0, sp, asr #6
    26c0:	138e0120 	orrne	r0, lr, #32, 2
    26c4:	01210000 			; <UNDEFINED> instruction: 0x01210000
    26c8:	0000139c 	muleq	r0, ip, r3
    26cc:	11c60122 	bicne	r0, r6, r2, lsr #2
    26d0:	01230000 			; <UNDEFINED> instruction: 0x01230000
    26d4:	0000112f 	andeq	r1, r0, pc, lsr #2
    26d8:	105f0124 	subsne	r0, pc, r4, lsr #2
    26dc:	01250000 			; <UNDEFINED> instruction: 0x01250000
    26e0:	00001193 	muleq	r0, r3, r1
    26e4:	10180126 	andsne	r0, r8, r6, lsr #2
    26e8:	01270000 			; <UNDEFINED> instruction: 0x01270000
    26ec:	0000131c 	andeq	r1, r0, ip, lsl r3
    26f0:	10e40128 	rscne	r0, r4, r8, lsr #2
    26f4:	01290000 			; <UNDEFINED> instruction: 0x01290000
    26f8:	000010f3 	strdeq	r1, [r0], -r3
    26fc:	1102012a 	tstne	r2, sl, lsr #2
    2700:	012b0000 			; <UNDEFINED> instruction: 0x012b0000
    2704:	00001111 	andeq	r1, r0, r1, lsl r1
    2708:	10bb012c 	adcsne	r0, fp, ip, lsr #2
    270c:	012d0000 			; <UNDEFINED> instruction: 0x012d0000
    2710:	00001120 	andeq	r1, r0, r0, lsr #2
    2714:	12b8012e 	adcsne	r0, r8, #-2147483637	; 0x8000000b
    2718:	012f0000 			; <UNDEFINED> instruction: 0x012f0000
    271c:	0000113e 	andeq	r1, r0, lr, lsr r1
    2720:	114d0130 	cmpne	sp, r0, lsr r1
    2724:	01310000 	teqeq	r1, r0
    2728:	00000fe0 	andeq	r0, r0, r0, ror #31
    272c:	12200132 	eorne	r0, r0, #-2147483636	; 0x8000000c
    2730:	01330000 	teqeq	r3, r0
    2734:	00001230 	andeq	r1, r0, r0, lsr r2
    2738:	12400134 	subne	r0, r0, #52, 2
    273c:	01350000 	teqeq	r5, r0
    2740:	000010a9 	andeq	r1, r0, r9, lsr #1
    2744:	12500136 	subsne	r0, r0, #-2147483635	; 0x8000000d
    2748:	01370000 	teqeq	r7, r0
    274c:	00001260 	andeq	r1, r0, r0, ror #4
    2750:	12700138 	rsbsne	r0, r0, #56, 2
    2754:	01390000 	teqeq	r9, r0
    2758:	0000106f 	andeq	r1, r0, pc, rrx
    275c:	1028013a 	eorne	r0, r8, sl, lsr r1
    2760:	013b0000 	teqeq	fp, r0
    2764:	0000115c 	andeq	r1, r0, ip, asr r1
    2768:	0efc013c 	mrceq	1, 7, r0, cr12, cr12, {1}
    276c:	013d0000 	teqeq	sp, r0
    2770:	0000128b 	andeq	r1, r0, fp, lsl #5
    2774:	890c003e 	stmdbhi	ip, {r1, r2, r3, r4, r5}
    2778:	02000010 	andeq	r0, r0, #16
    277c:	08026b02 	stmdaeq	r2, {r1, r8, r9, fp, sp, lr}
    2780:	0000023c 	andeq	r0, r0, ip, lsr r2
    2784:	00118108 	andseq	r8, r1, r8, lsl #2
    2788:	88027000 	stmdahi	r2, {ip, sp, lr}
    278c:	00000000 	andeq	r0, r0, r0
    2790:	0010b608 	andseq	fp, r0, r8, lsl #12
    2794:	88027100 	stmdahi	r2, {r8, ip, sp, lr}
    2798:	01000000 	mrseq	r0, (UNDEF: 0)
    279c:	02150500 	andseq	r0, r5, #0, 10
    27a0:	3c0d0000 	stccc	0, cr0, [sp], {-0}
    27a4:	51000002 	tstpl	r0, r2
    27a8:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    27ac:	0000002d 	andeq	r0, r0, sp, lsr #32
    27b0:	41050011 	tstmi	r5, r1, lsl r0
    27b4:	0f000002 	svceq	0x00000002
    27b8:	00001207 	andeq	r1, r0, r7, lsl #4
    27bc:	26027402 	strcs	r7, [r2], -r2, lsl #8
    27c0:	00000251 	andeq	r0, r0, r1, asr r2
    27c4:	0a3d3a24 	beq	f5105c <_Min_Stack_Size+0xf50c5c>
    27c8:	243d0f3d 	ldrtcs	r0, [sp], #-3901	; 0xfffff0c3
    27cc:	023d323d 	eorseq	r3, sp, #-805306365	; 0xd0000003
    27d0:	133d053d 	teqne	sp, #255852544	; 0xf400000
    27d4:	0c3d0d3d 	ldceq	13, cr0, [sp], #-244	; 0xffffff0c
    27d8:	113d233d 	teqne	sp, sp, lsr r3
    27dc:	013d263d 	teqeq	sp, sp, lsr r6
    27e0:	083d173d 	ldmdaeq	sp!, {r0, r2, r3, r4, r5, r8, r9, sl, ip}
    27e4:	003d093d 	eorseq	r0, sp, sp, lsr r9
    27e8:	144a0600 	strbne	r0, [sl], #-1536	; 0xfffffa00
    27ec:	16810000 	strne	r0, [r1], r0
    27f0:	0000002d 	andeq	r0, r0, sp, lsr #32
    27f4:	00028805 	andeq	r8, r2, r5, lsl #16
    27f8:	11e20600 	mvnne	r0, r0, lsl #12
    27fc:	16850000 	strne	r0, [r5], r0
    2800:	0000007a 	andeq	r0, r0, sl, ror r0
    2804:	00121906 	andseq	r1, r2, r6, lsl #18
    2808:	34109300 	ldrcc	r9, [r0], #-768	; 0xfffffd00
    280c:	02000000 	andeq	r0, r0, #0
    2810:	0f0d0308 	svceq	0x000d0308
    2814:	1b060000 	blne	18281c <_Min_Stack_Size+0x18241c>
    2818:	97000014 	smladls	r0, r4, r0, r0
    281c:	00002610 	andeq	r2, r0, r0, lsl r6
    2820:	02b50500 	adcseq	r0, r5, #0, 10
    2824:	10020000 	andne	r0, r2, r0
    2828:	0012a903 	andseq	sl, r2, r3, lsl #18
    282c:	0edf1000 	cdpeq	0, 13, cr1, cr15, cr0, {0}
    2830:	8f010000 	svchi	0x00010000
    2834:	02980105 	addseq	r0, r8, #1073741825	; 0x40000001
    2838:	24040000 	strcs	r0, [r4], #-0
    283c:	00400800 	subeq	r0, r0, r0, lsl #16
    2840:	9c010000 	stcls	0, cr0, [r1], {-0}
    2844:	00000371 	andeq	r0, r0, r1, ror r3
    2848:	01006111 	tsteq	r0, r1, lsl r1
    284c:	a316058f 	tstge	r6, #599785472	; 0x23c00000
    2850:	48000002 	stmdami	r0, {r1}
    2854:	44000000 	strmi	r0, [r0], #-0
    2858:	07000000 	streq	r0, [r0, -r0]
    285c:	00616664 	rsbeq	r6, r1, r4, ror #12
    2860:	02c00595 	sbceq	r0, r0, #624951296	; 0x25400000
    2864:	005f0000 	subseq	r0, pc, r0
    2868:	005d0000 	subseq	r0, sp, r0
    286c:	68070000 	stmdavs	r7, {}	; <UNPREDICTABLE>
    2870:	059a0069 	ldreq	r0, [sl, #105]	; 0x69
    2874:	00000293 	muleq	r0, r3, r2
    2878:	00000073 	andeq	r0, r0, r3, ror r0
    287c:	0000006d 	andeq	r0, r0, sp, rrx
    2880:	006f6c07 	rsbeq	r6, pc, r7, lsl #24
    2884:	0293059f 	addseq	r0, r3, #666894336	; 0x27c00000
    2888:	008c0000 	addeq	r0, ip, r0
    288c:	00880000 	addeq	r0, r8, r0
    2890:	0a030000 	beq	c2898 <_Min_Stack_Size+0xc2498>
    2894:	71080024 	tstvc	r8, r4, lsr #32
    2898:	03000003 	movweq	r0, #3
    289c:	08002416 	stmdaeq	r0, {r1, r2, r4, sl, sp}
    28a0:	0000037a 	andeq	r0, r0, sl, ror r3
    28a4:	00241a03 	eoreq	r1, r4, r3, lsl #20
    28a8:	00038308 	andeq	r8, r3, r8, lsl #6
    28ac:	24200300 	strtcs	r0, [r0], #-768	; 0xfffffd00
    28b0:	038c0800 	orreq	r0, ip, #0, 16
    28b4:	28030000 	stmdacs	r3, {}	; <UNPREDICTABLE>
    28b8:	7a080024 	bvc	202950 <_Min_Stack_Size+0x202550>
    28bc:	03000003 	movweq	r0, #3
    28c0:	08002434 	stmdaeq	r0, {r2, r4, r5, sl, sp}
    28c4:	00000395 	muleq	r0, r5, r3
    28c8:	00243803 	eoreq	r3, r4, r3, lsl #16
    28cc:	00038308 	andeq	r8, r3, r8, lsl #6
    28d0:	52040000 	andpl	r0, r4, #0
    28d4:	52000014 	andpl	r0, r0, #20
    28d8:	04000014 	streq	r0, [r0], #-20	; 0xffffffec
    28dc:	0000143d 	andeq	r1, r0, sp, lsr r4
    28e0:	0000143d 	andeq	r1, r0, sp, lsr r4
    28e4:	00142204 	andseq	r2, r4, r4, lsl #4
    28e8:	00142200 	andseq	r2, r4, r0, lsl #4
    28ec:	14300400 	ldrtne	r0, [r0], #-1024	; 0xfffffc00
    28f0:	14300000 	ldrtne	r0, [r0], #-0
    28f4:	5e040000 	cdppl	0, 0, cr0, cr4, cr0, {0}
    28f8:	5e000014 	mcrpl	0, 0, r0, cr0, cr4, {0}
    28fc:	00000014 	andeq	r0, r0, r4, lsl r0
    2900:	000006e0 	andeq	r0, r0, r0, ror #13
    2904:	04010005 	streq	r0, [r1], #-5
    2908:	000008e8 	andeq	r0, r0, r8, ror #17
    290c:	0014a70e 	andseq	sl, r4, lr, lsl #14
    2910:	13c81d00 	bicne	r1, r8, #0, 26
    2914:	0e810000 	cdpeq	0, 8, cr0, cr1, cr0, {0}
    2918:	01c30000 	biceq	r0, r3, r0
    291c:	00000000 	andeq	r0, r0, r0
    2920:	17990000 	ldrne	r0, [r9, r0]
    2924:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    2928:	00085807 	andeq	r5, r8, r7, lsl #16
    292c:	05040f00 	streq	r0, [r4, #-3840]	; 0xfffff100
    2930:	00746e69 	rsbseq	r6, r4, r9, ror #28
    2934:	62070403 	andvs	r0, r7, #50331648	; 0x3000000
    2938:	03000008 	movweq	r0, #8
    293c:	06810508 	streq	r0, [r1], r8, lsl #10
    2940:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    2944:	0007d504 	andeq	sp, r7, r4, lsl #10
    2948:	06010300 	streq	r0, [r1], -r0, lsl #6
    294c:	000002e3 	andeq	r0, r0, r3, ror #5
    2950:	e1080103 	tst	r8, r3, lsl #2
    2954:	03000002 	movweq	r0, #2
    2958:	09d80502 	ldmibeq	r8, {r1, r8, sl}^
    295c:	02030000 	andeq	r0, r3, #0
    2960:	000abc07 	andeq	fp, sl, r7, lsl #24
    2964:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    2968:	00000686 	andeq	r0, r0, r6, lsl #13
    296c:	5d070403 	cfstrspl	mvf0, [r7, #-12]
    2970:	03000008 	movweq	r0, #8
    2974:	02ea0801 	rsceq	r0, sl, #65536	; 0x10000
    2978:	10100000 	andsne	r0, r0, r0
    297c:	07000013 	smladeq	r0, r3, r0, r0
    2980:	00005001 	andeq	r5, r0, r1
    2984:	06170200 	ldreq	r0, [r7], -r0, lsl #4
    2988:	00000207 	andeq	r0, r0, r7, lsl #4
    298c:	000fd601 	andeq	sp, pc, r1, lsl #12
    2990:	b8010000 	stmdalt	r1, {}	; <UNPREDICTABLE>
    2994:	01000013 	tsteq	r0, r3, lsl r0
    2998:	0010d801 	andseq	sp, r0, r1, lsl #16
    299c:	86010200 	strhi	r0, [r1], -r0, lsl #4
    29a0:	03000011 	movweq	r0, #17
    29a4:	00132901 	andseq	r2, r3, r1, lsl #18
    29a8:	0b010400 	bleq	439b0 <_Min_Stack_Size+0x435b0>
    29ac:	05000014 	streq	r0, [r0, #-20]	; 0xffffffec
    29b0:	00133f01 	andseq	r3, r3, r1, lsl #30
    29b4:	a0010600 	andge	r0, r1, r0, lsl #12
    29b8:	07000011 	smladeq	r0, r1, r0, r0
    29bc:	0012c701 	andseq	ip, r2, r1, lsl #14
    29c0:	d5010800 	strle	r0, [r1, #-2048]	; 0xfffff800
    29c4:	09000012 	stmdbeq	r0, {r1, r4}
    29c8:	0012e301 	andseq	lr, r2, r1, lsl #6
    29cc:	fa010a00 	blx	451d4 <_Min_Stack_Size+0x44dd4>
    29d0:	0b000011 	bleq	2a1c <_Min_Stack_Size+0x261c>
    29d4:	0011ea01 	andseq	lr, r1, r1, lsl #20
    29d8:	f2010c00 			; <UNDEFINED> instruction: 0xf2010c00
    29dc:	0d00000f 	stceq	0, cr0, [r0, #-60]	; 0xffffffc4
    29e0:	00100b01 	andseq	r0, r0, r1, lsl #22
    29e4:	d3010e00 	movwle	r0, #7680	; 0x1e00
    29e8:	0f000011 	svceq	0x00000011
    29ec:	00138201 	andseq	r8, r3, r1, lsl #4
    29f0:	ff011000 			; <UNDEFINED> instruction: 0xff011000
    29f4:	11000012 	tstne	r0, r2, lsl r0
    29f8:	00137301 	andseq	r7, r3, r1, lsl #6
    29fc:	9a011200 	bls	47204 <_Min_Stack_Size+0x46e04>
    2a00:	13000010 	movwne	r0, #16
    2a04:	00104501 	andseq	r4, r0, r1, lsl #10
    2a08:	ff011400 			; <UNDEFINED> instruction: 0xff011400
    2a0c:	1500000f 	strne	r0, [r0, #-15]
    2a10:	00128001 	andseq	r8, r2, r1
    2a14:	7c011600 	stcvc	6, cr1, [r1], {-0}
    2a18:	17000010 	smladne	r0, r0, r0, r0
    2a1c:	000eec01 	andeq	lr, lr, r1, lsl #24
    2a20:	65011800 	strvs	r1, [r1, #-2048]	; 0xfffff800
    2a24:	19000013 	stmdbne	r0, {r0, r1, r4}
    2a28:	0011af01 	andseq	sl, r1, r1, lsl #30
    2a2c:	98011a00 	stmdals	r1, {r9, fp, ip}
    2a30:	1b000012 	blne	2a80 <_Min_Stack_Size+0x2680>
    2a34:	00105001 	andseq	r5, r0, r1
    2a38:	6b011c00 	blvs	49a40 <_Min_Stack_Size+0x49640>
    2a3c:	1d000011 	stcne	0, cr0, [r0, #-68]	; 0xffffffbc
    2a40:	0010ca01 	andseq	ip, r0, r1, lsl #20
    2a44:	f1011e00 			; <UNDEFINED> instruction: 0xf1011e00
    2a48:	1f000012 	svcne	0x00000012
    2a4c:	00134d01 	andseq	r4, r3, r1, lsl #26
    2a50:	8e012000 	cdphi	0, 0, cr2, cr1, cr0, {0}
    2a54:	21000013 	tstcs	r0, r3, lsl r0
    2a58:	00139c01 	andseq	r9, r3, r1, lsl #24
    2a5c:	c6012200 	strgt	r2, [r1], -r0, lsl #4
    2a60:	23000011 	movwcs	r0, #17
    2a64:	00112f01 	andseq	r2, r1, r1, lsl #30
    2a68:	5f012400 	svcpl	0x00012400
    2a6c:	25000010 	strcs	r0, [r0, #-16]
    2a70:	00119301 	andseq	r9, r1, r1, lsl #6
    2a74:	18012600 	stmdane	r1, {r9, sl, sp}
    2a78:	27000010 	smladcs	r0, r0, r0, r0
    2a7c:	00131c01 	andseq	r1, r3, r1, lsl #24
    2a80:	e4012800 	str	r2, [r1], #-2048	; 0xfffff800
    2a84:	29000010 	stmdbcs	r0, {r4}
    2a88:	0010f301 	andseq	pc, r0, r1, lsl #6
    2a8c:	02012a00 	andeq	r2, r1, #0, 20
    2a90:	2b000011 	blcs	2adc <_Min_Stack_Size+0x26dc>
    2a94:	00111101 	andseq	r1, r1, r1, lsl #2
    2a98:	bb012c00 	bllt	4daa0 <_Min_Stack_Size+0x4d6a0>
    2a9c:	2d000010 	stccs	0, cr0, [r0, #-64]	; 0xffffffc0
    2aa0:	00112001 	andseq	r2, r1, r1
    2aa4:	b8012e00 	stmdalt	r1, {r9, sl, fp, sp}
    2aa8:	2f000012 	svccs	0x00000012
    2aac:	00113e01 	andseq	r3, r1, r1, lsl #28
    2ab0:	4d013000 	stcmi	0, cr3, [r1, #-0]
    2ab4:	31000011 	tstcc	r0, r1, lsl r0
    2ab8:	000fe001 	andeq	lr, pc, r1
    2abc:	20013200 	andcs	r3, r1, r0, lsl #4
    2ac0:	33000012 	movwcc	r0, #18
    2ac4:	00123001 	andseq	r3, r2, r1
    2ac8:	40013400 	andmi	r3, r1, r0, lsl #8
    2acc:	35000012 	strcc	r0, [r0, #-18]	; 0xffffffee
    2ad0:	0010a901 	andseq	sl, r0, r1, lsl #18
    2ad4:	50013600 	andpl	r3, r1, r0, lsl #12
    2ad8:	37000012 	smladcc	r0, r2, r0, r0
    2adc:	00126001 	andseq	r6, r2, r1
    2ae0:	70013800 	andvc	r3, r1, r0, lsl #16
    2ae4:	39000012 	stmdbcc	r0, {r1, r4}
    2ae8:	00106f01 	andseq	r6, r0, r1, lsl #30
    2aec:	28013a00 	stmdacs	r1, {r9, fp, ip, sp}
    2af0:	3b000010 	blcc	2b38 <_Min_Stack_Size+0x2738>
    2af4:	00115c01 	andseq	r5, r1, r1, lsl #24
    2af8:	fc013c00 	stc2	12, cr3, [r1], {-0}
    2afc:	3d00000e 	stccc	0, cr0, [r0, #-56]	; 0xffffffc8
    2b00:	00128b01 	andseq	r8, r2, r1, lsl #22
    2b04:	0b003e00 	bleq	1230c <_Min_Stack_Size+0x11f0c>
    2b08:	00001089 	andeq	r1, r0, r9, lsl #1
    2b0c:	026b0202 	rsbeq	r0, fp, #536870912	; 0x20000000
    2b10:	00023208 	andeq	r3, r2, r8, lsl #4
    2b14:	11810800 	orrne	r0, r1, r0, lsl #16
    2b18:	70020000 	andvc	r0, r2, r0
    2b1c:	007a1402 	rsbseq	r1, sl, r2, lsl #8
    2b20:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    2b24:	000010b6 	strheq	r1, [r0], -r6
    2b28:	14027102 	strne	r7, [r2], #-258	; 0xfffffefe
    2b2c:	0000007a 	andeq	r0, r0, sl, ror r0
    2b30:	07090001 	streq	r0, [r9, -r1]
    2b34:	11000002 	tstne	r0, r2
    2b38:	00000232 	andeq	r0, r0, r2, lsr r2
    2b3c:	00000247 	andeq	r0, r0, r7, asr #4
    2b40:	00003412 	andeq	r3, r0, r2, lsl r4
    2b44:	09001100 	stmdbeq	r0, {r8, ip}
    2b48:	00000237 	andeq	r0, r0, r7, lsr r2
    2b4c:	00120713 	andseq	r0, r2, r3, lsl r7
    2b50:	02740200 	rsbseq	r0, r4, #0, 4
    2b54:	00024726 	andeq	r4, r2, r6, lsr #14
    2b58:	3d3a2400 	cfldrscc	mvf2, [sl, #-0]
    2b5c:	3d0f3d0a 	stccc	13, cr3, [pc, #-40]	; 2b3c <_Min_Stack_Size+0x273c>
    2b60:	3d323d24 	ldccc	13, cr3, [r2, #-144]!	; 0xffffff70
    2b64:	3d053d02 	stccc	13, cr3, [r5, #-8]
    2b68:	3d0d3d13 	stccc	13, cr3, [sp, #-76]	; 0xffffffb4
    2b6c:	3d233d0c 	stccc	13, cr3, [r3, #-48]!	; 0xffffffd0
    2b70:	3d263d11 	stccc	13, cr3, [r6, #-68]!	; 0xffffffbc
    2b74:	3d173d01 	ldccc	13, cr3, [r7, #-4]
    2b78:	3d093d08 	stccc	13, cr3, [r9, #-32]	; 0xffffffe0
    2b7c:	4b050000 	blmi	142b84 <_Min_Stack_Size+0x142784>
    2b80:	80000014 	andhi	r0, r0, r4, lsl r0
    2b84:	00002d0f 	andeq	r2, r0, pc, lsl #26
    2b88:	144a0500 	strbne	r0, [sl], #-1280	; 0xfffffb00
    2b8c:	16810000 	strne	r0, [r1], r0
    2b90:	00000034 	andeq	r0, r0, r4, lsr r0
    2b94:	0011e305 	andseq	lr, r1, r5, lsl #6
    2b98:	3b0f8400 	blcc	3e3ba0 <_Min_Stack_Size+0x3e37a0>
    2b9c:	05000000 	streq	r0, [r0, #-0]
    2ba0:	000011e2 	andeq	r1, r0, r2, ror #3
    2ba4:	00261685 	eoreq	r1, r6, r5, lsl #13
    2ba8:	04030000 	streq	r0, [r3], #-0
    2bac:	000f1504 	andeq	r1, pc, r4, lsl #10
    2bb0:	03080300 	movweq	r0, #33536	; 0x8300
    2bb4:	00000f0d 	andeq	r0, r0, sp, lsl #30
    2bb8:	da040803 	ble	104bcc <_Min_Stack_Size+0x1047cc>
    2bbc:	03000007 	movweq	r0, #7
    2bc0:	12a90310 	adcne	r0, r9, #16, 6	; 0x40000000
    2bc4:	6b0b0000 	blvs	2c2bcc <_Min_Stack_Size+0x2c27cc>
    2bc8:	08000014 	stmdaeq	r0, {r2, r4}
    2bcc:	0a01ed03 	beq	7dfe0 <_Min_Stack_Size+0x7dbe0>
    2bd0:	000002f1 	strdeq	r0, [r0], -r1
    2bd4:	776f6c14 			; <UNDEFINED> instruction: 0x776f6c14
    2bd8:	01ed0300 	mvneq	r0, r0, lsl #6
    2bdc:	00027e1a 	andeq	r7, r2, sl, lsl lr
    2be0:	86080000 	strhi	r0, [r8], -r0
    2be4:	03000014 	movweq	r0, #20
    2be8:	7e1f01ed 	mufvc<illegal precision>z	f0, f7, #5.0
    2bec:	04000002 	streq	r0, [r0], #-2
    2bf0:	03081500 	movweq	r1, #34048	; 0x8500
    2bf4:	110901f4 	strdne	r0, [r9, -r4]
    2bf8:	0c000003 	stceq	0, cr0, [r0], {3}
    2bfc:	01f60073 	mvnseq	r0, r3, ror r0
    2c00:	0002c613 	andeq	ip, r2, r3, lsl r6
    2c04:	6c6c0c00 	stclvs	12, cr0, [ip], #-0
    2c08:	0a01f700 	beq	80810 <_Min_Stack_Size+0x80410>
    2c0c:	00000294 	muleq	r0, r4, r2
    2c10:	14741600 	ldrbtne	r1, [r4], #-1536	; 0xfffffa00
    2c14:	f8030000 			; <UNDEFINED> instruction: 0xf8030000
    2c18:	02f10301 	rscseq	r0, r1, #67108864	; 0x4000000
    2c1c:	11090000 	mrsne	r0, (UNDEF: 9)
    2c20:	17000003 	strne	r0, [r0, -r3]
    2c24:	0000149a 	muleq	r0, sl, r4
    2c28:	0103e301 	tsteq	r3, r1, lsl #6
    2c2c:	0000029f 	muleq	r0, pc, r2	; <UNPREDICTABLE>
    2c30:	08002444 	stmdaeq	r0, {r2, r6, sl, sp}
    2c34:	0000027a 	andeq	r0, r0, sl, ror r2
    2c38:	06dd9c01 	ldrbeq	r9, [sp], r1, lsl #24
    2c3c:	6e0a0000 	cdpvs	0, 0, cr0, cr10, cr0, {0}
    2c40:	029f1700 	addseq	r1, pc, #0, 14
    2c44:	00f40000 	rscseq	r0, r4, r0
    2c48:	00d80000 	sbcseq	r0, r8, r0
    2c4c:	640a0000 	strvs	r0, [sl], #-0
    2c50:	029f2200 	addseq	r2, pc, #0, 4
    2c54:	01b70000 			; <UNDEFINED> instruction: 0x01b70000
    2c58:	019f0000 	orrseq	r0, pc, r0
    2c5c:	720a0000 	andvc	r0, sl, #0
    2c60:	dd2e0070 	stcle	0, cr0, [lr, #-448]!	; 0xfffffe40
    2c64:	4e000006 	cdpmi	0, 0, cr0, cr0, cr6, {0}
    2c68:	4a000002 	bmi	2c78 <_Min_Stack_Size+0x2878>
    2c6c:	06000002 	streq	r0, [r0], -r2
    2c70:	e5006e6e 	str	r6, [r0, #-3694]	; 0xfffff192
    2c74:	031e1103 	tsteq	lr, #-1073741824	; 0xc0000000
    2c78:	64060000 	strvs	r0, [r6], #-0
    2c7c:	03e60064 	mvneq	r0, #100	; 0x64
    2c80:	00031e11 	andeq	r1, r3, r1, lsl lr
    2c84:	72720600 	rsbsvc	r0, r2, #0, 12
    2c88:	0b03e700 	bleq	fc890 <_Min_Stack_Size+0xfc490>
    2c8c:	00000311 	andeq	r0, r0, r1, lsl r3
    2c90:	00306404 	eorseq	r6, r0, r4, lsl #8
    2c94:	890a03e8 	stmdbhi	sl, {r3, r5, r6, r7, r8, r9}
    2c98:	77000002 	strvc	r0, [r0, -r2]
    2c9c:	63000002 	movwvs	r0, #2
    2ca0:	04000002 	streq	r0, [r0], #-2
    2ca4:	e8003164 	stmda	r0, {r2, r5, r6, r8, ip, sp}
    2ca8:	02890e03 	addeq	r0, r9, #3, 28	; 0x30
    2cac:	02d40000 	sbcseq	r0, r4, #0
    2cb0:	02c00000 	sbceq	r0, r0, #0
    2cb4:	6e040000 	cdpvs	0, 0, cr0, cr4, cr0, {0}
    2cb8:	03e80030 	mvneq	r0, #48	; 0x30
    2cbc:	00028912 	andeq	r8, r2, r2, lsl r9
    2cc0:	00034000 	andeq	r4, r3, r0
    2cc4:	00031c00 	andeq	r1, r3, r0, lsl #24
    2cc8:	316e0400 	cmncc	lr, r0, lsl #8
    2ccc:	1603e800 	strne	lr, [r3], -r0, lsl #16
    2cd0:	00000289 	andeq	r0, r0, r9, lsl #5
    2cd4:	000003e0 	andeq	r0, r0, r0, ror #7
    2cd8:	000003c0 	andeq	r0, r0, r0, asr #7
    2cdc:	00326e04 	eorseq	r6, r2, r4, lsl #28
    2ce0:	891a03e8 	ldmdbhi	sl, {r3, r5, r6, r7, r8, r9}
    2ce4:	50000002 	andpl	r0, r0, r2
    2ce8:	4e000004 	cdpmi	0, 0, cr0, cr0, cr4, {0}
    2cec:	04000004 	streq	r0, [r0], #-4
    2cf0:	e9003071 	stmdb	r0, {r0, r4, r5, r6, ip, sp}
    2cf4:	02890a03 	addeq	r0, r9, #12288	; 0x3000
    2cf8:	04650000 	strbteq	r0, [r5], #-0
    2cfc:	04590000 	ldrbeq	r0, [r9], #-0
    2d00:	71040000 	mrsvc	r0, (UNDEF: 4)
    2d04:	03e90031 	mvneq	r0, #49	; 0x31
    2d08:	0002890e 	andeq	r8, r2, lr, lsl #18
    2d0c:	0004a700 	andeq	sl, r4, r0, lsl #14
    2d10:	00049500 	andeq	r9, r4, r0, lsl #10
    2d14:	00620400 	rsbeq	r0, r2, r0, lsl #8
    2d18:	890a03ea 	stmdbhi	sl, {r1, r3, r5, r6, r7, r8, r9}
    2d1c:	f1000002 	cps	#2
    2d20:	eb000004 	bl	2d38 <_Min_Stack_Size+0x2938>
    2d24:	04000004 	streq	r0, [r0], #-4
    2d28:	ea006d62 	b	1e2b8 <_Min_Stack_Size+0x1deb8>
    2d2c:	02890d03 	addeq	r0, r9, #3, 26	; 0xc0
    2d30:	05180000 	ldreq	r0, [r8, #-0]
    2d34:	05100000 	ldreq	r0, [r0, #-0]
    2d38:	77060000 	strvc	r0, [r6, -r0]
    2d3c:	04b30077 	ldrteq	r0, [r3], #119	; 0x77
    2d40:	00031e11 	andeq	r1, r3, r1, lsl lr
    2d44:	01660700 	cmneq	r6, r0, lsl #14
    2d48:	04d40000 	ldrbeq	r0, [r4], #0
    2d4c:	81020000 	mrshi	r0, (UNDEF: 2)
    2d50:	26000014 			; <UNDEFINED> instruction: 0x26000014
    2d54:	02890404 	addeq	r0, r9, #4, 8	; 0x4000000
    2d58:	053d0000 	ldreq	r0, [sp, #-0]!
    2d5c:	05390000 	ldreq	r0, [r9, #-0]!
    2d60:	7c020000 	stcvc	0, cr0, [r2], {-0}
    2d64:	26000014 			; <UNDEFINED> instruction: 0x26000014
    2d68:	02890404 	addeq	r0, r9, #4, 8	; 0x4000000
    2d6c:	05510000 	ldrbeq	r0, [r1, #-0]
    2d70:	054d0000 	strbeq	r0, [sp, #-0]
    2d74:	95020000 	strls	r0, [r2, #-0]
    2d78:	26000014 			; <UNDEFINED> instruction: 0x26000014
    2d7c:	02890404 	addeq	r0, r9, #4, 8	; 0x4000000
    2d80:	05670000 	strbeq	r0, [r7, #-0]!
    2d84:	05610000 	strbeq	r0, [r1, #-0]!
    2d88:	90180000 	andsls	r0, r8, r0
    2d8c:	01000014 	tsteq	r0, r4, lsl r0
    2d90:	89040426 	stmdbhi	r4, {r1, r2, r5, sl}
    2d94:	02000002 	andeq	r0, r0, #2
    2d98:	00001574 	andeq	r1, r0, r4, ror r5
    2d9c:	89040426 	stmdbhi	r4, {r1, r2, r5, sl}
    2da0:	86000002 	strhi	r0, [r0], -r2
    2da4:	7c000005 	stcvc	0, cr0, [r0], {5}
    2da8:	02000005 	andeq	r0, r0, #5
    2dac:	0000156f 	andeq	r1, r0, pc, ror #10
    2db0:	89040426 	stmdbhi	r4, {r1, r2, r5, sl}
    2db4:	b5000002 	strlt	r0, [r0, #-2]
    2db8:	b3000005 	movwlt	r0, #5
    2dbc:	04000005 	streq	r0, [r0], #-5
    2dc0:	006d5f5f 	rsbeq	r5, sp, pc, asr pc
    2dc4:	89040426 	stmdbhi	r4, {r1, r2, r5, sl}
    2dc8:	c7000002 	strgt	r0, [r0, -r2]
    2dcc:	c3000005 	movwgt	r0, #5
    2dd0:	00000005 	andeq	r0, r0, r5
    2dd4:	00018407 	andeq	r8, r1, r7, lsl #8
    2dd8:	00056a00 	andeq	r6, r5, r0, lsl #20
    2ddc:	14810200 	strne	r0, [r1], #512	; 0x200
    2de0:	044b0000 	strbeq	r0, [fp], #-0
    2de4:	00028908 	andeq	r8, r2, r8, lsl #18
    2de8:	0005d900 	andeq	sp, r5, r0, lsl #18
    2dec:	0005d700 	andeq	sp, r5, r0, lsl #14
    2df0:	147c0200 	ldrbtne	r0, [ip], #-512	; 0xfffffe00
    2df4:	044b0000 	strbeq	r0, [fp], #-0
    2df8:	00028908 	andeq	r8, r2, r8, lsl #18
    2dfc:	0005ea00 	andeq	lr, r5, r0, lsl #20
    2e00:	0005e200 	andeq	lr, r5, r0, lsl #4
    2e04:	14950200 	ldrne	r0, [r5], #512	; 0x200
    2e08:	044b0000 	strbeq	r0, [fp], #-0
    2e0c:	00028908 	andeq	r8, r2, r8, lsl #18
    2e10:	00061800 	andeq	r1, r6, r0, lsl #16
    2e14:	00061000 	andeq	r1, r6, r0
    2e18:	14900200 	ldrne	r0, [r0], #512	; 0x200
    2e1c:	044b0000 	strbeq	r0, [fp], #-0
    2e20:	00028908 	andeq	r8, r2, r8, lsl #18
    2e24:	00063800 	andeq	r3, r6, r0, lsl #16
    2e28:	00063200 	andeq	r3, r6, r0, lsl #4
    2e2c:	15740200 	ldrbne	r0, [r4, #-512]!	; 0xfffffe00
    2e30:	044b0000 	strbeq	r0, [fp], #-0
    2e34:	00028908 	andeq	r8, r2, r8, lsl #18
    2e38:	00065500 	andeq	r5, r6, r0, lsl #10
    2e3c:	00064d00 	andeq	r4, r6, r0, lsl #26
    2e40:	156f0200 	strbne	r0, [pc, #-512]!	; 2c48 <_Min_Stack_Size+0x2848>
    2e44:	044b0000 	strbeq	r0, [fp], #-0
    2e48:	00028908 	andeq	r8, r2, r8, lsl #18
    2e4c:	00068200 	andeq	r8, r6, r0, lsl #4
    2e50:	00067800 	andeq	r7, r6, r0, lsl #16
    2e54:	5f5f0400 	svcpl	0x005f0400
    2e58:	044b006d 	strbeq	r0, [fp], #-109	; 0xffffff93
    2e5c:	00028908 	andeq	r8, r2, r8, lsl #18
    2e60:	0006b300 	andeq	fp, r6, r0, lsl #6
    2e64:	0006b100 	andeq	fp, r6, r0, lsl #2
    2e68:	72070000 	andvc	r0, r7, #0
    2e6c:	00000001 	andeq	r0, r0, r1
    2e70:	02000006 	andeq	r0, r0, #6
    2e74:	00001481 	andeq	r1, r0, r1, lsl #9
    2e78:	89040450 	stmdbhi	r4, {r4, r6, sl}
    2e7c:	c0000002 	andgt	r0, r0, r2
    2e80:	bc000006 	stclt	0, cr0, [r0], {6}
    2e84:	02000006 	andeq	r0, r0, #6
    2e88:	0000147c 	andeq	r1, r0, ip, ror r4
    2e8c:	89040450 	stmdbhi	r4, {r4, r6, sl}
    2e90:	d6000002 	strle	r0, [r0], -r2
    2e94:	d2000006 	andle	r0, r0, #6
    2e98:	02000006 	andeq	r0, r0, #6
    2e9c:	00001495 	muleq	r0, r5, r4
    2ea0:	89040450 	stmdbhi	r4, {r4, r6, sl}
    2ea4:	ee000002 	cdp	0, 0, cr0, cr0, cr2, {0}
    2ea8:	e8000006 	stmda	r0, {r1, r2}
    2eac:	02000006 	andeq	r0, r0, #6
    2eb0:	00001490 	muleq	r0, r0, r4
    2eb4:	89040450 	stmdbhi	r4, {r4, r6, sl}
    2eb8:	0b000002 	bleq	2ec8 <_Min_Stack_Size+0x2ac8>
    2ebc:	05000007 	streq	r0, [r0, #-7]
    2ec0:	02000007 	andeq	r0, r0, #7
    2ec4:	00001574 	andeq	r1, r0, r4, ror r5
    2ec8:	89040450 	stmdbhi	r4, {r4, r6, sl}
    2ecc:	2c000002 	stccs	0, cr0, [r0], {2}
    2ed0:	22000007 	andcs	r0, r0, #7
    2ed4:	02000007 	andeq	r0, r0, #7
    2ed8:	0000156f 	andeq	r1, r0, pc, ror #10
    2edc:	89040450 	stmdbhi	r4, {r4, r6, sl}
    2ee0:	5a000002 	bpl	2ef0 <_Min_Stack_Size+0x2af0>
    2ee4:	52000007 	andpl	r0, r0, #7
    2ee8:	04000007 	streq	r0, [r0], #-7
    2eec:	006d5f5f 	rsbeq	r5, sp, pc, asr pc
    2ef0:	89040450 	stmdbhi	r4, {r4, r6, sl}
    2ef4:	83000002 	movwhi	r0, #2
    2ef8:	7b000007 	blvc	2f1c <_Min_Stack_Size+0x2b1c>
    2efc:	00000007 	andeq	r0, r0, r7
    2f00:	0001900d 	andeq	r9, r1, sp
    2f04:	316d0400 	cmncc	sp, r0, lsl #8
    2f08:	0f049100 	svceq	0x00049100
    2f0c:	00000289 	andeq	r0, r0, r9, lsl #5
    2f10:	000007a5 	andeq	r0, r0, r5, lsr #15
    2f14:	000007a1 	andeq	r0, r0, r1, lsr #15
    2f18:	00306d04 	eorseq	r6, r0, r4, lsl #26
    2f1c:	89130491 	ldmdbhi	r3, {r0, r4, r7, sl}
    2f20:	b9000002 	stmdblt	r0, {r1}
    2f24:	b5000007 	strlt	r0, [r0, #-7]
    2f28:	07000007 	streq	r0, [r0, -r7]
    2f2c:	0000019d 	muleq	r0, sp, r1
    2f30:	000006c1 	andeq	r0, r0, r1, asr #13
    2f34:	00148102 	andseq	r8, r4, r2, lsl #2
    2f38:	08049c00 	stmdaeq	r4, {sl, fp, ip, pc}
    2f3c:	00000289 	andeq	r0, r0, r9, lsl #5
    2f40:	000007cf 	andeq	r0, r0, pc, asr #15
    2f44:	000007c9 	andeq	r0, r0, r9, asr #15
    2f48:	00147c02 	andseq	r7, r4, r2, lsl #24
    2f4c:	08049c00 	stmdaeq	r4, {sl, fp, ip, pc}
    2f50:	00000289 	andeq	r0, r0, r9, lsl #5
    2f54:	000007f3 	strdeq	r0, [r0], -r3
    2f58:	000007eb 	andeq	r0, r0, fp, ror #15
    2f5c:	00149502 	andseq	r9, r4, r2, lsl #10
    2f60:	08049c00 	stmdaeq	r4, {sl, fp, ip, pc}
    2f64:	00000289 	andeq	r0, r0, r9, lsl #5
    2f68:	00000826 	andeq	r0, r0, r6, lsr #16
    2f6c:	0000081e 	andeq	r0, r0, lr, lsl r8
    2f70:	00149002 	andseq	r9, r4, r2
    2f74:	08049c00 	stmdaeq	r4, {sl, fp, ip, pc}
    2f78:	00000289 	andeq	r0, r0, r9, lsl #5
    2f7c:	0000084a 	andeq	r0, r0, sl, asr #16
    2f80:	00000844 	andeq	r0, r0, r4, asr #16
    2f84:	00157402 	andseq	r7, r5, r2, lsl #8
    2f88:	08049c00 	stmdaeq	r4, {sl, fp, ip, pc}
    2f8c:	00000289 	andeq	r0, r0, r9, lsl #5
    2f90:	00000867 	andeq	r0, r0, r7, ror #16
    2f94:	0000085f 	andeq	r0, r0, pc, asr r8
    2f98:	00156f02 	andseq	r6, r5, r2, lsl #30
    2f9c:	08049c00 	stmdaeq	r4, {sl, fp, ip, pc}
    2fa0:	00000289 	andeq	r0, r0, r9, lsl #5
    2fa4:	00000894 	muleq	r0, r4, r8
    2fa8:	0000088c 	andeq	r0, r0, ip, lsl #17
    2fac:	6d5f5f04 	ldclvs	15, cr5, [pc, #-16]	; 2fa4 <_Min_Stack_Size+0x2ba4>
    2fb0:	08049c00 	stmdaeq	r4, {sl, fp, ip, pc}
    2fb4:	00000289 	andeq	r0, r0, r9, lsl #5
    2fb8:	000008bb 			; <UNDEFINED> instruction: 0x000008bb
    2fbc:	000008b3 			; <UNDEFINED> instruction: 0x000008b3
    2fc0:	01b40d00 			; <UNDEFINED> instruction: 0x01b40d00
    2fc4:	8b020000 	blhi	82fcc <_Min_Stack_Size+0x82bcc>
    2fc8:	9d000014 	stcls	0, cr0, [r0, #-80]	; 0xffffffb0
    2fcc:	029f0804 	addseq	r0, pc, #4, 16	; 0x40000
    2fd0:	08db0000 	ldmeq	fp, {}^	; <UNPREDICTABLE>
    2fd4:	08d90000 	ldmeq	r9, {}^	; <UNPREDICTABLE>
    2fd8:	00000000 	andeq	r0, r0, r0
    2fdc:	9f041900 	svcls	0x00041900
    2fe0:	00000002 	andeq	r0, r0, r2
    2fe4:	00000021 	andeq	r0, r0, r1, lsr #32
    2fe8:	04010005 	streq	r0, [r1], #-5
    2fec:	00000a61 	andeq	r0, r0, r1, ror #20
    2ff0:	001cbb01 	andseq	fp, ip, r1, lsl #22
    2ff4:	00023400 	andeq	r3, r2, r0, lsl #8
    2ff8:	7904d408 	stmdbvc	r4, {r3, sl, ip, lr, pc}
    2ffc:	81000015 	tsthi	r0, r5, lsl r0
    3000:	d100000e 	tstle	r0, lr
    3004:	0100000e 	tsteq	r0, lr
    3008:	00002080 	andeq	r2, r0, r0, lsl #1
    300c:	01000500 	tsteq	r0, r0, lsl #10
    3010:	000a7504 	andeq	r7, sl, r4, lsl #10
    3014:	1db00100 	ldfnes	f0, [r0]
    3018:	04880000 	streq	r0, [r8], #0
    301c:	86020800 	strhi	r0, [r2], -r0, lsl #16
    3020:	81000015 	tsthi	r0, r5, lsl r0
    3024:	d100000e 	tstle	r0, lr
    3028:	0100000e 	tsteq	r0, lr
    302c:	00002180 	andeq	r2, r0, r0, lsl #3
    3030:	01000500 	tsteq	r0, r0, lsl #10
    3034:	000a8904 	andeq	r8, sl, r4, lsl #18
    3038:	1dfa0100 	ldfnee	f0, [sl]
    303c:	048c0000 	streq	r0, [ip], #0
    3040:	06f60800 	ldrbteq	r0, [r6], r0, lsl #16
    3044:	00001579 	andeq	r1, r0, r9, ror r5
    3048:	00000e81 	andeq	r0, r0, r1, lsl #29
    304c:	00000ed1 	ldrdeq	r0, [r0], -r1
    3050:	00208001 	eoreq	r8, r0, r1
    3054:	00050000 	andeq	r0, r5, r0
    3058:	0a9d0401 	beq	fe744064 <_estack+0xde734064>
    305c:	69010000 	stmdbvs	r1, {}	; <UNPREDICTABLE>
    3060:	0400001f 	streq	r0, [r0], #-31	; 0xffffffe1
    3064:	40080008 	andmi	r0, r8, r8
    3068:	00001579 	andeq	r1, r0, r9, ror r5
    306c:	00000e81 	andeq	r0, r0, r1, lsl #29
    3070:	00000ed1 	ldrdeq	r0, [r0], -r1
    3074:	Address 0x0000000000003074 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
void st7789_ReadSpi(uint8_t *data, size_t length) {
   0:	03000d01 	movweq	r0, #3329	; 0xd01
   4:	3b0b3a0e 	blcc	2ce844 <_Min_Stack_Size+0x2ce444>
   8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    ST7789_SPI->CR1 &= ~(SPI_CR1_BIDIOE);
   c:	000b3813 	andeq	r3, fp, r3, lsl r8
  10:	00280200 	eoreq	r0, r8, r0, lsl #4
  14:	0b1c0e03 	bleq	703828 <_Min_Stack_Size+0x703428>
    uint8_t dummy = 0;
  18:	34030000 	strcc	r0, [r3], #-0
        while (!(ST7789_SPI->SR & SPI_SR_TXE));
  1c:	3a0e0300 	bcc	380c24 <_Min_Stack_Size+0x380824>
  20:	053b0221 	ldreq	r0, [fp, #-545]!	; 0xfffffddf
  24:	13490b39 	movtne	r0, #39737	; 0x9b39
  28:	00001802 	andeq	r1, r0, r2, lsl #16
        ST7789_SPI->DR = dummy;
  2c:	03003404 	movweq	r3, #1028	; 0x404
        while (!(ST7789_SPI->SR & SPI_SR_RXNE));
  30:	02213a0e 	eoreq	r3, r1, #57344	; 0xe000
  34:	0b390b3b 	bleq	e42d28 <_Min_Stack_Size+0xe42928>
  38:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
  3c:	0d050000 	stceq	0, cr0, [r5, #-0]
        *data++ = ST7789_SPI->DR;
  40:	3a080300 	bcc	200c48 <_Min_Stack_Size+0x200848>
  44:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
  48:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    while (length--) {
  4c:	0600000b 	streq	r0, [r0], -fp
  50:	13490101 	movtne	r0, #37121	; 0x9101
  54:	00001301 	andeq	r1, r0, r1, lsl #6
    while (ST7789_SPI->SR & SPI_SR_BSY);
  58:	49002107 	stmdbmi	r0, {r0, r1, r2, r8, sp}
  5c:	000b2f13 	andeq	r2, fp, r3, lsl pc
  60:	00160800 	andseq	r0, r6, r0, lsl #16
    ST7789_SPI->CR1 |= SPI_CR1_BIDIOE;
  64:	0b3a0e03 	bleq	e83878 <_Min_Stack_Size+0xe83478>
  68:	0b390b3b 	bleq	e42d5c <_Min_Stack_Size+0xe4295c>
  6c:	00001349 	andeq	r1, r0, r9, asr #6
}
  70:	11010b09 	tstne	r1, r9, lsl #22
  74:	01061201 	tsteq	r6, r1, lsl #4
  78:	0a000013 	beq	cc <_Min_Heap_Size-0x134>
  7c:	0b0b0024 	bleq	2c0114 <_Min_Stack_Size+0x2bfd14>
        line = line + PIXEL_BUFFER_LINES;
  80:	0e030b3e 	vmoveq.16	d3[0], r0
  84:	050b0000 	streq	r0, [fp, #-0]
        batch += 1;
  88:	00134900 	andseq	r4, r3, r0, lsl #18
  8c:	00050c00 	andeq	r0, r5, r0, lsl #24
  90:	213a0e03 	teqcs	sl, r3, lsl #28
  94:	390b3b02 	stmdbcc	fp, {r1, r8, r9, fp, ip, sp}
  98:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
  9c:	0d000018 	stceq	0, cr0, [r0, #-96]	; 0xffffffa0
    while (line < ST7789_LCD_HEIGHT) {
  a0:	0111010b 	tsteq	r1, fp, lsl #2
  a4:	00000612 	andeq	r0, r0, r2, lsl r6
  a8:	0300340e 	movweq	r3, #1038	; 0x40e
    st7789_WaitNanosecs(2000000);
  ac:	02213a08 	eoreq	r3, r1, #8, 20	; 0x8000
  b0:	0b390b3b 	bleq	e42da4 <_Min_Stack_Size+0xe429a4>
}
  b4:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
  b8:	050f0000 	streq	r0, [pc, #-0]	; c0 <_Min_Heap_Size-0x140>
  bc:	3a0e0300 	bcc	380cc4 <_Min_Stack_Size+0x3808c4>
  c0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
  c4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
  c8:	10000018 	andne	r0, r0, r8, lsl r0
  cc:	13490035 	movtne	r0, #36917	; 0x9035
  d0:	28110000 	ldmdacs	r1, {}	; <UNPREDICTABLE>
  d4:	1c0e0300 	stcne	3, cr0, [lr], {-0}
  d8:	1200000d 	andne	r0, r0, #13
  dc:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
  e0:	3b01213a 	blcc	485d0 <_Min_Stack_Size+0x481d0>
  e4:	12213905 	eorne	r3, r1, #81920	; 0x14000
  e8:	05381349 	ldreq	r1, [r8, #-841]!	; 0xfffffcb7
  ec:	16130000 	ldrne	r0, [r3], -r0
  f0:	3a0e0300 	bcc	380cf8 <_Min_Stack_Size+0x3808f8>
  f4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
  f8:	0013490b 	andseq	r4, r3, fp, lsl #18
  fc:	00261400 	eoreq	r1, r6, r0, lsl #8
 100:	00001349 	andeq	r1, r0, r9, asr #6
 104:	0b011315 	bleq	44d60 <_Min_Stack_Size+0x44960>
 108:	3b0b3a0b 	blcc	2ce93c <_Min_Stack_Size+0x2ce53c>
 10c:	09213905 	stmdbeq	r1!, {r0, r2, r8, fp, ip, sp}
 110:	00001301 	andeq	r1, r0, r1, lsl #6
 114:	3f002e16 	svccc	0x00002e16
 118:	3a0e0319 	bcc	380d84 <_Min_Stack_Size+0x380984>
 11c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 120:	3c19270b 	ldccc	7, cr2, [r9], {11}
 124:	17000019 	smladne	r0, r9, r0, r0
 128:	08030034 	stmdaeq	r3, {r2, r4, r5}
 12c:	3b02213a 	blcc	8861c <_Min_Stack_Size+0x8821c>
 130:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 134:	00180213 	andseq	r0, r8, r3, lsl r2
 138:	012e1800 			; <UNDEFINED> instruction: 0x012e1800
 13c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 140:	3b02213a 	blcc	88630 <_Min_Stack_Size+0x88230>
 144:	0621390b 	strteq	r3, [r1], -fp, lsl #18
 148:	01111927 	tsteq	r1, r7, lsr #18
 14c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 150:	1301197c 	movwne	r1, #6524	; 0x197c
 154:	21190000 	tstcs	r9, r0
 158:	2f134900 	svccs	0x00134900
 15c:	1a000005 	bne	178 <_Min_Heap_Size-0x88>
 160:	210b000f 	tstcs	fp, pc
 164:	00134904 	andseq	r4, r3, r4, lsl #18
 168:	012e1b00 			; <UNDEFINED> instruction: 0x012e1b00
 16c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 170:	0b3b0b3a 	bleq	ec2e60 <_Min_Stack_Size+0xec2a60>
 174:	27062139 	smladxcs	r6, r9, r1, r2
 178:	01193c19 	tsteq	r9, r9, lsl ip
 17c:	1c000013 	stcne	0, cr0, [r0], {19}
 180:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 184:	0b3a0e03 	bleq	e83998 <_Min_Stack_Size+0xe83598>
 188:	0b390b3b 	bleq	e42e7c <_Min_Stack_Size+0xe42a7c>
 18c:	13491927 	movtne	r1, #39207	; 0x9927
 190:	1301193c 	movwne	r1, #6460	; 0x193c
 194:	2e1d0000 	cdpcs	0, 1, cr0, cr13, cr0, {0}
 198:	03193f00 	tsteq	r9, #0, 30
 19c:	02213a0e 	eoreq	r3, r1, #57344	; 0xe000
 1a0:	2139053b 	teqcs	r9, fp, lsr r5
 1a4:	11192706 	tstne	r9, r6, lsl #14
 1a8:	40061201 	andmi	r1, r6, r1, lsl #4
 1ac:	00197a18 	andseq	r7, r9, r8, lsl sl
 1b0:	000d1e00 	andeq	r1, sp, r0, lsl #28
 1b4:	213a0803 	teqcs	sl, r3, lsl #16
 1b8:	390b3b03 	stmdbcc	fp, {r0, r1, r8, r9, fp, ip, sp}
 1bc:	13491121 	movtne	r1, #37153	; 0x9121
 1c0:	00000b38 	andeq	r0, r0, r8, lsr fp
 1c4:	03000d1f 	movweq	r0, #3359	; 0xd1f
 1c8:	03213a0e 			; <UNDEFINED> instruction: 0x03213a0e
 1cc:	21390b3b 	teqcs	r9, fp, lsr fp
 1d0:	38134911 	ldmdacc	r3, {r0, r4, r8, fp, lr}
 1d4:	2000000b 	andcs	r0, r0, fp
 1d8:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 1dc:	213a0e03 	teqcs	sl, r3, lsl #28
 1e0:	39053b02 	stmdbcc	r5, {r1, r8, r9, fp, ip, sp}
 1e4:	19270621 	stmdbne	r7!, {r0, r5, r9, sl}
 1e8:	06120111 			; <UNDEFINED> instruction: 0x06120111
 1ec:	197c1840 	ldmdbne	ip!, {r6, fp, ip}^
 1f0:	00001301 	andeq	r1, r0, r1, lsl #6
 1f4:	3f012e21 	svccc	0x00012e21
 1f8:	3a0e0319 	bcc	380e64 <_Min_Stack_Size+0x380a64>
 1fc:	053b0221 	ldreq	r0, [fp, #-545]!	; 0xfffffddf
 200:	11062139 	tstne	r6, r9, lsr r1
 204:	40061201 	andmi	r1, r6, r1, lsl #4
 208:	01197c18 	tsteq	r9, r8, lsl ip
 20c:	22000013 	andcs	r0, r0, #19
 210:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
 214:	213a0e03 	teqcs	sl, r3, lsl #28
 218:	390b3b02 	stmdbcc	fp, {r1, r8, r9, fp, ip, sp}
 21c:	1119270b 	tstne	r9, fp, lsl #14
 220:	40061201 	andmi	r1, r6, r1, lsl #4
 224:	00197a18 	andseq	r7, r9, r8, lsl sl
 228:	01112300 	tsteq	r1, r0, lsl #6
 22c:	0b130e25 	bleq	4c3ac8 <_Min_Stack_Size+0x4c36c8>
 230:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
 234:	01111755 	tsteq	r1, r5, asr r7
 238:	00001710 	andeq	r1, r0, r0, lsl r7
 23c:	3e010424 	cdpcc	4, 0, cr0, cr1, cr4, {1}
 240:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
 244:	3b0b3a13 	blcc	2cea98 <_Min_Stack_Size+0x2ce698>
 248:	010b390b 	tsteq	fp, fp, lsl #18
 24c:	25000013 	strcs	r0, [r0, #-19]	; 0xffffffed
 250:	0b0b0024 	bleq	2c02e8 <_Min_Stack_Size+0x2bfee8>
 254:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
 258:	13260000 			; <UNDEFINED> instruction: 0x13260000
 25c:	3a050b01 	bcc	142e68 <_Min_Stack_Size+0x142a68>
 260:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 264:	0013010b 	andseq	r0, r3, fp, lsl #2
 268:	000d2700 	andeq	r2, sp, r0, lsl #14
 26c:	0b3a0803 	bleq	e82280 <_Min_Stack_Size+0xe81e80>
 270:	0b39053b 	bleq	e41764 <_Min_Stack_Size+0xe41364>
 274:	05381349 	ldreq	r1, [r8, #-841]!	; 0xfffffcb7
 278:	34280000 	strtcc	r0, [r8], #-0
 27c:	3a0e0300 	bcc	380e84 <_Min_Stack_Size+0x380a84>
 280:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 284:	3f13490b 	svccc	0x0013490b
 288:	00193c19 	andseq	r3, r9, r9, lsl ip
 28c:	01132900 	tsteq	r3, r0, lsl #18
 290:	0b3a0b0b 	bleq	e82ec4 <_Min_Stack_Size+0xe82ac4>
 294:	0b390b3b 	bleq	e42f88 <_Min_Stack_Size+0xe42b88>
 298:	00001301 	andeq	r1, r0, r1, lsl #6
 29c:	0b000f2a 	bleq	3f4c <_Min_Stack_Size+0x3b4c>
 2a0:	2b00000b 	blcs	2d4 <_Min_Heap_Size+0xd4>
 2a4:	00000026 	andeq	r0, r0, r6, lsr #32
 2a8:	0300342c 	movweq	r3, #1068	; 0x42c
 2ac:	3b0b3a0e 	blcc	2ceaec <_Min_Stack_Size+0x2ce6ec>
 2b0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 2b4:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
 2b8:	2d000018 	stccs	0, cr0, [r0, #-96]	; 0xffffffa0
 2bc:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
 2c0:	0b3a0e03 	bleq	e83ad4 <_Min_Stack_Size+0xe836d4>
 2c4:	0b39053b 	bleq	e417b8 <_Min_Stack_Size+0xe413b8>
 2c8:	13491927 	movtne	r1, #39207	; 0x9927
 2cc:	06120111 			; <UNDEFINED> instruction: 0x06120111
 2d0:	197c1840 	ldmdbne	ip!, {r6, fp, ip}^
 2d4:	2e2e0000 	cdpcs	0, 2, cr0, cr14, cr0, {0}
 2d8:	03193f01 	tsteq	r9, #1, 30
 2dc:	3b0b3a0e 	blcc	2ceb1c <_Min_Stack_Size+0x2ce71c>
 2e0:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
 2e4:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 2e8:	7a184006 	bvc	610308 <_Min_Stack_Size+0x60ff08>
 2ec:	00130119 	andseq	r0, r3, r9, lsl r1
 2f0:	00052f00 	andeq	r2, r5, r0, lsl #30
 2f4:	0b3a0803 	bleq	e82308 <_Min_Stack_Size+0xe81f08>
 2f8:	0b39053b 	bleq	e417ec <_Min_Stack_Size+0xe413ec>
 2fc:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 300:	2e300000 	cdpcs	0, 3, cr0, cr0, cr0, {0}
 304:	03193f01 	tsteq	r9, #1, 30
 308:	3b0b3a0e 	blcc	2ceb48 <_Min_Stack_Size+0x2ce748>
 30c:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
 310:	11134919 	tstne	r3, r9, lsl r9
 314:	40061201 	andmi	r1, r6, r1, lsl #4
 318:	01197a18 	tsteq	r9, r8, lsl sl
 31c:	31000013 	tstcc	r0, r3, lsl r0
 320:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 324:	0b3a0e03 	bleq	e83b38 <_Min_Stack_Size+0xe83738>
 328:	0b390b3b 	bleq	e4301c <_Min_Stack_Size+0xe42c1c>
 32c:	13491927 	movtne	r1, #39207	; 0x9927
 330:	06120111 			; <UNDEFINED> instruction: 0x06120111
 334:	197a1840 	ldmdbne	sl!, {r6, fp, ip}^
 338:	00001301 	andeq	r1, r0, r1, lsl #6
 33c:	3f002e32 	svccc	0x00002e32
 340:	3a0e0319 	bcc	380fac <_Min_Stack_Size+0x380bac>
 344:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 348:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
 34c:	7a184006 	bvc	61036c <_Min_Stack_Size+0x60ff6c>
 350:	33000019 	movwcc	r0, #25
 354:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 358:	0b3a0e03 	bleq	e83b6c <_Min_Stack_Size+0xe8376c>
 35c:	0b390b3b 	bleq	e43050 <_Min_Stack_Size+0xe42c50>
 360:	06120111 			; <UNDEFINED> instruction: 0x06120111
 364:	197c1840 	ldmdbne	ip!, {r6, fp, ip}^
 368:	00001301 	andeq	r1, r0, r1, lsl #6
 36c:	03012e34 	movweq	r2, #7732	; 0x1e34
 370:	3b0b3a0e 	blcc	2cebb0 <_Min_Stack_Size+0x2ce7b0>
 374:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
 378:	11134919 	tstne	r3, r9, lsl r9
 37c:	40061201 	andmi	r1, r6, r1, lsl #4
 380:	01197c18 	tsteq	r9, r8, lsl ip
 384:	35000013 	strcc	r0, [r0, #-19]	; 0xffffffed
 388:	0e03012e 	adfeqsp	f0, f3, #0.5
 38c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 390:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
 394:	06120111 			; <UNDEFINED> instruction: 0x06120111
 398:	197a1840 	ldmdbne	sl!, {r6, fp, ip}^
 39c:	01000000 	mrseq	r0, (UNDEF: 0)
 3a0:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 3a4:	3b01213a 	blcc	48894 <_Min_Stack_Size+0x48494>
 3a8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 3ac:	00180213 	andseq	r0, r8, r3, lsl r2
 3b0:	00240200 	eoreq	r0, r4, r0, lsl #4
 3b4:	0b3e0b0b 	bleq	f82fe8 <_Min_Stack_Size+0xf82be8>
 3b8:	00000e03 	andeq	r0, r0, r3, lsl #28
 3bc:	03000d03 	movweq	r0, #3331	; 0xd03
 3c0:	3b0b3a0e 	blcc	2cec00 <_Min_Stack_Size+0x2ce800>
 3c4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 3c8:	000b3813 	andeq	r3, fp, r3, lsl r8
 3cc:	000d0400 	andeq	r0, sp, r0, lsl #8
 3d0:	213a0e03 	teqcs	sl, r3, lsl #28
 3d4:	39053b05 	stmdbcc	r5, {r0, r2, r8, r9, fp, ip, sp}
 3d8:	13491121 	movtne	r1, #37153	; 0x9121
 3dc:	00000b38 	andeq	r0, r0, r8, lsr fp
 3e0:	03001605 	movweq	r1, #1541	; 0x605
 3e4:	3b0b3a0e 	blcc	2cec24 <_Min_Stack_Size+0x2ce824>
 3e8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 3ec:	06000013 			; <UNDEFINED> instruction: 0x06000013
 3f0:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 3f4:	3b01213a 	blcc	488e4 <_Min_Stack_Size+0x484e4>
 3f8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 3fc:	00180213 	andseq	r0, r8, r3, lsl r2
 400:	012e0700 			; <UNDEFINED> instruction: 0x012e0700
 404:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 408:	3b01213a 	blcc	488f8 <_Min_Stack_Size+0x484f8>
 40c:	0621390b 	strteq	r3, [r1], -fp, lsl #18
 410:	01111927 	tsteq	r1, r7, lsr #18
 414:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 418:	1301197c 	movwne	r1, #6524	; 0x197c
 41c:	0d080000 	stceq	0, cr0, [r8, #-0]
 420:	3a080300 	bcc	201028 <_Min_Stack_Size+0x200c28>
 424:	053b0521 	ldreq	r0, [fp, #-1313]!	; 0xfffffadf
 428:	49112139 	ldmdbmi	r1, {r0, r3, r4, r5, r8, sp}
 42c:	000b3813 	andeq	r3, fp, r3, lsl r8
 430:	01010900 	tsteq	r1, r0, lsl #18
 434:	13011349 	movwne	r1, #4937	; 0x1349
 438:	210a0000 	mrscs	r0, (UNDEF: 10)
 43c:	2f134900 	svccs	0x00134900
 440:	0b00000b 	bleq	474 <_Min_Stack_Size+0x74>
 444:	13490026 	movtne	r0, #36902	; 0x9026
 448:	340c0000 	strcc	r0, [ip], #-0
 44c:	3a080300 	bcc	201054 <_Min_Stack_Size+0x200c54>
 450:	0b3b0121 	bleq	ec08dc <_Min_Stack_Size+0xec04dc>
 454:	13490b39 	movtne	r0, #39737	; 0x9b39
 458:	00001802 	andeq	r1, r0, r2, lsl #16
 45c:	0b000f0d 	bleq	4098 <_Min_Stack_Size+0x3c98>
 460:	13490421 	movtne	r0, #37921	; 0x9421
 464:	050e0000 	streq	r0, [lr, #-0]
 468:	3a080300 	bcc	201070 <_Min_Stack_Size+0x200c70>
 46c:	0b3b0121 	bleq	ec08f8 <_Min_Stack_Size+0xec04f8>
 470:	13490b39 	movtne	r0, #39737	; 0x9b39
 474:	00001802 	andeq	r1, r0, r2, lsl #16
 478:	03000d0f 	movweq	r0, #3343	; 0xd0f
 47c:	05213a08 	streq	r3, [r1, #-2568]!	; 0xfffff5f8
 480:	21390b3b 	teqcs	r9, fp, lsr fp
 484:	38134911 	ldmdacc	r3, {r0, r4, r8, fp, lr}
 488:	1000000b 	andne	r0, r0, fp
 48c:	0111010b 	tsteq	r1, fp, lsl #2
 490:	00000612 	andeq	r0, r0, r2, lsl r6
 494:	3f002e11 	svccc	0x00002e11
 498:	3a0e0319 	bcc	381104 <_Min_Stack_Size+0x380d04>
 49c:	0b3b0121 	bleq	ec0928 <_Min_Stack_Size+0xec0528>
 4a0:	27062139 	smladxcs	r6, r9, r1, r2
 4a4:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 4a8:	7a184006 	bvc	6104c8 <_Min_Stack_Size+0x6100c8>
 4ac:	12000019 	andne	r0, r0, #25
 4b0:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 4b4:	213a0e03 	teqcs	sl, r3, lsl #28
 4b8:	390b3b01 	stmdbcc	fp, {r0, r8, r9, fp, ip, sp}
 4bc:	1119270b 	tstne	r9, fp, lsl #14
 4c0:	40061201 	andmi	r1, r6, r1, lsl #4
 4c4:	01197a18 	tsteq	r9, r8, lsl sl
 4c8:	13000013 	movwne	r0, #19
 4cc:	13490035 	movtne	r0, #36917	; 0x9035
 4d0:	13140000 	tstne	r4, #0
 4d4:	3a0b0b01 	bcc	2c30e0 <_Min_Stack_Size+0x2c2ce0>
 4d8:	0b3b0521 	bleq	ec1964 <_Min_Stack_Size+0xec1564>
 4dc:	01092139 	tsteq	r9, r9, lsr r1
 4e0:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
 4e4:	0b0b0113 	bleq	2c0938 <_Min_Stack_Size+0x2c0538>
 4e8:	3b05213a 	blcc	1489d8 <_Min_Stack_Size+0x1485d8>
 4ec:	09213905 	stmdbeq	r1!, {r0, r2, r8, fp, ip, sp}
 4f0:	00001301 	andeq	r1, r0, r1, lsl #6
 4f4:	03001616 	movweq	r1, #1558	; 0x616
 4f8:	05213a0e 	streq	r3, [r1, #-2574]!	; 0xfffff5f2
 4fc:	2139053b 	teqcs	r9, fp, lsr r5
 500:	00134903 	andseq	r4, r3, r3, lsl #18
 504:	002e1700 	eoreq	r1, lr, r0, lsl #14
 508:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 50c:	3b01213a 	blcc	489fc <_Min_Stack_Size+0x485fc>
 510:	0621390b 	strteq	r3, [r1], -fp, lsl #18
 514:	01111927 	tsteq	r1, r7, lsr #18
 518:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 51c:	0000197c 	andeq	r1, r0, ip, ror r9
 520:	25011118 	strcs	r1, [r1, #-280]	; 0xfffffee8
 524:	030b130e 	movweq	r1, #45838	; 0xb30e
 528:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
 52c:	10011117 	andne	r1, r1, r7, lsl r1
 530:	19000017 	stmdbne	r0, {r0, r1, r2, r4}
 534:	0b0b0024 	bleq	2c05cc <_Min_Stack_Size+0x2c01cc>
 538:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
 53c:	0f1a0000 	svceq	0x001a0000
 540:	000b0b00 	andeq	r0, fp, r0, lsl #22
 544:	00261b00 	eoreq	r1, r6, r0, lsl #22
 548:	131c0000 	tstne	ip, #0
 54c:	0b0e0301 	bleq	381158 <_Min_Stack_Size+0x380d58>
 550:	3b0b3a0b 	blcc	2ced84 <_Min_Stack_Size+0x2ce984>
 554:	010b390b 	tsteq	fp, fp, lsl #18
 558:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
 55c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 560:	0b3a0e03 	bleq	e83d74 <_Min_Stack_Size+0xe83974>
 564:	0b390b3b 	bleq	e43258 <_Min_Stack_Size+0xe42e58>
 568:	13491927 	movtne	r1, #39207	; 0x9927
 56c:	06120111 			; <UNDEFINED> instruction: 0x06120111
 570:	197a1840 	ldmdbne	sl!, {r6, fp, ip}^
 574:	00001301 	andeq	r1, r0, r1, lsl #6
 578:	3f012e1e 	svccc	0x00012e1e
 57c:	3a0e0319 	bcc	3811e8 <_Min_Stack_Size+0x380de8>
 580:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 584:	1119270b 	tstne	r9, fp, lsl #14
 588:	40061201 	andmi	r1, r6, r1, lsl #4
 58c:	00197a18 	andseq	r7, r9, r8, lsl sl
 590:	0d010000 	stceq	0, cr0, [r1, #-0]
 594:	3a0e0300 	bcc	38119c <_Min_Stack_Size+0x380d9c>
 598:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 59c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 5a0:	0200000b 	andeq	r0, r0, #11
 5a4:	0b0b0024 	bleq	2c063c <_Min_Stack_Size+0x2c023c>
 5a8:	0e030b3e 	vmoveq.16	d3[0], r0
 5ac:	0d030000 	stceq	0, cr0, [r3, #-0]
 5b0:	3a080300 	bcc	2011b8 <_Min_Stack_Size+0x200db8>
 5b4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 5b8:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 5bc:	0400000b 	streq	r0, [r0], #-11
 5c0:	13490101 	movtne	r0, #37121	; 0x9101
 5c4:	00001301 	andeq	r1, r0, r1, lsl #6
 5c8:	49002105 	stmdbmi	r0, {r0, r2, r8, sp}
 5cc:	000b2f13 	andeq	r2, fp, r3, lsl pc
 5d0:	00260600 	eoreq	r0, r6, r0, lsl #12
 5d4:	00001349 	andeq	r1, r0, r9, asr #6
 5d8:	49003507 	stmdbmi	r0, {r0, r1, r2, r8, sl, ip, sp}
 5dc:	08000013 	stmdaeq	r0, {r0, r1, r4}
 5e0:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
 5e4:	0b3b0b3a 	bleq	ec32d4 <_Min_Stack_Size+0xec2ed4>
 5e8:	13490b39 	movtne	r0, #39737	; 0x9b39
 5ec:	34090000 	strcc	r0, [r9], #-0
 5f0:	3a0e0300 	bcc	3811f8 <_Min_Stack_Size+0x380df8>
 5f4:	213b0121 	teqcs	fp, r1, lsr #2
 5f8:	0b3901df 	bleq	e40d7c <_Min_Stack_Size+0xe4097c>
 5fc:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 600:	340a0000 	strcc	r0, [sl], #-0
 604:	3a0e0300 	bcc	38120c <_Min_Stack_Size+0x380e0c>
 608:	0b3b0521 	bleq	ec1a94 <_Min_Stack_Size+0xec1694>
 60c:	13490b39 	movtne	r0, #39737	; 0x9b39
 610:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
 614:	340b0000 	strcc	r0, [fp], #-0
 618:	3a134700 	bcc	4d2220 <_Min_Stack_Size+0x4d1e20>
 61c:	0b3b0121 	bleq	ec0aa8 <_Min_Stack_Size+0xec06a8>
 620:	18020b39 	stmdane	r2, {r0, r3, r4, r5, r8, r9, fp}
 624:	130c0000 	movwne	r0, #49152	; 0xc000
 628:	3a0b0b01 	bcc	2c3234 <_Min_Stack_Size+0x2c2e34>
 62c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 630:	13010921 	movwne	r0, #6433	; 0x1921
 634:	160d0000 	strne	r0, [sp], -r0
 638:	3a0e0300 	bcc	381240 <_Min_Stack_Size+0x380e40>
 63c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 640:	13490321 	movtne	r0, #37665	; 0x9321
 644:	110e0000 	mrsne	r0, (UNDEF: 14)
 648:	130e2501 	movwne	r2, #58625	; 0xe501
 64c:	1b0e030b 	blne	381280 <_Min_Stack_Size+0x380e80>
 650:	1117550e 	tstne	r7, lr, lsl #10
 654:	00171001 	andseq	r1, r7, r1
 658:	00240f00 	eoreq	r0, r4, r0, lsl #30
 65c:	0b3e0b0b 	bleq	f83290 <_Min_Stack_Size+0xf82e90>
 660:	00000803 	andeq	r0, r0, r3, lsl #16
 664:	3f012e10 	svccc	0x00012e10
 668:	3a0e0319 	bcc	3812d4 <_Min_Stack_Size+0x380ed4>
 66c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 670:	1119270b 	tstne	r9, fp, lsl #14
 674:	40061201 	andmi	r1, r6, r1, lsl #4
 678:	01197a18 	tsteq	r9, r8, lsl sl
 67c:	11000013 	tstne	r0, r3, lsl r0
 680:	08030034 	stmdaeq	r3, {r2, r4, r5}
 684:	0b3b0b3a 	bleq	ec3374 <_Min_Stack_Size+0xec2f74>
 688:	13490b39 	movtne	r0, #39737	; 0x9b39
 68c:	00001802 	andeq	r1, r0, r2, lsl #16
 690:	3f002e12 	svccc	0x00002e12
 694:	3a0e0319 	bcc	381300 <_Min_Stack_Size+0x380f00>
 698:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 69c:	1119270b 	tstne	r9, fp, lsl #14
 6a0:	40061201 	andmi	r1, r6, r1, lsl #4
 6a4:	00197a18 	andseq	r7, r9, r8, lsl sl
 6a8:	11010000 	mrsne	r0, (UNDEF: 1)
 6ac:	55061000 	strpl	r1, [r6, #-0]
 6b0:	1b0e0306 	blne	3812d0 <_Min_Stack_Size+0x380ed0>
 6b4:	130e250e 	movwne	r2, #58638	; 0xe50e
 6b8:	00000005 	andeq	r0, r0, r5
 6bc:	10001101 	andne	r1, r0, r1, lsl #2
 6c0:	12011117 	andne	r1, r1, #-1073741819	; 0xc0000005
 6c4:	1b0e030f 	blne	381308 <_Min_Stack_Size+0x380f08>
 6c8:	130e250e 	movwne	r2, #58638	; 0xe50e
 6cc:	00000005 	andeq	r0, r0, r5
 6d0:	03002801 	movweq	r2, #2049	; 0x801
 6d4:	000b1c0e 	andeq	r1, fp, lr, lsl #24
 6d8:	00240200 	eoreq	r0, r4, r0, lsl #4
 6dc:	0b3e0b0b 	bleq	f83310 <_Min_Stack_Size+0xf82f10>
 6e0:	00000e03 	andeq	r0, r0, r3, lsl #28
 6e4:	03001603 	movweq	r1, #1539	; 0x603
 6e8:	03213a0e 			; <UNDEFINED> instruction: 0x03213a0e
 6ec:	0b390b3b 	bleq	e433e0 <_Min_Stack_Size+0xe42fe0>
 6f0:	00001349 	andeq	r1, r0, r9, asr #6
 6f4:	03000d04 	movweq	r0, #3332	; 0xd04
 6f8:	02213a0e 	eoreq	r3, r1, #57344	; 0xe000
 6fc:	2139053b 	teqcs	r9, fp, lsr r5
 700:	38134914 	ldmdacc	r3, {r2, r4, r8, fp, lr}
 704:	0500000b 	streq	r0, [r0, #-11]
 708:	13490026 	movtne	r0, #36902	; 0x9026
 70c:	49060000 	stmdbmi	r6, {}	; <UNPREDICTABLE>
 710:	7e180200 	cdpvc	2, 1, cr0, cr8, cr0, {0}
 714:	07000018 	smladeq	r0, r8, r0, r0
 718:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 71c:	0e030b13 	vmoveq.32	d3[0], r0
 720:	17550e1b 	smmlane	r5, fp, lr, r0
 724:	17100111 			; <UNDEFINED> instruction: 0x17100111
 728:	24080000 	strcs	r0, [r8], #-0
 72c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 730:	0008030b 	andeq	r0, r8, fp, lsl #6
 734:	01040900 	tsteq	r4, r0, lsl #18
 738:	0b3e0e03 	bleq	f83f4c <_Min_Stack_Size+0xf83b4c>
 73c:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 740:	0b3b0b3a 	bleq	ec3430 <_Min_Stack_Size+0xec3030>
 744:	13010b39 	movwne	r0, #6969	; 0x1b39
 748:	130a0000 	movwne	r0, #40960	; 0xa000
 74c:	0b0e0301 	bleq	381358 <_Min_Stack_Size+0x380f58>
 750:	3b0b3a0b 	blcc	2cef84 <_Min_Stack_Size+0x2ceb84>
 754:	010b3905 	tsteq	fp, r5, lsl #18
 758:	0b000013 	bleq	7ac <_Min_Stack_Size+0x3ac>
 75c:	13490101 	movtne	r0, #37121	; 0x9101
 760:	00001301 	andeq	r1, r0, r1, lsl #6
 764:	4900210c 	stmdbmi	r0, {r2, r3, r8, sp}
 768:	000b2f13 	andeq	r2, fp, r3, lsl pc
 76c:	00340d00 	eorseq	r0, r4, r0, lsl #26
 770:	0b3a0e03 	bleq	e83f84 <_Min_Stack_Size+0xe83b84>
 774:	0b39053b 	bleq	e41c68 <_Min_Stack_Size+0xe41868>
 778:	0a1c1349 	beq	7054a4 <_Min_Stack_Size+0x7050a4>
 77c:	2e0e0000 	cdpcs	0, 0, cr0, cr14, cr0, {0}
 780:	03193f01 	tsteq	r9, #1, 30
 784:	3b0b3a0e 	blcc	2cefc4 <_Min_Stack_Size+0x2cebc4>
 788:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
 78c:	4919270e 	ldmdbmi	r9, {r1, r2, r3, r8, r9, sl, sp}
 790:	01193c13 	tsteq	r9, r3, lsl ip
 794:	0f000013 	svceq	0x00000013
 798:	13490005 	movtne	r0, #36869	; 0x9005
 79c:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
 7a0:	03193f01 	tsteq	r9, #1, 30
 7a4:	3b0b3a0e 	blcc	2cefe4 <_Min_Stack_Size+0x2cebe4>
 7a8:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
 7ac:	11134919 	tstne	r3, r9, lsl r9
 7b0:	40061201 	andmi	r1, r6, r1, lsl #4
 7b4:	00197a18 	andseq	r7, r9, r8, lsl sl
 7b8:	00051100 	andeq	r1, r5, r0, lsl #2
 7bc:	0b3a0803 	bleq	e827d0 <_Min_Stack_Size+0xe823d0>
 7c0:	0b39053b 	bleq	e41cb4 <_Min_Stack_Size+0xe418b4>
 7c4:	17021349 	strne	r1, [r2, -r9, asr #6]
 7c8:	001742b7 			; <UNDEFINED> instruction: 0x001742b7
 7cc:	01481200 	mrseq	r1, (UNDEF: 104)
 7d0:	0182017d 	orreq	r0, r2, sp, ror r1
 7d4:	01137f19 	tsteq	r3, r9, lsl pc
 7d8:	13000013 	movwne	r0, #19
 7dc:	017d0148 	cmneq	sp, r8, asr #2
 7e0:	0000137f 	andeq	r1, r0, pc, ror r3
 7e4:	00280100 	eoreq	r0, r8, r0, lsl #2
 7e8:	0b1c0e03 	bleq	703ffc <_Min_Stack_Size+0x703bfc>
 7ec:	24020000 	strcs	r0, [r2], #-0
 7f0:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 7f4:	000e030b 	andeq	r0, lr, fp, lsl #6
 7f8:	00480300 	subeq	r0, r8, r0, lsl #6
 7fc:	137f017d 	cmnne	pc, #1073741855	; 0x4000001f
 800:	2e040000 	cdpcs	0, 0, cr0, cr4, cr0, {0}
 804:	3c193f00 	ldccc	15, cr3, [r9], {-0}
 808:	030e6e19 	movweq	r6, #60953	; 0xee19
 80c:	0500000e 	streq	r0, [r0, #-14]
 810:	13490026 	movtne	r0, #36902	; 0x9026
 814:	16060000 	strne	r0, [r6], -r0
 818:	3a0e0300 	bcc	381420 <_Min_Stack_Size+0x381020>
 81c:	0b3b0321 	bleq	ec14a8 <_Min_Stack_Size+0xec10a8>
 820:	13490b39 	movtne	r0, #39737	; 0x9b39
 824:	34070000 	strcc	r0, [r7], #-0
 828:	3a080300 	bcc	201430 <_Min_Stack_Size+0x201030>
 82c:	053b0121 	ldreq	r0, [fp, #-289]!	; 0xfffffedf
 830:	49102139 	ldmdbmi	r0, {r0, r3, r4, r5, r8, sp}
 834:	b7170213 			; <UNDEFINED> instruction: 0xb7170213
 838:	00001742 	andeq	r1, r0, r2, asr #14
 83c:	03000d08 	movweq	r0, #3336	; 0xd08
 840:	02213a0e 	eoreq	r3, r1, #57344	; 0xe000
 844:	2139053b 	teqcs	r9, fp, lsr r5
 848:	38134914 	ldmdacc	r3, {r2, r4, r8, fp, lr}
 84c:	0900000b 	stmdbeq	r0, {r0, r1, r3}
 850:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 854:	0e030b13 	vmoveq.32	d3[0], r0
 858:	17550e1b 	smmlane	r5, fp, lr, r0
 85c:	17100111 			; <UNDEFINED> instruction: 0x17100111
 860:	240a0000 	strcs	r0, [sl], #-0
 864:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 868:	0008030b 	andeq	r0, r8, fp, lsl #6
 86c:	01040b00 	tsteq	r4, r0, lsl #22
 870:	0b3e0e03 	bleq	f84084 <_Min_Stack_Size+0xf83c84>
 874:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 878:	0b3b0b3a 	bleq	ec3568 <_Min_Stack_Size+0xec3168>
 87c:	13010b39 	movwne	r0, #6969	; 0x1b39
 880:	130c0000 	movwne	r0, #49152	; 0xc000
 884:	0b0e0301 	bleq	381490 <_Min_Stack_Size+0x381090>
 888:	3b0b3a0b 	blcc	2cf0bc <_Min_Stack_Size+0x2cecbc>
 88c:	010b3905 	tsteq	fp, r5, lsl #18
 890:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
 894:	13490101 	movtne	r0, #37121	; 0x9101
 898:	00001301 	andeq	r1, r0, r1, lsl #6
 89c:	4900210e 	stmdbmi	r0, {r1, r2, r3, r8, sp}
 8a0:	000b2f13 	andeq	r2, fp, r3, lsl pc
 8a4:	00340f00 	eorseq	r0, r4, r0, lsl #30
 8a8:	0b3a0e03 	bleq	e840bc <_Min_Stack_Size+0xe83cbc>
 8ac:	0b39053b 	bleq	e41da0 <_Min_Stack_Size+0xe419a0>
 8b0:	0a1c1349 	beq	7055dc <_Min_Stack_Size+0x7051dc>
 8b4:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
 8b8:	03193f01 	tsteq	r9, #1, 30
 8bc:	3b0b3a0e 	blcc	2cf0fc <_Min_Stack_Size+0x2cecfc>
 8c0:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
 8c4:	11134919 	tstne	r3, r9, lsl r9
 8c8:	40061201 	andmi	r1, r6, r1, lsl #4
 8cc:	01197a18 	tsteq	r9, r8, lsl sl
 8d0:	11000013 	tstne	r0, r3, lsl r0
 8d4:	08030005 	stmdaeq	r3, {r0, r2}
 8d8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 8dc:	13490b39 	movtne	r0, #39737	; 0x9b39
 8e0:	42b71702 	adcsmi	r1, r7, #524288	; 0x80000
 8e4:	00000017 	andeq	r0, r0, r7, lsl r0
 8e8:	03002801 	movweq	r2, #2049	; 0x801
 8ec:	000b1c0e 	andeq	r1, fp, lr, lsl #24
 8f0:	00340200 	eorseq	r0, r4, r0, lsl #4
 8f4:	213a0e03 	teqcs	sl, r3, lsl #28
 8f8:	39053b01 	stmdbcc	r5, {r0, r8, r9, fp, ip, sp}
 8fc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 900:	1742b717 	smlaldne	fp, r2, r7, r7
 904:	24030000 	strcs	r0, [r3], #-0
 908:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 90c:	000e030b 	andeq	r0, lr, fp, lsl #6
 910:	00340400 	eorseq	r0, r4, r0, lsl #8
 914:	213a0803 	teqcs	sl, r3, lsl #16
 918:	39053b01 	stmdbcc	r5, {r0, r8, r9, fp, ip, sp}
 91c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 920:	1742b717 	smlaldne	fp, r2, r7, r7
 924:	16050000 	strne	r0, [r5], -r0
 928:	3a0e0300 	bcc	381530 <_Min_Stack_Size+0x381130>
 92c:	0b3b0321 	bleq	ec15b8 <_Min_Stack_Size+0xec11b8>
 930:	13490b39 	movtne	r0, #39737	; 0x9b39
 934:	34060000 	strcc	r0, [r6], #-0
 938:	3a080300 	bcc	201540 <_Min_Stack_Size+0x201140>
 93c:	053b0121 	ldreq	r0, [fp, #-289]!	; 0xfffffedf
 940:	13490b39 	movtne	r0, #39737	; 0x9b39
 944:	0b070000 	bleq	1c094c <_Min_Stack_Size+0x1c054c>
 948:	01175501 	tsteq	r7, r1, lsl #10
 94c:	08000013 	stmdaeq	r0, {r0, r1, r4}
 950:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 954:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 958:	13490b39 	movtne	r0, #39737	; 0x9b39
 95c:	00000b38 	andeq	r0, r0, r8, lsr fp
 960:	49002609 	stmdbmi	r0, {r0, r3, r9, sl, sp}
 964:	0a000013 	beq	9b8 <_Min_Stack_Size+0x5b8>
 968:	08030005 	stmdaeq	r3, {r0, r2}
 96c:	3b01213a 	blcc	48e5c <_Min_Stack_Size+0x48a5c>
 970:	3907e321 	stmdbcc	r7, {r0, r5, r8, r9, sp, lr, pc}
 974:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 978:	1742b717 	smlaldne	fp, r2, r7, r7
 97c:	130b0000 	movwne	r0, #45056	; 0xb000
 980:	0b0e0301 	bleq	38158c <_Min_Stack_Size+0x38118c>
 984:	3b0b3a0b 	blcc	2cf1b8 <_Min_Stack_Size+0x2cedb8>
 988:	010b3905 	tsteq	fp, r5, lsl #18
 98c:	0c000013 	stceq	0, cr0, [r0], {19}
 990:	0803000d 	stmdaeq	r3, {r0, r2, r3}
 994:	3b03213a 	blcc	c8e84 <_Min_Stack_Size+0xc8a84>
 998:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 99c:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
 9a0:	1755010b 	ldrbne	r0, [r5, -fp, lsl #2]
 9a4:	110e0000 	mrsne	r0, (UNDEF: 14)
 9a8:	130e2501 	movwne	r2, #58625	; 0xe501
 9ac:	1b0e030b 	blne	3815e0 <_Min_Stack_Size+0x3811e0>
 9b0:	1117550e 	tstne	r7, lr, lsl #10
 9b4:	00171001 	andseq	r1, r7, r1
 9b8:	00240f00 	eoreq	r0, r4, r0, lsl #30
 9bc:	0b3e0b0b 	bleq	f835f0 <_Min_Stack_Size+0xf831f0>
 9c0:	00000803 	andeq	r0, r0, r3, lsl #16
 9c4:	03010410 	movweq	r0, #5136	; 0x1410
 9c8:	0b0b3e0e 	bleq	2d0208 <_Min_Stack_Size+0x2cfe08>
 9cc:	3a13490b 	bcc	4d2e00 <_Min_Stack_Size+0x4d2a00>
 9d0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 9d4:	0013010b 	andseq	r0, r3, fp, lsl #2
 9d8:	01011100 	mrseq	r1, (UNDEF: 17)
 9dc:	13011349 	movwne	r1, #4937	; 0x1349
 9e0:	21120000 	tstcs	r2, r0
 9e4:	2f134900 	svccs	0x00134900
 9e8:	1300000b 	movwne	r0, #11
 9ec:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 9f0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 9f4:	13490b39 	movtne	r0, #39737	; 0x9b39
 9f8:	00000a1c 	andeq	r0, r0, ip, lsl sl
 9fc:	03000d14 	movweq	r0, #3348	; 0xd14
 a00:	3b0b3a08 	blcc	2cf228 <_Min_Stack_Size+0x2cee28>
 a04:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 a08:	000b3813 	andeq	r3, fp, r3, lsl r8
 a0c:	01171500 	tsteq	r7, r0, lsl #10
 a10:	0b3a0b0b 	bleq	e83644 <_Min_Stack_Size+0xe83244>
 a14:	0b39053b 	bleq	e41f08 <_Min_Stack_Size+0xe41b08>
 a18:	00001301 	andeq	r1, r0, r1, lsl #6
 a1c:	03001616 	movweq	r1, #1558	; 0x616
 a20:	3b0b3a0e 	blcc	2cf260 <_Min_Stack_Size+0x2cee60>
 a24:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 a28:	17000013 	smladne	r0, r3, r0, r0
 a2c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 a30:	0b3a0e03 	bleq	e84244 <_Min_Stack_Size+0xe83e44>
 a34:	0b39053b 	bleq	e41f28 <_Min_Stack_Size+0xe41b28>
 a38:	13491927 	movtne	r1, #39207	; 0x9927
 a3c:	06120111 			; <UNDEFINED> instruction: 0x06120111
 a40:	197a1840 	ldmdbne	sl!, {r6, fp, ip}^
 a44:	00001301 	andeq	r1, r0, r1, lsl #6
 a48:	03003418 	movweq	r3, #1048	; 0x418
 a4c:	3b0b3a0e 	blcc	2cf28c <_Min_Stack_Size+0x2cee8c>
 a50:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 a54:	19000013 	stmdbne	r0, {r0, r1, r4}
 a58:	0b0b000f 	bleq	2c0a9c <_Min_Stack_Size+0x2c069c>
 a5c:	00001349 	andeq	r1, r0, r9, asr #6
 a60:	00110100 	andseq	r0, r1, r0, lsl #2
 a64:	01111710 	tsteq	r1, r0, lsl r7
 a68:	0e030f12 	mcreq	15, 0, r0, cr3, cr2, {0}
 a6c:	0e250e1b 	mcreq	14, 1, r0, cr5, cr11, {0}
 a70:	00000513 	andeq	r0, r0, r3, lsl r5
 a74:	00110100 	andseq	r0, r1, r0, lsl #2
 a78:	01111710 	tsteq	r1, r0, lsl r7
 a7c:	0e030f12 	mcreq	15, 0, r0, cr3, cr2, {0}
 a80:	0e250e1b 	mcreq	14, 1, r0, cr5, cr11, {0}
 a84:	00000513 	andeq	r0, r0, r3, lsl r5
 a88:	00110100 	andseq	r0, r1, r0, lsl #2
 a8c:	01111710 	tsteq	r1, r0, lsl r7
 a90:	0e030f12 	mcreq	15, 0, r0, cr3, cr2, {0}
 a94:	0e250e1b 	mcreq	14, 1, r0, cr5, cr11, {0}
 a98:	00000513 	andeq	r0, r0, r3, lsl r5
 a9c:	00110100 	andseq	r0, r1, r0, lsl #2
 aa0:	01111710 	tsteq	r1, r0, lsl r7
 aa4:	0e030f12 	mcreq	15, 0, r0, cr3, cr2, {0}
 aa8:	0e250e1b 	mcreq	14, 1, r0, cr5, cr11, {0}
 aac:	00000513 	andeq	r0, r0, r3, lsl r5
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
void st7789_ReadSpi(uint8_t *data, size_t length) {
   0:	000000c4 	andeq	r0, r0, r4, asr #1
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
    ST7789_SPI->CR1 &= ~(SPI_CR1_BIDIOE);
   c:	00000000 	andeq	r0, r0, r0
  10:	080009a4 	stmdaeq	r0, {r2, r5, r7, r8, fp}
  14:	00000054 	andeq	r0, r0, r4, asr r0
    uint8_t dummy = 0;
  18:	080009f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, fp}
        while (!(ST7789_SPI->SR & SPI_SR_TXE));
  1c:	00000044 	andeq	r0, r0, r4, asr #32
  20:	08000a3c 	stmdaeq	r0, {r2, r3, r4, r5, r9, fp}
  24:	00000038 	andeq	r0, r0, r8, lsr r0
  28:	00000000 	andeq	r0, r0, r0
        ST7789_SPI->DR = dummy;
  2c:	0000005c 	andeq	r0, r0, ip, asr r0
        while (!(ST7789_SPI->SR & SPI_SR_RXNE));
  30:	00000000 	andeq	r0, r0, r0
  34:	00000018 	andeq	r0, r0, r8, lsl r0
  38:	00000000 	andeq	r0, r0, r0
  3c:	0000004c 	andeq	r0, r0, ip, asr #32
        *data++ = ST7789_SPI->DR;
  40:	08000a74 	stmdaeq	r0, {r2, r4, r5, r6, r9, fp}
  44:	000000b8 	strheq	r0, [r0], -r8
  48:	08000b2c 	stmdaeq	r0, {r2, r3, r5, r8, r9, fp}
    while (length--) {
  4c:	0000011a 	andeq	r0, r0, sl, lsl r1
  50:	08000c46 	stmdaeq	r0, {r1, r2, r6, sl, fp}
  54:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    while (ST7789_SPI->SR & SPI_SR_BSY);
  58:	08000ef8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9, sl, fp}
  5c:	0000016c 	andeq	r0, r0, ip, ror #2
  60:	08001064 	stmdaeq	r0, {r2, r5, r6, ip}
    ST7789_SPI->CR1 |= SPI_CR1_BIDIOE;
  64:	00000078 	andeq	r0, r0, r8, ror r0
  68:	080010dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, ip}
  6c:	00000234 	andeq	r0, r0, r4, lsr r2
}
  70:	08001310 	stmdaeq	r0, {r4, r8, r9, ip}
  74:	00000154 	andeq	r0, r0, r4, asr r1
  78:	08001464 	stmdaeq	r0, {r2, r5, r6, sl, ip}
  7c:	00000282 	andeq	r0, r0, r2, lsl #5
        line = line + PIXEL_BUFFER_LINES;
  80:	080016e8 	stmdaeq	r0, {r3, r5, r6, r7, r9, sl, ip}
  84:	00000238 	andeq	r0, r0, r8, lsr r2
        batch += 1;
  88:	00000000 	andeq	r0, r0, r0
  8c:	000000c4 	andeq	r0, r0, r4, asr #1
  90:	08001920 	stmdaeq	r0, {r5, r8, fp, ip}
  94:	000000e0 	andeq	r0, r0, r0, ror #1
  98:	08001a00 	stmdaeq	r0, {r9, fp, ip}
  9c:	00000030 	andeq	r0, r0, r0, lsr r0
    while (line < ST7789_LCD_HEIGHT) {
  a0:	08001a30 	stmdaeq	r0, {r4, r5, r9, fp, ip}
  a4:	0000004c 	andeq	r0, r0, ip, asr #32
  a8:	08001a7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9, fp, ip}
    st7789_WaitNanosecs(2000000);
  ac:	00000108 	andeq	r0, r0, r8, lsl #2
  b0:	08001b84 	stmdaeq	r0, {r2, r7, r8, r9, fp, ip}
}
  b4:	00000080 	andeq	r0, r0, r0, lsl #1
  b8:	08001c04 	stmdaeq	r0, {r2, sl, fp, ip}
  bc:	0000001c 	andeq	r0, r0, ip, lsl r0
	...
  c8:	000000a4 	andeq	r0, r0, r4, lsr #1
  cc:	158b0002 	strne	r0, [fp, #2]
  d0:	00040000 	andeq	r0, r4, r0
  d4:	00000000 	andeq	r0, r0, r0
  d8:	08001c20 	stmdaeq	r0, {r5, sl, fp, ip}
  dc:	00000038 	andeq	r0, r0, r8, lsr r0
  e0:	08001c58 	stmdaeq	r0, {r3, r4, r6, sl, fp, ip}
  e4:	00000038 	andeq	r0, r0, r8, lsr r0
  e8:	08001c90 	stmdaeq	r0, {r4, r7, sl, fp, ip}
  ec:	00000020 	andeq	r0, r0, r0, lsr #32
  f0:	08001cb0 	stmdaeq	r0, {r4, r5, r7, sl, fp, ip}
  f4:	00000020 	andeq	r0, r0, r0, lsr #32
  f8:	08001cd0 	stmdaeq	r0, {r4, r6, r7, sl, fp, ip}
  fc:	00000030 	andeq	r0, r0, r0, lsr r0
 100:	00000000 	andeq	r0, r0, r0
 104:	00000080 	andeq	r0, r0, r0, lsl #1
 108:	08001d00 	stmdaeq	r0, {r8, sl, fp, ip}
 10c:	0000007c 	andeq	r0, r0, ip, ror r0
 110:	08001d7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, sl, fp, ip}
 114:	00000020 	andeq	r0, r0, r0, lsr #32
 118:	00000000 	andeq	r0, r0, r0
 11c:	0000002e 	andeq	r0, r0, lr, lsr #32
 120:	00000000 	andeq	r0, r0, r0
 124:	0000004a 	andeq	r0, r0, sl, asr #32
 128:	08001d9c 	stmdaeq	r0, {r2, r3, r4, r7, r8, sl, fp, ip}
 12c:	0000006c 	andeq	r0, r0, ip, rrx
 130:	08001e08 	stmdaeq	r0, {r3, r9, sl, fp, ip}
 134:	00000028 	andeq	r0, r0, r8, lsr #32
 138:	08001e30 	stmdaeq	r0, {r4, r5, r9, sl, fp, ip}
 13c:	00000214 	andeq	r0, r0, r4, lsl r2
 140:	08002044 	stmdaeq	r0, {r2, r6, sp}
 144:	00000016 	andeq	r0, r0, r6, lsl r0
 148:	0800205a 	stmdaeq	r0, {r1, r3, r4, r6, sp}
 14c:	000000d2 	ldrdeq	r0, [r0], -r2
 150:	0800212c 	stmdaeq	r0, {r2, r3, r5, r8, sp}
 154:	000000cc 	andeq	r0, r0, ip, asr #1
 158:	080021f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, sp}
 15c:	00000022 	andeq	r0, r0, r2, lsr #32
 160:	0800221a 	stmdaeq	r0, {r1, r3, r4, r9, sp}
 164:	00000044 	andeq	r0, r0, r4, asr #32
	...
 170:	00000024 	andeq	r0, r0, r4, lsr #32
 174:	1cbf0002 	ldcne	0, cr0, [pc], #8	; 184 <_Min_Heap_Size-0x7c>
 178:	00040000 	andeq	r0, r4, r0
 17c:	00000000 	andeq	r0, r0, r0
 180:	08002260 	stmdaeq	r0, {r5, r6, r9, sp}
 184:	00000024 	andeq	r0, r0, r4, lsr #32
 188:	08002284 	stmdaeq	r0, {r2, r7, r9, sp}
 18c:	00000100 	andeq	r0, r0, r0, lsl #2
	...
 198:	00000024 	andeq	r0, r0, r4, lsr #32
 19c:	21f20002 	mvnscs	r0, r2
 1a0:	00040000 	andeq	r0, r4, r0
 1a4:	00000000 	andeq	r0, r0, r0
 1a8:	08002384 	stmdaeq	r0, {r2, r7, r8, r9, sp}
 1ac:	00000050 	andeq	r0, r0, r0, asr r0
 1b0:	080023d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, r9, sp}
 1b4:	00000002 	andeq	r0, r0, r2
	...
 1c0:	0000001c 	andeq	r0, r0, ip, lsl r0
 1c4:	22140002 	andscs	r0, r4, #2
 1c8:	00040000 	andeq	r0, r4, r0
 1cc:	00000000 	andeq	r0, r0, r0
 1d0:	08000194 	stmdaeq	r0, {r2, r4, r7, r8}
 1d4:	000000a0 	andeq	r0, r0, r0, lsr #1
	...
 1e0:	0000001c 	andeq	r0, r0, ip, lsl r0
 1e4:	22390002 	eorscs	r0, r9, #2
 1e8:	00040000 	andeq	r0, r4, r0
 1ec:	00000000 	andeq	r0, r0, r0
 1f0:	080023d6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r8, r9, sp}
 1f4:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
 200:	0000001c 	andeq	r0, r0, ip, lsl r0
 204:	25610002 	strbcs	r0, [r1, #-2]!
 208:	00040000 	andeq	r0, r4, r0
 20c:	00000000 	andeq	r0, r0, r0
 210:	08002404 	stmdaeq	r0, {r2, sl, sp}
 214:	00000040 	andeq	r0, r0, r0, asr #32
	...
 220:	0000001c 	andeq	r0, r0, ip, lsl r0
 224:	29000002 	stmdbcs	r0, {r1}
 228:	00040000 	andeq	r0, r4, r0
 22c:	00000000 	andeq	r0, r0, r0
 230:	08002444 	stmdaeq	r0, {r2, r6, sl, sp}
 234:	0000027a 	andeq	r0, r0, sl, ror r2
	...
 240:	0000001c 	andeq	r0, r0, ip, lsl r0
 244:	2fe40002 	svccs	0x00e40002
 248:	00040000 	andeq	r0, r4, r0
 24c:	00000000 	andeq	r0, r0, r0
 250:	08000234 	stmdaeq	r0, {r2, r4, r5, r9}
 254:	00000254 	andeq	r0, r0, r4, asr r2
	...
 260:	0000001c 	andeq	r0, r0, ip, lsl r0
 264:	30090002 	andcc	r0, r9, r2
 268:	00040000 	andeq	r0, r4, r0
 26c:	00000000 	andeq	r0, r0, r0
 270:	08000488 	stmdaeq	r0, {r3, r7, sl}
 274:	00000002 	andeq	r0, r0, r2
	...
 280:	0000001c 	andeq	r0, r0, ip, lsl r0
 284:	302d0002 	eorcc	r0, sp, r2
 288:	00040000 	andeq	r0, r4, r0
 28c:	00000000 	andeq	r0, r0, r0
 290:	0800048c 	stmdaeq	r0, {r2, r3, r7, sl}
 294:	00000376 	andeq	r0, r0, r6, ror r3
	...
 2a0:	0000001c 	andeq	r0, r0, ip, lsl r0
 2a4:	30520002 	subscc	r0, r2, r2
 2a8:	00040000 	andeq	r0, r4, r0
 2ac:	00000000 	andeq	r0, r0, r0
 2b0:	08000804 	stmdaeq	r0, {r2, fp}
 2b4:	00000040 	andeq	r0, r0, r0, asr #32
	...

Disassembly of section .debug_rnglists:

00000000 <.debug_rnglists>:
void st7789_ReadSpi(uint8_t *data, size_t length) {
   0:	00000099 	muleq	r0, r9, r0
   4:	00040005 	andeq	r0, r4, r5
   8:	00000000 	andeq	r0, r0, r0
    ST7789_SPI->CR1 &= ~(SPI_CR1_BIDIOE);
   c:	0009a407 	andeq	sl, r9, r7, lsl #8
  10:	f8075408 			; <UNDEFINED> instruction: 0xf8075408
  14:	44080009 	strmi	r0, [r8], #-9
    uint8_t dummy = 0;
  18:	000a3c07 	andeq	r3, sl, r7, lsl #24
        while (!(ST7789_SPI->SR & SPI_SR_TXE));
  1c:	00073808 	andeq	r3, r7, r8, lsl #16
  20:	5c000000 	stcpl	0, cr0, [r0], {-0}
  24:	00000007 	andeq	r0, r0, r7
  28:	00071800 	andeq	r1, r7, r0, lsl #16
        ST7789_SPI->DR = dummy;
  2c:	4c000000 	stcmi	0, cr0, [r0], {-0}
        while (!(ST7789_SPI->SR & SPI_SR_RXNE));
  30:	000a7407 	andeq	r7, sl, r7, lsl #8
  34:	0701b808 	streq	fp, [r1, -r8, lsl #16]
  38:	08000b2c 	stmdaeq	r0, {r2, r3, r5, r8, r9, fp}
  3c:	4607029a 			; <UNDEFINED> instruction: 0x4607029a
        *data++ = ST7789_SPI->DR;
  40:	b208000c 	andlt	r0, r8, #12
  44:	0ef80705 	cdpeq	7, 15, cr0, cr8, cr5, {0}
  48:	02ec0800 	rsceq	r0, ip, #0, 16
    while (length--) {
  4c:	00106407 	andseq	r6, r0, r7, lsl #8
  50:	dc077808 	stcle	8, cr7, [r7], {8}
  54:	b4080010 	strlt	r0, [r8], #-16
    while (ST7789_SPI->SR & SPI_SR_BSY);
  58:	13100704 	tstne	r0, #4, 14	; 0x100000
  5c:	02d40800 	sbcseq	r0, r4, #0, 16
  60:	00146407 	andseq	r6, r4, r7, lsl #8
    ST7789_SPI->CR1 |= SPI_CR1_BIDIOE;
  64:	07058208 	streq	r8, [r5, -r8, lsl #4]
  68:	080016e8 	stmdaeq	r0, {r3, r5, r6, r7, r9, sl, ip}
  6c:	000704b8 			; <UNDEFINED> instruction: 0x000704b8
}
  70:	c4000000 	strgt	r0, [r0], #-0
  74:	19200701 	stmdbne	r0!, {r0, r8, r9, sl}
  78:	01e00800 	mvneq	r0, r0, lsl #16
  7c:	001a0007 	andseq	r0, sl, r7
        line = line + PIXEL_BUFFER_LINES;
  80:	30073008 	andcc	r3, r7, r8
  84:	4c08001a 	stcmi	0, cr0, [r8], {26}
        batch += 1;
  88:	001a7c07 	andseq	r7, sl, r7, lsl #24
  8c:	07028808 	streq	r8, [r2, -r8, lsl #16]
  90:	08001b84 	stmdaeq	r0, {r2, r7, r8, r9, fp, ip}
  94:	04070180 	streq	r0, [r7], #-384	; 0xfffffe80
  98:	1c08001c 	stcne	0, cr0, [r8], {28}
  9c:	00007900 	andeq	r7, r0, r0, lsl #18
    while (line < ST7789_LCD_HEIGHT) {
  a0:	04000500 	streq	r0, [r0], #-1280	; 0xfffffb00
  a4:	00000000 	andeq	r0, r0, r0
  a8:	1c200700 	stcne	7, cr0, [r0], #-0
    st7789_WaitNanosecs(2000000);
  ac:	07380800 	ldreq	r0, [r8, -r0, lsl #16]!
  b0:	08001c58 	stmdaeq	r0, {r3, r4, r6, sl, fp, ip}
}
  b4:	1c900738 	ldcne	7, cr0, [r0], {56}	; 0x38
  b8:	07200800 	streq	r0, [r0, -r0, lsl #16]!
  bc:	08001cb0 	stmdaeq	r0, {r4, r5, r7, sl, fp, ip}
  c0:	1cd00720 	ldclne	7, cr0, [r0], {32}
  c4:	07300800 	ldreq	r0, [r0, -r0, lsl #16]!
  c8:	00000000 	andeq	r0, r0, r0
  cc:	00070180 	andeq	r0, r7, r0, lsl #3
  d0:	7c08001d 	stcvc	0, cr0, [r8], {29}
  d4:	001d7c07 	andseq	r7, sp, r7, lsl #24
  d8:	00072008 	andeq	r2, r7, r8
  dc:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
  e0:	00000007 	andeq	r0, r0, r7
  e4:	9c074a00 			; <UNDEFINED> instruction: 0x9c074a00
  e8:	6c08001d 	stcvs	0, cr0, [r8], {29}
  ec:	001e0807 	andseq	r0, lr, r7, lsl #16
  f0:	30072808 	andcc	r2, r7, r8, lsl #16
  f4:	9408001e 	strls	r0, [r8], #-30	; 0xffffffe2
  f8:	20440704 	subcs	r0, r4, r4, lsl #14
  fc:	07160800 	ldreq	r0, [r6, -r0, lsl #16]
 100:	0800205a 	stmdaeq	r0, {r1, r3, r4, r6, sp}
 104:	2c0701d2 	stfcss	f0, [r7], {210}	; 0xd2
 108:	cc080021 	stcgt	0, cr0, [r8], {33}	; 0x21
 10c:	21f80701 	mvnscs	r0, r1, lsl #14
 110:	07220800 	streq	r0, [r2, -r0, lsl #16]!
 114:	0800221a 	stmdaeq	r0, {r1, r3, r4, r9, sp}
 118:	00160044 	andseq	r0, r6, r4, asr #32
 11c:	00050000 	andeq	r0, r5, r0
 120:	00000004 	andeq	r0, r0, r4
 124:	60070000 	andvs	r0, r7, r0
 128:	24080022 	strcs	r0, [r8], #-34	; 0xffffffde
 12c:	00228407 	eoreq	r8, r2, r7, lsl #8
 130:	00028008 	andeq	r8, r2, r8
 134:	0000000f 	andeq	r0, r0, pc
 138:	00040005 	andeq	r0, r4, r5
 13c:	00000000 	andeq	r0, r0, r0
 140:	0023d607 	eoreq	sp, r3, r7, lsl #12
 144:	0f002c08 	svceq	0x00002c08
 148:	05000000 	streq	r0, [r0, #-0]
 14c:	00000400 	andeq	r0, r0, r0, lsl #8
 150:	07000000 	streq	r0, [r0, -r0]
 154:	08002404 	stmdaeq	r0, {r2, sl, sp}
 158:	006d0040 	rsbeq	r0, sp, r0, asr #32
 15c:	00050000 	andeq	r0, r5, r0
 160:	00000004 	andeq	r0, r0, r4
 164:	78050000 	stmdavc	r5, {}	; <UNPREDICTABLE>
 168:	04080024 	streq	r0, [r8], #-36	; 0xffffffdc
 16c:	6e043200 	cdpvs	2, 0, cr3, cr4, cr0, {0}
 170:	aa050072 	bge	140340 <_Min_Stack_Size+0x13ff40>
 174:	04080024 	streq	r0, [r8], #-36	; 0xffffffdc
 178:	4c042e00 	stcmi	14, cr2, [r4], {-0}
 17c:	86040180 	strhi	r0, [r4], -r0, lsl #3
 180:	00028e02 	andeq	r8, r2, r2, lsl #28
 184:	00254005 	eoreq	r4, r5, r5
 188:	1a000408 	bne	11b0 <_Min_Stack_Size+0xdb0>
 18c:	00701e04 	rsbseq	r1, r0, r4, lsl #28
 190:	0025e805 	eoreq	lr, r5, r5, lsl #16
 194:	04000408 	streq	r0, [r0], #-1032	; 0xfffffbf8
 198:	01d60804 	bicseq	r0, r6, r4, lsl #16
 19c:	260c0500 	strcs	r0, [ip], -r0, lsl #10
 1a0:	00040800 	andeq	r0, r4, r0, lsl #16
 1a4:	20080404 	andcs	r0, r8, r4, lsl #8
 1a8:	04682404 	strbteq	r2, [r8], #-1028	; 0xfffffbfc
 1ac:	a604706c 	strge	r7, [r4], -ip, rrx
 1b0:	0001ae01 	andeq	sl, r1, r1, lsl #28
 1b4:	00267405 	eoreq	r7, r6, r5, lsl #8
 1b8:	04000408 	streq	r0, [r0], #-1032	; 0xfffffbf8
 1bc:	04080804 	streq	r0, [r8], #-2052	; 0xfffff7fc
 1c0:	07000e0a 	streq	r0, [r0, -sl, lsl #28]
 1c4:	08002444 	stmdaeq	r0, {r2, r6, sl, sp}
 1c8:	Address 0x00000000000001c8 is out of bounds.


Disassembly of section .debug_line:

00000000 <.debug_line>:
void st7789_ReadSpi(uint8_t *data, size_t length) {
       0:	00000d1e 	andeq	r0, r0, lr, lsl sp
       4:	025d0003 	subseq	r0, sp, #3
       8:	01020000 	mrseq	r0, (UNDEF: 2)
    ST7789_SPI->CR1 &= ~(SPI_CR1_BIDIOE);
       c:	000d0efb 	strdeq	r0, [sp], -fp
      10:	01010101 	tsteq	r1, r1, lsl #2
      14:	01000000 	mrseq	r0, (UNDEF: 0)
    uint8_t dummy = 0;
      18:	2f010000 	svccs	0x00010000
        while (!(ST7789_SPI->SR & SPI_SR_TXE));
      1c:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
      20:	6d73692f 			; <UNDEFINED> instruction: 0x6d73692f
      24:	2f6c696f 	svccs	0x006c696f
      28:	6a6f7270 	bvs	1bdc9f0 <_Min_Stack_Size+0x1bdc5f0>
        ST7789_SPI->DR = dummy;
      2c:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
        while (!(ST7789_SPI->SR & SPI_SR_RXNE));
      30:	55434d2f 	strbpl	r4, [r3, #-3375]	; 0xfffff2d1
      34:	3774732f 	ldrbcc	r7, [r4, -pc, lsr #6]!
      38:	2f393837 	svccs	0x00393837
      3c:	37377473 			; <UNDEFINED> instruction: 0x37377473
        *data++ = ST7789_SPI->DR;
      40:	635f3938 	cmpvs	pc, #56, 18	; 0xe0000
      44:	7369736d 	cmnvc	r9, #-1275068415	; 0xb4000001
      48:	616c625f 	cmnvs	ip, pc, asr r2
    while (length--) {
      4c:	705f6b63 	subsvc	r6, pc, r3, ror #22
      50:	2f6c6c69 	svccs	0x006c6c69
      54:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    while (ST7789_SPI->SR & SPI_SR_BSY);
      58:	2f737265 	svccs	0x00737265
      5c:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
      60:	6e492f53 	mcrvs	15, 2, r2, cr9, cr3, {2}
    ST7789_SPI->CR1 |= SPI_CR1_BIDIOE;
      64:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
      68:	682f0065 	stmdavs	pc!, {r0, r2, r5, r6}	; <UNPREDICTABLE>
      6c:	2f656d6f 	svccs	0x00656d6f
}
      70:	6f6d7369 	svcvs	0x006d7369
      74:	702f6c69 	eorvc	r6, pc, r9, ror #24
      78:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
      7c:	2f737463 	svccs	0x00737463
        line = line + PIXEL_BUFFER_LINES;
      80:	2f55434d 	svccs	0x0055434d
      84:	37377473 			; <UNDEFINED> instruction: 0x37377473
        batch += 1;
      88:	732f3938 			; <UNDEFINED> instruction: 0x732f3938
      8c:	38373774 	ldmdacc	r7!, {r2, r4, r5, r6, r8, r9, sl, ip, sp}
      90:	6d635f39 	stclvs	15, cr5, [r3, #-228]!	; 0xffffff1c
      94:	5f736973 	svcpl	0x00736973
      98:	63616c62 	cmnvs	r1, #25088	; 0x6200
      9c:	69705f6b 	ldmdbvs	r0!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    while (line < ST7789_LCD_HEIGHT) {
      a0:	432f6c6c 			; <UNDEFINED> instruction: 0x432f6c6c
      a4:	2f65726f 	svccs	0x0065726f
      a8:	00637253 	rsbeq	r7, r3, r3, asr r2
    st7789_WaitNanosecs(2000000);
      ac:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; fffffff8 <_estack+0xdffefff8>
      b0:	73692f65 	cmnvc	r9, #404	; 0x194
}
      b4:	6c696f6d 	stclvs	15, cr6, [r9], #-436	; 0xfffffe4c
      b8:	6f72702f 	svcvs	0x0072702f
      bc:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
      c0:	434d2f73 	movtmi	r2, #57203	; 0xdf73
      c4:	74732f55 	ldrbtvc	r2, [r3], #-3925	; 0xfffff0ab
      c8:	39383737 	ldmdbcc	r8!, {r0, r1, r2, r4, r5, r8, r9, sl, ip, sp}
      cc:	3774732f 	ldrbcc	r7, [r4, -pc, lsr #6]!
      d0:	5f393837 	svcpl	0x00393837
      d4:	69736d63 	ldmdbvs	r3!, {r0, r1, r5, r6, r8, sl, fp, sp, lr}^
      d8:	6c625f73 	stclvs	15, cr5, [r2], #-460	; 0xfffffe34
      dc:	5f6b6361 	svcpl	0x006b6361
      e0:	6c6c6970 			; <UNDEFINED> instruction: 0x6c6c6970
      e4:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
      e8:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
      ec:	534d432f 	movtpl	r4, #54063	; 0xd32f
      f0:	442f5349 	strtmi	r5, [pc], #-841	; f8 <_Min_Heap_Size-0x108>
      f4:	63697665 	cmnvs	r9, #105906176	; 0x6500000
      f8:	54532f65 	ldrbpl	r2, [r3], #-3941	; 0xfffff09b
      fc:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
     100:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
     104:	492f7878 	stmdbmi	pc!, {r3, r4, r5, r6, fp, ip, sp, lr}	; <UNPREDICTABLE>
     108:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     10c:	2f006564 	svccs	0x00006564
     110:	2f727375 	svccs	0x00727375
     114:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     118:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     11c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     120:	6e692f69 	cdpvs	15, 6, cr2, cr9, cr9, {3}
     124:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     128:	616d2f65 	cmnvs	sp, r5, ror #30
     12c:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
     130:	752f0065 	strvc	r0, [pc, #-101]!	; d3 <_Min_Heap_Size-0x12d>
     134:	612f7273 			; <UNDEFINED> instruction: 0x612f7273
     138:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     13c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     140:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     144:	636e692f 	cmnvs	lr, #770048	; 0xbc000
     148:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     14c:	7379732f 	cmnvc	r9, #-1140850688	; 0xbc000000
     150:	73752f00 	cmnvc	r5, #0, 30
     154:	696c2f72 	stmdbvs	ip!, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
     158:	63672f62 	cmnvs	r7, #392	; 0x188
     15c:	72612f63 	rsbvc	r2, r1, #396	; 0x18c
     160:	6f6e2d6d 	svcvs	0x006e2d6d
     164:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     168:	2f696261 	svccs	0x00696261
     16c:	322e3131 	eorcc	r3, lr, #1073741836	; 0x4000000c
     170:	692f302e 	stmdbvs	pc!, {r1, r2, r3, r5, ip, sp}	; <UNPREDICTABLE>
     174:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     178:	2f006564 	svccs	0x00006564
     17c:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
     180:	6d73692f 			; <UNDEFINED> instruction: 0x6d73692f
     184:	2f6c696f 	svccs	0x006c696f
     188:	6a6f7270 	bvs	1bdcb50 <_Min_Stack_Size+0x1bdc750>
     18c:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
     190:	55434d2f 	strbpl	r4, [r3, #-3375]	; 0xfffff2d1
     194:	3774732f 	ldrbcc	r7, [r4, -pc, lsr #6]!
     198:	2f393837 	svccs	0x00393837
     19c:	37377473 			; <UNDEFINED> instruction: 0x37377473
     1a0:	635f3938 	cmpvs	pc, #56, 18	; 0xe0000
     1a4:	7369736d 	cmnvc	r9, #-1275068415	; 0xb4000001
     1a8:	616c625f 	cmnvs	ip, pc, asr r2
     1ac:	705f6b63 	subsvc	r6, pc, r3, ror #22
     1b0:	2f6c6c69 	svccs	0x006c6c69
     1b4:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
     1b8:	636e492f 	cmnvs	lr, #770048	; 0xbc000
     1bc:	73752f00 	cmnvc	r5, #0, 30
     1c0:	72612f72 	rsbvc	r2, r1, #456	; 0x1c8
     1c4:	6f6e2d6d 	svcvs	0x006e2d6d
     1c8:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     1cc:	2f696261 	svccs	0x00696261
     1d0:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     1d4:	00656475 	rsbeq	r6, r5, r5, ror r4
     1d8:	726f6300 	rsbvc	r6, pc, #0, 6
     1dc:	6d635f65 	stclvs	15, cr5, [r3, #-404]!	; 0xfffffe6c
     1e0:	00682e34 	rsbeq	r2, r8, r4, lsr lr
     1e4:	6d000001 	stcvs	0, cr0, [r0, #-4]
     1e8:	2e6e6961 	vnmulcs.f16	s13, s28, s3	; <UNPREDICTABLE>
     1ec:	00020063 	andeq	r0, r2, r3, rrx
     1f0:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     1f4:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     1f8:	63783130 	cmnvs	r8, #48, 2
     1fc:	0300682e 	movweq	r6, #2094	; 0x82e
     200:	645f0000 	ldrbvs	r0, [pc], #-0	; 208 <_Min_Heap_Size+0x8>
     204:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
     208:	745f746c 	ldrbvc	r7, [pc], #-1132	; 210 <_Min_Heap_Size+0x10>
     20c:	73657079 	cmnvc	r5, #121	; 0x79
     210:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
     214:	735f0000 	cmpvc	pc, #0
     218:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
     21c:	00682e74 	rsbeq	r2, r8, r4, ror lr
     220:	73000005 	movwvc	r0, #5
     224:	65646474 	strbvs	r6, [r4, #-1140]!	; 0xfffffb8c
     228:	00682e66 	rsbeq	r2, r8, r6, ror #28
     22c:	73000006 	movwvc	r0, #6
     230:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
     234:	74735f6d 	ldrbtvc	r5, [r3], #-3949	; 0xfffff093
     238:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     23c:	2e787834 	mrccs	8, 3, r7, cr8, cr4, {1}
     240:	00030068 	andeq	r0, r3, r8, rrx
     244:	37747300 	ldrbcc	r7, [r4, -r0, lsl #6]!
     248:	2e393837 	mrccs	8, 1, r3, cr9, cr7, {1}
     24c:	00070068 	andeq	r0, r7, r8, rrx
     250:	63767300 	cmnvs	r6, #0, 6
     254:	0700682e 	streq	r6, [r0, -lr, lsr #16]
     258:	74730000 	ldrbtvc	r0, [r3], #-0
     25c:	62696c64 	rsbvs	r6, r9, #100, 24	; 0x6400
     260:	0800682e 	stmdaeq	r0, {r1, r2, r3, r5, fp, sp, lr}
     264:	05000000 	streq	r0, [r0, #-0]
     268:	02050001 	andeq	r0, r5, #1
     26c:	080009a4 	stmdaeq	r0, {r2, r5, r7, r8, fp}
     270:	010e9803 	tsteq	lr, r3, lsl #16
     274:	05670605 	strbeq	r0, [r7, #-1541]!	; 0xfffff9fb
     278:	09054c30 	stmdbeq	r5, {r4, r5, sl, fp, lr}
     27c:	200f052e 	andcs	r0, pc, lr, lsr #10
     280:	052e3005 	streq	r3, [lr, #-5]!
     284:	01052e2e 	tsteq	r5, lr, lsr #28
     288:	1e300542 	cdpne	5, 3, cr0, cr0, cr2, {2}
     28c:	052e0805 	streq	r0, [lr, #-2053]!	; 0xfffff7fb
     290:	28052020 	stmdacs	r5, {r5, sp}
     294:	2030053c 	eorscs	r0, r0, ip, lsr r5
     298:	052e2e05 	streq	r2, [lr, #-3589]!	; 0xfffff1fb
     29c:	0a023001 	beq	8c2a8 <_Min_Stack_Size+0x8bea8>
     2a0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     2a4:	02050001 	andeq	r0, r5, #1
     2a8:	080009f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, fp}
     2ac:	010fe603 	tsteq	pc, r3, lsl #12
     2b0:	054b0e05 	strbeq	r0, [fp, #-3589]	; 0xfffff1fb
     2b4:	0c052e06 	stceq	14, cr2, [r5], {6}
     2b8:	310a053e 	tstcc	sl, lr, lsr r5
     2bc:	05201405 	streq	r1, [r0, #-1029]!	; 0xfffffbfb
     2c0:	03052e12 	movweq	r2, #24082	; 0x5e12
     2c4:	590a0521 	stmdbpl	sl, {r0, r5, r8, sl}
     2c8:	05201205 	streq	r1, [r0, #-517]!	; 0xfffffdfb
     2cc:	12052f0a 	andne	r2, r5, #10, 30	; 0x28
     2d0:	310a0520 	tstcc	sl, r0, lsr #10
     2d4:	02210105 	eoreq	r0, r1, #1073741825	; 0x40000001
     2d8:	01010007 	tsteq	r1, r7
     2dc:	17050204 	strne	r0, [r5, -r4, lsl #4]
     2e0:	3c020500 	cfstr32cc	mvfx0, [r2], {-0}
     2e4:	0308000a 	movweq	r0, #32778	; 0x800a
     2e8:	1205011a 	andne	r0, r5, #-2147483642	; 0x80000006
     2ec:	6709052f 	strvs	r0, [r9, -pc, lsr #10]
     2f0:	3e200f05 	cdpcc	15, 2, cr0, cr0, cr5, {0}
     2f4:	02670105 	rsbeq	r0, r7, #1073741825	; 0x40000001
     2f8:	0101000a 	tsteq	r1, sl
     2fc:	13050204 	movwne	r0, #20996	; 0x5204
     300:	00020500 	andeq	r0, r2, r0, lsl #10
     304:	03000000 	movweq	r0, #0
     308:	0e050122 	adfeqsp	f0, f5, f2
     30c:	2e14053e 	mrccs	5, 0, r0, cr4, cr14, {1}
     310:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
     314:	052f590b 	streq	r5, [pc, #-2315]!	; fffffa11 <_estack+0xdffefa11>
     318:	0c05210f 	stfeqs	f2, [r5], {15}
     31c:	2e14053b 	mrccs	5, 0, r0, cr4, cr11, {1}
     320:	05310d05 	ldreq	r0, [r1, #-3333]!	; 0xfffff2fb
     324:	0d053d0b 	stceq	13, cr3, [r5, #-44]	; 0xffffffd4
     328:	3d05053d 	cfstr32cc	mvfx0, [r5, #-244]	; 0xffffff0c
     32c:	023d0105 	eorseq	r0, sp, #1073741825	; 0x40000001
     330:	0101000a 	tsteq	r1, sl
     334:	18050204 	stmdane	r5, {r2, r9}
     338:	00020500 	andeq	r0, r2, r0, lsl #10
     33c:	03000000 	movweq	r0, #0
     340:	09050130 	stmdbeq	r5, {r4, r5, r8}
     344:	200f052f 	andcs	r0, pc, pc, lsr #10
     348:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
     34c:	01010007 	tsteq	r1, r7
     350:	21050204 	tstcs	r5, r4, lsl #4
     354:	00020500 	andeq	r0, r2, r0, lsl #10
     358:	03000000 	movweq	r0, #0
     35c:	05050135 	streq	r0, [r5, #-309]	; 0xfffffecb
     360:	590b054c 	stmdbpl	fp, {r2, r3, r6, r8, sl}
     364:	210f052f 	tstcs	pc, pc, lsr #10
     368:	053b0c05 	ldreq	r0, [fp, #-3077]!	; 0xfffff3fb
     36c:	0d052e14 	stceq	14, cr2, [r5, #-80]	; 0xffffffb0
     370:	3d0b0531 	cfstr32cc	mvfx0, [fp, #-196]	; 0xffffff3c
     374:	053d0d05 	ldreq	r0, [sp, #-3333]!	; 0xfffff2fb
     378:	01053d05 	tsteq	r5, r5, lsl #26
     37c:	0007023d 	andeq	r0, r7, sp, lsr r2
     380:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
     384:	05001f05 	streq	r1, [r0, #-3845]	; 0xfffff0fb
     388:	000a7402 	andeq	r7, sl, r2, lsl #8
     38c:	00c30308 	sbceq	r0, r3, r8, lsl #6
     390:	30120501 	andscc	r0, r2, r1, lsl #10
     394:	870f0567 	strhi	r0, [pc, -r7, ror #10]
     398:	05201405 	streq	r1, [r0, #-1029]!	; 0xfffffbfb
     39c:	1505300f 	strne	r3, [r5, #-15]
     3a0:	1b054320 	blne	151028 <_Min_Stack_Size+0x150c28>
     3a4:	671c056b 	ldrvs	r0, [ip, -fp, ror #10]
     3a8:	05681d05 	strbeq	r1, [r8, #-3333]!	; 0xfffff2fb
     3ac:	0505671e 	streq	r6, [r5, #-1822]	; 0xfffff8e2
     3b0:	85660b03 	strbhi	r0, [r6, #-2819]!	; 0xfffff4fd
     3b4:	03010569 	movweq	r0, #5481	; 0x1569
     3b8:	0d02ba0b 	vstreq	s22, [r2, #-44]	; 0xffffffd4
     3bc:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
     3c0:	001c0502 	andseq	r0, ip, r2, lsl #10
     3c4:	0b2c0205 	bleq	b00be0 <_Min_Stack_Size+0xb007e0>
     3c8:	fc030800 	stc2	8, cr0, [r3], {-0}
     3cc:	12050100 	andne	r0, r5, #0, 2
     3d0:	2e05053d 	mcrcs	5, 0, r0, cr5, cr13, {1}
     3d4:	02000905 	andeq	r0, r0, #81920	; 0x14000
     3d8:	05210304 	streq	r0, [r1, #-772]!	; 0xfffffcfc
     3dc:	04020030 	streq	r0, [r2], #-48	; 0xffffffd0
     3e0:	23059d03 	movwcs	r9, #23811	; 0x5d03
     3e4:	01040200 	mrseq	r0, R12_usr
     3e8:	3f12053c 	svccc	0x0012053c
     3ec:	052e0505 	streq	r0, [lr, #-1285]!	; 0xfffffafb
     3f0:	04020009 	streq	r0, [r2], #-9
     3f4:	30052103 	andcc	r2, r5, r3, lsl #2
     3f8:	03040200 	movweq	r0, #16896	; 0x4200
     3fc:	0025059d 	mlaeq	r5, sp, r5, r0
     400:	3c010402 	cfstrscc	mvf0, [r1], {2}
     404:	053f1205 	ldreq	r1, [pc, #-517]!	; 207 <_Min_Heap_Size+0x7>
     408:	09052e05 	stmdbeq	r5, {r0, r2, r9, sl, fp, sp}
     40c:	03040200 	movweq	r0, #16896	; 0x4200
     410:	00300521 	eorseq	r0, r0, r1, lsr #10
     414:	9d030402 	cfstrsls	mvf0, [r3, #-8]
     418:	02002305 	andeq	r2, r0, #335544320	; 0x14000000
     41c:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
     420:	05053f12 	streq	r3, [r5, #-3858]	; 0xfffff0ee
     424:	0009052e 	andeq	r0, r9, lr, lsr #10
     428:	21030402 	tstcs	r3, r2, lsl #8
     42c:	02003005 	andeq	r3, r0, #5
     430:	059d0304 	ldreq	r0, [sp, #772]	; 0x304
     434:	04020025 	streq	r0, [r2], #-37	; 0xffffffdb
     438:	12053c01 	andne	r3, r5, #256	; 0x100
     43c:	2e05053f 	mcrcs	5, 0, r0, cr5, cr15, {1}
     440:	02000905 	andeq	r0, r0, #81920	; 0x14000
     444:	05210304 	streq	r0, [r1, #-772]!	; 0xfffffcfc
     448:	04020030 	streq	r0, [r2], #-48	; 0xffffffd0
     44c:	23059d03 	movwcs	r9, #23811	; 0x5d03
     450:	01040200 	mrseq	r0, R12_usr
     454:	3f12053c 	svccc	0x0012053c
     458:	052e0505 	streq	r0, [lr, #-1285]!	; 0xfffffafb
     45c:	04020009 	streq	r0, [r2], #-9
     460:	30052103 	andcc	r2, r5, r3, lsl #2
     464:	03040200 	movweq	r0, #16896	; 0x4200
     468:	0025059d 	mlaeq	r5, sp, r5, r0
     46c:	3c010402 	cfstrscc	mvf0, [r1], {2}
     470:	053f1205 	ldreq	r1, [pc, #-517]!	; 273 <_Min_Heap_Size+0x73>
     474:	09052e05 	stmdbeq	r5, {r0, r2, r9, sl, fp, sp}
     478:	03040200 	movweq	r0, #16896	; 0x4200
     47c:	00300521 	eorseq	r0, r0, r1, lsr #10
     480:	9d030402 	cfstrsls	mvf0, [r3, #-8]
     484:	02002505 	andeq	r2, r0, #20971520	; 0x1400000
     488:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
     48c:	05023f01 	streq	r3, [r2, #-3841]	; 0xfffff0ff
     490:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
     494:	00570502 	subseq	r0, r7, r2, lsl #10
     498:	0c460205 	sfmeq	f0, 2, [r6], {5}
     49c:	95030800 	strls	r0, [r3, #-2048]	; 0xfffff800
     4a0:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
     4a4:	30058308 	andcc	r8, r5, r8, lsl #6
     4a8:	e40a052f 	str	r0, [sl], #-1327	; 0xfffffad1
     4ac:	05673005 	strbeq	r3, [r7, #-5]!
     4b0:	3705e40a 	strcc	lr, [r5, -sl, lsl #8]
     4b4:	e40a0567 	str	r0, [sl], #-1383	; 0xfffffa99
     4b8:	08670c05 	stmdaeq	r7!, {r0, r2, sl, fp}^
     4bc:	080f053d 	stmdaeq	pc, {r0, r2, r3, r4, r5, r8, sl}	; <UNPREDICTABLE>
     4c0:	4b0e053e 	blmi	3819c0 <_Min_Stack_Size+0x3815c0>
     4c4:	76130575 			; <UNDEFINED> instruction: 0x76130575
     4c8:	053c0505 	ldreq	r0, [ip, #-1285]!	; 0xfffffafb
     4cc:	4e052128 	adfmisp	f2, f5, #0.0
     4d0:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
     4d4:	002e0601 	eoreq	r0, lr, r1, lsl #12
     4d8:	58020402 	stmdapl	r2, {r1, sl}
     4dc:	02001305 	andeq	r1, r0, #335544320	; 0x14000000
     4e0:	2e060404 	cdpcs	4, 0, cr0, cr6, cr4, {0}
     4e4:	02002705 	andeq	r2, r0, #1310720	; 0x140000
     4e8:	052f0404 	streq	r0, [pc, #-1028]!	; ec <_Min_Heap_Size-0x114>
     4ec:	04020038 	streq	r0, [r2], #-56	; 0xffffffc8
     4f0:	02004a04 	andeq	r4, r0, #4, 20	; 0x4000
     4f4:	2e060104 	adfcss	f0, f6, f4
     4f8:	02040200 	andeq	r0, r4, #0, 4
     4fc:	00130558 	andseq	r0, r3, r8, asr r5
     500:	06040402 	streq	r0, [r4], -r2, lsl #8
     504:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
     508:	0c052f04 	stceq	15, cr2, [r5], {4}
     50c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     510:	4b0d054b 	blmi	341a44 <_Min_Stack_Size+0x341644>
     514:	05680c05 	strbeq	r0, [r8, #-3077]!	; 0xfffff3fb
     518:	1b054b16 	blne	153178 <_Min_Stack_Size+0x152d78>
     51c:	3c0d0575 	cfstr32cc	mvfx0, [sp], {117}	; 0x75
     520:	05212405 	streq	r2, [r1, #-1029]!	; 0xfffffbfb
     524:	04020049 	streq	r0, [r2], #-73	; 0xffffffb7
     528:	24056601 	strcs	r6, [r5], #-1537	; 0xfffff9ff
     52c:	02040200 	andeq	r0, r4, #0, 4
     530:	1b051208 	blne	144d58 <_Min_Stack_Size+0x144958>
     534:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     538:	0024052e 	eoreq	r0, r4, lr, lsr #10
     53c:	66040402 	strvs	r0, [r4], -r2, lsl #8
     540:	02001905 	andeq	r1, r0, #81920	; 0x14000
     544:	052f0404 	streq	r0, [pc, #-1028]!	; 148 <_Min_Heap_Size-0xb8>
     548:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
     54c:	15055904 	strne	r5, [r5, #-2308]	; 0xfffff6fc
     550:	9e1f0591 	cfcmp32ls	r0, mvfx15, mvfx1
     554:	05831e05 	streq	r1, [r3, #3589]	; 0xe05
     558:	04020042 	streq	r0, [r2], #-66	; 0xffffffbe
     55c:	2e053702 	cdpcs	7, 0, cr3, cr5, cr2, {0}
     560:	01040200 	mrseq	r0, R12_usr
     564:	030c0558 	movweq	r0, #50520	; 0xc558
     568:	0d054a09 	vstreq	s8, [r5, #-36]	; 0xffffffdc
     56c:	3011054b 	andscc	r0, r1, fp, asr #10
     570:	05590c05 	ldrbeq	r0, [r9, #-3077]	; 0xfffff3fb
     574:	1705910d 	strne	r9, [r5, -sp, lsl #2]
     578:	8316059e 	tsthi	r6, #662700032	; 0x27800000
     57c:	02003b05 	andeq	r3, r0, #5120	; 0x1400
     580:	68030204 	stmdavs	r3, {r2, r9}
     584:	0022053c 	eoreq	r0, r2, ip, lsr r5
     588:	58010402 	stmdapl	r1, {r1, sl}
     58c:	1b030105 	blne	c09a8 <_Min_Stack_Size+0xc05a8>
     590:	00060258 	andeq	r0, r6, r8, asr r2
     594:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
     598:	05001b05 	streq	r1, [r0, #-2821]	; 0xfffff4fb
     59c:	000ef802 	andeq	pc, lr, r2, lsl #16
     5a0:	01bf0308 			; <UNDEFINED> instruction: 0x01bf0308
     5a4:	3d0e0501 	cfstr32cc	mvfx0, [lr, #-4]
     5a8:	11052f2f 	tstne	r5, pc, lsr #30
     5ac:	2e05052f 	cfsh32cs	mvfx0, mvfx5, #31
     5b0:	02000d05 	andeq	r0, r0, #320	; 0x140
     5b4:	05210304 	streq	r0, [r1, #-772]!	; 0xfffffcfc
     5b8:	04020009 	streq	r0, [r2], #-9
     5bc:	20053d03 	andcs	r3, r5, r3, lsl #26
     5c0:	03040200 	movweq	r0, #16896	; 0x4200
     5c4:	001a0564 	andseq	r0, sl, r4, ror #10
     5c8:	3c010402 	cfstrscc	mvf0, [r1], {2}
     5cc:	05401105 	strbeq	r1, [r0, #-261]	; 0xfffffefb
     5d0:	0e052e05 	cdpeq	14, 0, cr2, cr5, cr5, {0}
     5d4:	03040200 	movweq	r0, #16896	; 0x4200
     5d8:	00090521 	andeq	r0, r9, r1, lsr #10
     5dc:	3d030402 	cfstrscc	mvf0, [r3, #-8]
     5e0:	02002005 	andeq	r2, r0, #5
     5e4:	05640304 	strbeq	r0, [r4, #-772]!	; 0xfffffcfc
     5e8:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
     5ec:	11053c01 	tstne	r5, r1, lsl #24
     5f0:	2e050540 	cfsh32cs	mvfx0, mvfx5, #32
     5f4:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
     5f8:	05210304 	streq	r0, [r1, #-772]!	; 0xfffffcfc
     5fc:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
     600:	0e053d03 	cdpeq	13, 0, cr3, cr5, cr3, {0}
     604:	03040200 	movweq	r0, #16896	; 0x4200
     608:	00090558 	andeq	r0, r9, r8, asr r5
     60c:	4b030402 	blmi	c161c <_Min_Stack_Size+0xc121c>
     610:	02002005 	andeq	r2, r0, #5
     614:	05630304 	strbeq	r0, [r3, #-772]!	; 0xfffffcfc
     618:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
     61c:	11053c01 	tstne	r5, r1, lsl #24
     620:	2e050541 	cfsh32cs	mvfx0, mvfx5, #33
     624:	02001705 	andeq	r1, r0, #1310720	; 0x140000
     628:	05210304 	streq	r0, [r1, #-772]!	; 0xfffffcfc
     62c:	0402000e 	streq	r0, [r2], #-14
     630:	17055803 	strne	r5, [r5, -r3, lsl #16]
     634:	03040200 	movweq	r0, #16896	; 0x4200
     638:	000e0567 	andeq	r0, lr, r7, ror #10
     63c:	58030402 	stmdapl	r3, {r1, sl}
     640:	02000905 	andeq	r0, r0, #81920	; 0x14000
     644:	05670304 	strbeq	r0, [r7, #-772]!	; 0xfffffcfc
     648:	04020021 	streq	r0, [r2], #-33	; 0xffffffdf
     64c:	1a056303 	bne	159260 <_Min_Stack_Size+0x158e60>
     650:	01040200 	mrseq	r0, R12_usr
     654:	4111053c 	tstmi	r1, ip, lsr r5
     658:	052e0505 	streq	r0, [lr, #-1285]!	; 0xfffffafb
     65c:	0402000e 	streq	r0, [r2], #-14
     660:	02002103 	andeq	r2, r0, #-1073741824	; 0xc0000000
     664:	053d0304 	ldreq	r0, [sp, #-772]!	; 0xfffffcfc
     668:	04020009 	streq	r0, [r2], #-9
     66c:	20053d03 	andcs	r3, r5, r3, lsl #26
     670:	03040200 	movweq	r0, #16896	; 0x4200
     674:	001a0563 	andseq	r0, sl, r3, ror #10
     678:	3c010402 	cfstrscc	mvf0, [r1], {2}
     67c:	05411105 	strbeq	r1, [r1, #-261]	; 0xfffffefb
     680:	13052e05 	movwne	r2, #24069	; 0x5e05
     684:	03040200 	movweq	r0, #16896	; 0x4200
     688:	001f0521 	andseq	r0, pc, r1, lsr #10
     68c:	66030402 	strvs	r0, [r3], -r2, lsl #8
     690:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
     694:	054a0304 	strbeq	r0, [sl, #-772]	; 0xfffffcfc
     698:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
     69c:	20054b03 	andcs	r4, r5, r3, lsl #22
     6a0:	03040200 	movweq	r0, #16896	; 0x4200
     6a4:	000e0566 	andeq	r0, lr, r6, ror #10
     6a8:	4a030402 	bmi	c16b8 <_Min_Stack_Size+0xc12b8>
     6ac:	02000905 	andeq	r0, r0, #81920	; 0x14000
     6b0:	054b0304 	strbeq	r0, [fp, #-772]	; 0xfffffcfc
     6b4:	04020021 	streq	r0, [r2], #-33	; 0xffffffdf
     6b8:	1a056303 	bne	1592cc <_Min_Stack_Size+0x158ecc>
     6bc:	01040200 	mrseq	r0, R12_usr
     6c0:	4101053c 	tstmi	r1, ip, lsr r5
     6c4:	01000902 	tsteq	r0, r2, lsl #18
     6c8:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
     6cc:	02050066 	andeq	r0, r5, #102	; 0x66
     6d0:	08001064 	stmdaeq	r0, {r2, r5, r6, ip}
     6d4:	0101e203 	tsteq	r1, r3, lsl #4
     6d8:	2f780a05 	svccs	0x00780a05
     6dc:	052f0f05 	streq	r0, [pc, #-3845]!	; fffff7df <_estack+0xdffef7df>
     6e0:	17052e05 	strne	r2, [r5, -r5, lsl #28]
     6e4:	3c0f0521 	cfstr32cc	mvfx0, [pc], {33}	; 0x21
     6e8:	052f1705 	streq	r1, [pc, #-1797]!	; ffffffeb <_estack+0xdffeffeb>
     6ec:	14053c0f 	strne	r3, [r5], #-3087	; 0xfffff3f1
     6f0:	3c0c052f 	cfstr32cc	mvfx0, [ip], {47}	; 0x2f
     6f4:	02001705 	andeq	r1, r0, #1310720	; 0x140000
     6f8:	053f0204 	ldreq	r0, [pc, #-516]!	; 4fc <_Min_Stack_Size+0xfc>
     6fc:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
     700:	0e054a02 	vmlaeq.f32	s8, s10, s4
     704:	02040200 	andeq	r0, r4, #0, 4
     708:	00160520 	andseq	r0, r6, r0, lsr #10
     70c:	3d020402 	cfstrscc	mvf0, [r2, #-8]
     710:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
     714:	053c0204 	ldreq	r0, [ip, #-516]!	; 0xfffffdfc
     718:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
     71c:	3c790302 	ldclcc	3, cr0, [r9], #-8
     720:	02001905 	andeq	r1, r0, #81920	; 0x14000
     724:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
     728:	0c055c0d 	stceq	12, cr5, [r5], {13}
     72c:	21010525 	tstcs	r1, r5, lsr #10
     730:	01000602 	tsteq	r0, r2, lsl #12
     734:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
     738:	0500018a 	streq	r0, [r0, #-394]	; 0xfffffe76
     73c:	0010dc02 	andseq	sp, r0, r2, lsl #24
     740:	01f50308 	mvnseq	r0, r8, lsl #6
     744:	08050501 	stmdaeq	r5, {r0, r8, sl}
     748:	300f0575 	andcc	r0, pc, r5, ror r5	; <UNPREDICTABLE>
     74c:	054c1105 	strbeq	r1, [ip, #-261]	; 0xfffffefb
     750:	16053c05 	strne	r3, [r5], -r5, lsl #24
     754:	03040200 	movweq	r0, #16896	; 0x4200
     758:	001a0522 	andseq	r0, sl, r2, lsr #10
     75c:	58030402 	stmdapl	r3, {r1, sl}
     760:	02001f05 	andeq	r1, r0, #5, 30
     764:	05200304 	streq	r0, [r0, #-772]!	; 0xfffffcfc
     768:	04020025 	streq	r0, [r2], #-37	; 0xffffffdb
     76c:	17052003 	strne	r2, [r5, -r3]
     770:	03040200 	movweq	r0, #16896	; 0x4200
     774:	000f0549 	andeq	r0, pc, r9, asr #10
     778:	22030402 	andcs	r0, r3, #33554432	; 0x2000000
     77c:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
     780:	053c0304 	ldreq	r0, [ip, #-772]!	; 0xfffffcfc
     784:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
     788:	15054803 	strne	r4, [r5, #-2051]	; 0xfffff7fd
     78c:	03040200 	movweq	r0, #16896	; 0x4200
     790:	00250574 	eoreq	r0, r5, r4, ror r5
     794:	81030402 	tsthi	r3, r2, lsl #8
     798:	02001a05 	andeq	r1, r0, #20480	; 0x5000
     79c:	05580104 	ldrbeq	r0, [r8, #-260]	; 0xfffffefc
     7a0:	660b0319 			; <UNDEFINED> instruction: 0x660b0319
     7a4:	05ac0e05 	streq	r0, [ip, #3589]!	; 0xe05
     7a8:	0e059119 	mcreq	1, 0, r9, cr5, cr9, {0}
     7ac:	920a05ac 	andls	r0, sl, #172, 10	; 0x2b000000
     7b0:	05750f05 	ldrbeq	r0, [r5, #-3845]!	; 0xfffff0fb
     7b4:	28053c05 	stmdacs	r5, {r0, r2, sl, fp, ip, sp}
     7b8:	4a4e0521 	bmi	1381c44 <_Min_Stack_Size+0x1381844>
     7bc:	01040200 	mrseq	r0, R12_usr
     7c0:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
     7c4:	05580204 	ldrbeq	r0, [r8, #-516]	; 0xfffffdfc
     7c8:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
     7cc:	052e0604 	streq	r0, [lr, #-1540]!	; 0xfffff9fc
     7d0:	04020027 	streq	r0, [r2], #-39	; 0xffffffd9
     7d4:	38052f04 	stmdacc	r5, {r2, r8, r9, sl, fp, sp}
     7d8:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     7dc:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
     7e0:	002e0601 	eoreq	r0, lr, r1, lsl #12
     7e4:	58020402 	stmdapl	r2, {r1, sl}
     7e8:	02001305 	andeq	r1, r0, #335544320	; 0x14000000
     7ec:	2e060404 	cdpcs	4, 0, cr0, cr6, cr4, {0}
     7f0:	02000c05 	andeq	r0, r0, #1280	; 0x500
     7f4:	052f0404 	streq	r0, [pc, #-1028]!	; 3f8 <_Min_Heap_Size+0x1f8>
     7f8:	0e054b0d 	vmlaeq.f64	d4, d5, d13
     7fc:	75150569 	ldrvc	r0, [r5, #-1385]	; 0xfffffa97
     800:	053c0905 	ldreq	r0, [ip, #-2309]!	; 0xfffff6fb
     804:	1005211e 	andne	r2, r5, lr, lsl r1
     808:	671705bb 			; <UNDEFINED> instruction: 0x671705bb
     80c:	054d2105 	strbeq	r2, [sp, #-261]	; 0xfffffefb
     810:	02002e17 	andeq	r2, r0, #368	; 0x170
     814:	05840204 	streq	r0, [r4, #516]	; 0x204
     818:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
     81c:	12056602 	andne	r6, r5, #2097152	; 0x200000
     820:	02040200 	andeq	r0, r4, #0, 4
     824:	0035053d 	eorseq	r0, r5, sp, lsr r5
     828:	03020402 	movweq	r0, #9218	; 0x2402
     82c:	21057477 	tstcs	r5, r7, ror r4
     830:	01040200 	mrseq	r0, R12_usr
     834:	030e0558 	movweq	r0, #58712	; 0xe558
     838:	0c054a0b 			; <UNDEFINED> instruction: 0x0c054a0b
     83c:	4b0d0576 	blmi	341e1c <_Min_Stack_Size+0x341a1c>
     840:	05300c05 	ldreq	r0, [r0, #-3077]!	; 0xfffff3fb
     844:	05674b0d 	strbeq	r4, [r7, #-2829]!	; 0xfffff4f3
     848:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
     84c:	2e660302 	cdpcs	3, 6, cr0, cr6, cr2, {0}
     850:	02001905 	andeq	r1, r0, #81920	; 0x14000
     854:	05580104 	ldrbeq	r0, [r8, #-260]	; 0xfffffefc
     858:	581d0301 	ldmdapl	sp, {r0, r8, r9}
     85c:	01000902 	tsteq	r0, r2, lsl #18
     860:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
     864:	02050046 	andeq	r0, r5, #70	; 0x46
     868:	08001310 	stmdaeq	r0, {r4, r8, r9, ip}
     86c:	0102a903 	tsteq	r2, r3, lsl #18
     870:	4b860a05 	blmi	fe18308c <_estack+0xde17308c>
     874:	054b0f05 	strbeq	r0, [fp, #-3845]	; 0xfffff0fb
     878:	17053c05 	strne	r3, [r5, -r5, lsl #24]
     87c:	d60f0521 	strle	r0, [pc], -r1, lsr #10
     880:	059f1705 	ldreq	r1, [pc, #1797]	; f8d <_Min_Stack_Size+0xb8d>
     884:	1405e40f 	strne	lr, [r5], #-1039	; 0xfffffbf1
     888:	900c05bb 			; <UNDEFINED> instruction: 0x900c05bb
     88c:	02001705 	andeq	r1, r0, #1310720	; 0x140000
     890:	05930204 	ldreq	r0, [r3, #516]	; 0x204
     894:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
     898:	0e05f202 	cdpeq	2, 0, cr15, cr5, cr2, {0}
     89c:	02040200 	andeq	r0, r4, #0, 4
     8a0:	0016059e 	mulseq	r6, lr, r5
     8a4:	9f020402 	svcls	0x00020402
     8a8:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
     8ac:	05900204 	ldreq	r0, [r0, #516]	; 0x204
     8b0:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
     8b4:	ba790302 	blt	1e414c4 <_Min_Stack_Size+0x1e410c4>
     8b8:	02001905 	andeq	r1, r0, #81920	; 0x14000
     8bc:	05580104 	ldrbeq	r0, [r8, #-260]	; 0xfffffefc
     8c0:	0c05780d 	stceq	8, cr7, [r5], {13}
     8c4:	2f010525 	svccs	0x00010525
     8c8:	01000902 	tsteq	r0, r2, lsl #18
     8cc:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
     8d0:	02050060 	andeq	r0, r5, #96	; 0x60
     8d4:	08001464 	stmdaeq	r0, {r2, r5, r6, sl, ip}
     8d8:	0102bc03 	tsteq	r2, r3, lsl #24
     8dc:	05c90505 	strbeq	r0, [r9, #1285]	; 0x505
     8e0:	0e05300f 	cdpeq	0, 0, cr3, cr5, cr15, {0}
     8e4:	3c05054c 	cfstr32cc	mvfx0, [r5], {76}	; 0x4c
     8e8:	05211705 	streq	r1, [r1, #-1797]!	; 0xfffff8fb
     8ec:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
     8f0:	39054b01 	stmdbcc	r5, {r0, r8, r9, fp, lr}
     8f4:	01040200 	mrseq	r0, R12_usr
     8f8:	00170558 	andseq	r0, r7, r8, asr r5
     8fc:	49010402 	stmdbmi	r1, {r1, sl}
     900:	02040200 	andeq	r0, r4, #0, 4
     904:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
     908:	00200404 	eoreq	r0, r0, r4, lsl #8
     90c:	4a050402 	bmi	14191c <_Min_Stack_Size+0x14151c>
     910:	06040200 	streq	r0, [r4], -r0, lsl #4
     914:	004b0566 	subeq	r0, fp, r6, ror #10
     918:	06080402 	streq	r0, [r8], -r2, lsl #8
     91c:	0017055a 	andseq	r0, r7, sl, asr r5
     920:	3a080402 	bcc	201930 <_Min_Stack_Size+0x201530>
     924:	09040200 	stmdbeq	r4, {r9}
     928:	02004a06 	andeq	r4, r0, #24576	; 0x6000
     92c:	05200c04 	streq	r0, [r0, #-3076]!	; 0xfffff3fc
     930:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
     934:	0582060c 	streq	r0, [r2, #1548]	; 0x60c
     938:	0402002d 	streq	r0, [r2], #-45	; 0xffffffd3
     93c:	1705810c 	strne	r8, [r5, -ip, lsl #2]
     940:	02040200 	andeq	r0, r4, #0, 4
     944:	03190558 	tsteq	r9, #88, 10	; 0x16000000
     948:	0e05580b 	cdpeq	8, 0, cr5, cr5, cr11, {0}
     94c:	d71905c8 	ldrle	r0, [r9, -r8, asr #11]
     950:	05ba0e05 	ldreq	r0, [sl, #3589]!	; 0xe05
     954:	0f05d80a 	svceq	0x0005d80a
     958:	3c050583 	cfstr32cc	mvfx0, [r5], {131}	; 0x83
     95c:	05212805 	streq	r2, [r1, #-2053]!	; 0xfffff7fb
     960:	02004a4e 	andeq	r4, r0, #319488	; 0x4e000
     964:	2e060104 	adfcss	f0, f6, f4
     968:	02040200 	andeq	r0, r4, #0, 4
     96c:	00130558 	andseq	r0, r3, r8, asr r5
     970:	06040402 	streq	r0, [r4], -r2, lsl #8
     974:	0027052e 	eoreq	r0, r7, lr, lsr #10
     978:	2f040402 	svccs	0x00040402
     97c:	02003805 	andeq	r3, r0, #327680	; 0x50000
     980:	004a0404 	subeq	r0, sl, r4, lsl #8
     984:	06010402 	streq	r0, [r1], -r2, lsl #8
     988:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
     98c:	13055802 	movwne	r5, #22530	; 0x5802
     990:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     994:	0c052e06 	stceq	14, cr2, [r5], {6}
     998:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     99c:	4b0d052f 	blmi	341e60 <_Min_Stack_Size+0x341a60>
     9a0:	05690e05 	strbeq	r0, [r9, #-3589]!	; 0xfffff1fb
     9a4:	09058315 	stmdbeq	r5, {r0, r2, r4, r8, r9, pc}
     9a8:	211e053c 	tstcs	lr, ip, lsr r5
     9ac:	05c91005 	strbeq	r1, [r9, #5]
     9b0:	21055917 	tstcs	r5, r7, lsl r9
     9b4:	2e17054d 	cfmac32cs	mvfx0, mvfx7, mvfx13
     9b8:	02040200 	andeq	r0, r4, #0, 4
     9bc:	00200584 	eoreq	r0, r0, r4, lsl #11
     9c0:	66020402 	strvs	r0, [r2], -r2, lsl #8
     9c4:	02001205 	andeq	r1, r0, #1342177280	; 0x50000000
     9c8:	053d0204 	ldreq	r0, [sp, #-516]!	; 0xfffffdfc
     9cc:	04020035 	streq	r0, [r2], #-53	; 0xffffffcb
     9d0:	e4770302 	ldrbt	r0, [r7], #-770	; 0xfffffcfe
     9d4:	02002105 	andeq	r2, r0, #1073741825	; 0x40000001
     9d8:	05580104 	ldrbeq	r0, [r8, #-260]	; 0xfffffefc
     9dc:	4a0b030e 	bmi	2c161c <_Min_Stack_Size+0x2c121c>
     9e0:	05f40c05 	ldrbeq	r0, [r4, #3077]!	; 0xc05
     9e4:	0c054b0d 			; <UNDEFINED> instruction: 0x0c054b0d
     9e8:	4b0d0530 	blmi	341eb0 <_Min_Stack_Size+0x341ab0>
     9ec:	002e0567 	eoreq	r0, lr, r7, ror #10
     9f0:	03020402 	movweq	r0, #9218	; 0x2402
     9f4:	19052e66 	stmdbne	r5, {r1, r2, r5, r6, r9, sl, fp, sp}
     9f8:	01040200 	mrseq	r0, R12_usr
     9fc:	03010558 	movweq	r0, #5464	; 0x1558
     a00:	0702581d 	smladeq	r2, sp, r8, r5
     a04:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
     a08:	00170502 	andseq	r0, r7, r2, lsl #10
     a0c:	16e80205 	strbtne	r0, [r8], r5, lsl #4
     a10:	f0030800 			; <UNDEFINED> instruction: 0xf0030800
     a14:	0b050102 	bleq	140e24 <_Min_Stack_Size+0x140a24>
     a18:	2f2f3d4b 	svccs	0x002f3d4b
     a1c:	2f2f1105 	svccs	0x002f1105
     a20:	05302f3d 	ldreq	r2, [r0, #-3901]!	; 0xfffff0c3
     a24:	2b052e05 	blcs	14c240 <_Min_Stack_Size+0x14be40>
     a28:	03040200 	movweq	r0, #16896	; 0x4200
     a2c:	00090521 	andeq	r0, r9, r1, lsr #10
     a30:	66030402 	strvs	r0, [r3], -r2, lsl #8
     a34:	02004605 	andeq	r4, r0, #5242880	; 0x500000
     a38:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
     a3c:	04020009 	streq	r0, [r2], #-9
     a40:	61056603 	tstvs	r5, r3, lsl #12
     a44:	03040200 	movweq	r0, #16896	; 0x4200
     a48:	0009052e 	andeq	r0, r9, lr, lsr #10
     a4c:	66030402 	strvs	r0, [r3], -r2, lsl #8
     a50:	02007c05 	andeq	r7, r0, #1280	; 0x500
     a54:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
     a58:	04020009 	streq	r0, [r2], #-9
     a5c:	02006603 	andeq	r6, r0, #3145728	; 0x300000
     a60:	05e50304 	strbeq	r0, [r5, #772]!	; 0x304
     a64:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
     a68:	1a054803 	bne	152a7c <_Min_Stack_Size+0x15267c>
     a6c:	01040200 	mrseq	r0, R12_usr
     a70:	4011053c 	andsmi	r0, r1, ip, lsr r5
     a74:	052e0505 	streq	r0, [lr, #-1285]!	; 0xfffffafb
     a78:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
     a7c:	20052103 	andcs	r2, r5, r3, lsl #2
     a80:	03040200 	movweq	r0, #16896	; 0x4200
     a84:	00110566 	andseq	r0, r1, r6, ror #10
     a88:	4a030402 	bmi	c1a98 <_Min_Stack_Size+0xc1698>
     a8c:	02001c05 	andeq	r1, r0, #1280	; 0x500
     a90:	05670304 	strbeq	r0, [r7, #-772]!	; 0xfffffcfc
     a94:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
     a98:	11056603 	tstne	r5, r3, lsl #12
     a9c:	03040200 	movweq	r0, #16896	; 0x4200
     aa0:	001c054a 	andseq	r0, ip, sl, asr #10
     aa4:	67030402 	strvs	r0, [r3, -r2, lsl #8]
     aa8:	02002005 	andeq	r2, r0, #5
     aac:	05660304 	strbeq	r0, [r6, #-772]!	; 0xfffffcfc
     ab0:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
     ab4:	1c054a03 			; <UNDEFINED> instruction: 0x1c054a03
     ab8:	03040200 	movweq	r0, #16896	; 0x4200
     abc:	00200567 	eoreq	r0, r0, r7, ror #10
     ac0:	66030402 	strvs	r0, [r3], -r2, lsl #8
     ac4:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
     ac8:	054a0304 	strbeq	r0, [sl, #-772]	; 0xfffffcfc
     acc:	0402002b 	streq	r0, [r2], #-43	; 0xffffffd5
     ad0:	09056703 	stmdbeq	r5, {r0, r1, r8, r9, sl, sp, lr}
     ad4:	03040200 	movweq	r0, #16896	; 0x4200
     ad8:	00460566 	subeq	r0, r6, r6, ror #10
     adc:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
     ae0:	02000905 	andeq	r0, r0, #81920	; 0x14000
     ae4:	05660304 	strbeq	r0, [r6, #-772]!	; 0xfffffcfc
     ae8:	04020061 	streq	r0, [r2], #-97	; 0xffffff9f
     aec:	09052e03 	stmdbeq	r5, {r0, r1, r9, sl, fp, sp}
     af0:	03040200 	movweq	r0, #16896	; 0x4200
     af4:	007c0566 	rsbseq	r0, ip, r6, ror #10
     af8:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
     afc:	02000905 	andeq	r0, r0, #81920	; 0x14000
     b00:	05660304 	strbeq	r0, [r6, #-772]!	; 0xfffffcfc
     b04:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
     b08:	1a05fb03 	bne	17f71c <_Min_Stack_Size+0x17f31c>
     b0c:	01040200 	mrseq	r0, R12_usr
     b10:	4428053c 	strtmi	r0, [r8], #-1340	; 0xfffffac4
     b14:	05660505 	strbeq	r0, [r6, #-1285]!	; 0xfffffafb
     b18:	05056643 	streq	r6, [r5, #-1603]	; 0xfffff9bd
     b1c:	665e0566 	ldrbvs	r0, [lr], -r6, ror #10
     b20:	05660505 	strbeq	r0, [r6, #-1285]!	; 0xfffffafb
     b24:	05056679 	streq	r6, [r5, #-1657]	; 0xfffff987
     b28:	0105f366 	tsteq	r5, r6, ror #6	; <UNPREDICTABLE>
     b2c:	0017023d 	andseq	r0, r7, sp, lsr r2
     b30:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
     b34:	05001305 	streq	r1, [r0, #-773]	; 0xfffffcfb
     b38:	00000002 	andeq	r0, r0, r2
     b3c:	038b0300 	orreq	r0, fp, #0, 6
     b40:	590e0501 	stmdbpl	lr, {r0, r8, sl}
     b44:	69050567 	stmdbvs	r5, {r0, r1, r2, r5, r6, r8, sl}
     b48:	2f0b053d 	svccs	0x000b053d
     b4c:	9f211305 	svcls	0x00211305
     b50:	75750905 	ldrbvc	r0, [r5, #-2309]!	; 0xfffff6fb
     b54:	2f0e0583 	svccs	0x000e0583
     b58:	05ad0f05 	streq	r0, [sp, #3845]!	; 0xf05
     b5c:	ac790311 	ldclge	3, cr0, [r9], #-68	; 0xffffffbc
     b60:	09030505 	stmdbeq	r3, {r0, r2, r8, sl}
     b64:	3d010574 	cfstr32cc	mvfx0, [r1, #-464]	; 0xfffffe30
     b68:	01000902 	tsteq	r0, r2, lsl #18
     b6c:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
     b70:	02050023 	andeq	r0, r5, #35	; 0x23
     b74:	08001920 	stmdaeq	r0, {r5, r8, fp, ip}
     b78:	01039e03 	tsteq	r3, r3, lsl #28
     b7c:	3d830e05 	stccc	14, cr0, [r3, #20]
     b80:	3e05053e 	mcrcc	5, 0, r0, cr5, cr14, {1}
     b84:	2f0b053d 	svccs	0x000b053d
     b88:	05251705 	streq	r1, [r5, #-1797]!	; 0xfffff8fb
     b8c:	32053c09 	andcc	r3, r5, #2304	; 0x900
     b90:	03040200 	movweq	r0, #16896	; 0x4200
     b94:	003d0521 	eorseq	r0, sp, r1, lsr #10
     b98:	3c030402 	cfstrscc	mvf0, [r3], {2}
     b9c:	02003505 	andeq	r3, r0, #20971520	; 0x1400000
     ba0:	05580304 	ldrbeq	r0, [r8, #-772]	; 0xfffffcfc
     ba4:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
     ba8:	2a057403 	bcs	15dbbc <_Min_Stack_Size+0x15d7bc>
     bac:	03040200 	movweq	r0, #16896	; 0x4200
     bb0:	0019053d 	andseq	r0, r9, sp, lsr r5
     bb4:	3c030402 	cfstrscc	mvf0, [r3], {2}
     bb8:	02001705 	andeq	r1, r0, #1310720	; 0x140000
     bbc:	05200304 	streq	r0, [r0, #-772]!	; 0xfffffcfc
     bc0:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
     bc4:	1b058303 	blne	1617d8 <_Min_Stack_Size+0x1613d8>
     bc8:	03040200 	movweq	r0, #16896	; 0x4200
     bcc:	0019053c 	andseq	r0, r9, ip, lsr r5
     bd0:	3c030402 	cfstrscc	mvf0, [r3], {2}
     bd4:	02002405 	andeq	r2, r0, #83886080	; 0x5000000
     bd8:	05630304 	strbeq	r0, [r3, #-772]!	; 0xfffffcfc
     bdc:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
     be0:	09055801 	stmdbeq	r5, {r0, fp, ip, lr}
     be4:	0e057550 	cfrshl32eq	mvfx5, mvfx0, r7
     be8:	590f052f 	stmdbpl	pc, {r0, r1, r2, r3, r5, r8, sl}	; <UNPREDICTABLE>
     bec:	72031105 	andvc	r1, r3, #1073741825	; 0x40000001
     bf0:	03050558 	movweq	r0, #21848	; 0x5558
     bf4:	01054a10 	tsteq	r5, r0, lsl sl
     bf8:	0008023e 	andeq	r0, r8, lr, lsr r2
     bfc:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
     c00:	05002105 	streq	r2, [r0, #-261]	; 0xfffffefb
     c04:	001a0002 	andseq	r0, sl, r2
     c08:	03bc0308 			; <UNDEFINED> instruction: 0x03bc0308
     c0c:	4b0e0501 	blmi	382018 <_Min_Stack_Size+0x381c18>
     c10:	053d0b05 	ldreq	r0, [sp, #-2821]!	; 0xfffff4fb
     c14:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
     c18:	1a052001 	bne	148c24 <_Min_Stack_Size+0x148824>
     c1c:	01040200 	mrseq	r0, R12_usr
     c20:	3d01054a 	cfstr32cc	mvfx0, [r1, #-296]	; 0xfffffed8
     c24:	01000902 	tsteq	r0, r2, lsl #18
     c28:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
     c2c:	02050015 	andeq	r0, r5, #21
     c30:	08001a30 	stmdaeq	r0, {r4, r5, r9, fp, ip}
     c34:	0103c103 	tsteq	r3, r3, lsl #2
     c38:	052f1205 	streq	r1, [pc, #-517]!	; a3b <_Min_Stack_Size+0x63b>
     c3c:	83676805 	cmnhi	r7, #327680	; 0x50000
     c40:	02680105 	rsbeq	r0, r8, #1073741825	; 0x40000001
     c44:	0101000a 	tsteq	r1, sl
     c48:	19050204 	stmdbne	r5, {r2, r9}
     c4c:	7c020500 	cfstr32vc	mvfx0, [r2], {-0}
     c50:	0308001a 	movweq	r0, #32794	; 0x801a
     c54:	050103ca 	streq	r0, [r1, #-970]	; 0xfffffc36
     c58:	05673005 	strbeq	r3, [r7, #-5]!
     c5c:	0c05830b 	stceq	3, cr8, [r5], {11}
     c60:	01040200 	mrseq	r0, R12_usr
     c64:	00330520 	eorseq	r0, r3, r0, lsr #10
     c68:	4a010402 	bmi	41c78 <_Min_Stack_Size+0x41878>
     c6c:	67300505 	ldrvs	r0, [r0, -r5, lsl #10]!
     c70:	68688368 	stmdavs	r8!, {r3, r5, r6, r8, r9, pc}^
     c74:	68846868 	stmvs	r4, {r3, r5, r6, fp, sp, lr}
     c78:	05670a05 	strbeq	r0, [r7, #-2565]!	; 0xfffff5fb
     c7c:	0402000c 	streq	r0, [r2], #-12
     c80:	0b052001 	bleq	148c8c <_Min_Stack_Size+0x14888c>
     c84:	01040200 	mrseq	r0, R12_usr
     c88:	3005054a 	andcc	r0, r5, sl, asr #10
     c8c:	05670a05 	strbeq	r0, [r7, #-2565]!	; 0xfffff5fb
     c90:	0402000c 	streq	r0, [r2], #-12
     c94:	0b052001 	bleq	148ca0 <_Min_Stack_Size+0x1488a0>
     c98:	01040200 	mrseq	r0, R12_usr
     c9c:	3005054a 	andcc	r0, r5, sl, asr #10
     ca0:	05840a05 	streq	r0, [r4, #2565]	; 0xa05
     ca4:	0402000b 	streq	r0, [r2], #-11
     ca8:	2d052001 	stccs	0, cr2, [r5, #-4]
     cac:	01040200 	mrseq	r0, R12_usr
     cb0:	3001054a 	andcc	r0, r1, sl, asr #10
     cb4:	01000a02 	tsteq	r0, r2, lsl #20
     cb8:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
     cbc:	0205000f 	andeq	r0, r5, #15
     cc0:	08001b84 	stmdaeq	r0, {r2, r7, r8, r9, fp, ip}
     cc4:	0103f003 	tsteq	r3, r3	; <UNPREDICTABLE>
     cc8:	2f2f0505 	svccs	0x002f0505
     ccc:	3030912f 	eorscc	r9, r0, pc, lsr #2
     cd0:	09052f2f 	stmdbeq	r5, {r0, r1, r2, r3, r5, r8, r9, sl, fp, sp}
     cd4:	01040200 	mrseq	r0, R12_usr
     cd8:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
     cdc:	02006701 	andeq	r6, r0, #262144	; 0x40000
     ce0:	004b0104 	subeq	r0, fp, r4, lsl #2
     ce4:	67010402 	strvs	r0, [r1, -r2, lsl #8]
     ce8:	01040200 	mrseq	r0, R12_usr
     cec:	0402004c 	streq	r0, [r2], #-76	; 0xffffffb4
     cf0:	02003d01 	andeq	r3, r0, #1, 26	; 0x40
     cf4:	002f0104 	eoreq	r0, pc, r4, lsl #2
     cf8:	2f010402 	svccs	0x00010402
     cfc:	01040200 	mrseq	r0, R12_usr
     d00:	022e7803 	eoreq	r7, lr, #196608	; 0x30000
     d04:	0101000a 	tsteq	r1, sl
     d08:	1b050204 	blne	141520 <_Min_Stack_Size+0x141120>
     d0c:	04020500 	streq	r0, [r2], #-1280	; 0xfffffb00
     d10:	0308001c 	movweq	r0, #32796	; 0x801c
     d14:	0501048b 	streq	r0, [r1, #-1163]	; 0xfffffb75
     d18:	01052f09 	tsteq	r5, r9, lsl #30
     d1c:	00070259 	andeq	r0, r7, r9, asr r2
     d20:	05630101 	strbeq	r0, [r3, #-257]!	; 0xfffffeff
     d24:	00030000 	andeq	r0, r3, r0
     d28:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
     d2c:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
     d30:	0101000d 	tsteq	r1, sp
     d34:	00000101 	andeq	r0, r0, r1, lsl #2
     d38:	00000100 	andeq	r0, r0, r0, lsl #2
     d3c:	6f682f01 	svcvs	0x00682f01
     d40:	692f656d 	stmdbvs	pc!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
     d44:	696f6d73 	stmdbvs	pc!, {r0, r1, r4, r5, r6, r8, sl, fp, sp, lr}^	; <UNPREDICTABLE>
     d48:	72702f6c 	rsbsvc	r2, r0, #108, 30	; 0x1b0
     d4c:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
     d50:	4d2f7374 	stcmi	3, cr7, [pc, #-464]!	; b88 <_Min_Stack_Size+0x788>
     d54:	732f5543 			; <UNDEFINED> instruction: 0x732f5543
     d58:	38373774 	ldmdacc	r7!, {r2, r4, r5, r6, r8, r9, sl, ip, sp}
     d5c:	74732f39 	ldrbtvc	r2, [r3], #-3897	; 0xfffff0c7
     d60:	39383737 	ldmdbcc	r8!, {r0, r1, r2, r4, r5, r8, r9, sl, ip, sp}
     d64:	736d635f 	cmnvc	sp, #2080374785	; 0x7c000001
     d68:	625f7369 	subsvs	r7, pc, #-1543503871	; 0xa4000001
     d6c:	6b63616c 	blvs	18d9324 <_Min_Stack_Size+0x18d8f24>
     d70:	6c69705f 	stclvs	0, cr7, [r9], #-380	; 0xfffffe84
     d74:	6f432f6c 	svcvs	0x00432f6c
     d78:	532f6572 			; <UNDEFINED> instruction: 0x532f6572
     d7c:	2f006372 	svccs	0x00006372
     d80:	2f727375 	svccs	0x00727375
     d84:	2f62696c 	svccs	0x0062696c
     d88:	2f636367 	svccs	0x00636367
     d8c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     d90:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     d94:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     d98:	31312f69 	teqcc	r1, r9, ror #30
     d9c:	302e322e 	eorcc	r3, lr, lr, lsr #4
     da0:	636e692f 	cmnvs	lr, #770048	; 0xbc000
     da4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     da8:	73752f00 	cmnvc	r5, #0, 30
     dac:	72612f72 	rsbvc	r2, r1, #456	; 0x1c8
     db0:	6f6e2d6d 	svcvs	0x006e2d6d
     db4:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     db8:	2f696261 	svccs	0x00696261
     dbc:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     dc0:	2f656475 	svccs	0x00656475
     dc4:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     dc8:	00656e69 	rsbeq	r6, r5, r9, ror #28
     dcc:	7273752f 	rsbsvc	r7, r3, #197132288	; 0xbc00000
     dd0:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
     dd4:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     dd8:	61652d65 	cmnvs	r5, r5, ror #26
     ddc:	692f6962 	stmdbvs	pc!, {r1, r5, r6, r8, fp, sp, lr}	; <UNPREDICTABLE>
     de0:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     de4:	732f6564 			; <UNDEFINED> instruction: 0x732f6564
     de8:	2f007379 	svccs	0x00007379
     dec:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
     df0:	6d73692f 			; <UNDEFINED> instruction: 0x6d73692f
     df4:	2f6c696f 	svccs	0x006c696f
     df8:	6a6f7270 	bvs	1bdd7c0 <_Min_Stack_Size+0x1bdd3c0>
     dfc:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
     e00:	55434d2f 	strbpl	r4, [r3, #-3375]	; 0xfffff2d1
     e04:	3774732f 	ldrbcc	r7, [r4, -pc, lsr #6]!
     e08:	2f393837 	svccs	0x00393837
     e0c:	37377473 			; <UNDEFINED> instruction: 0x37377473
     e10:	635f3938 	cmpvs	pc, #56, 18	; 0xe0000
     e14:	7369736d 	cmnvc	r9, #-1275068415	; 0xb4000001
     e18:	616c625f 	cmnvs	ip, pc, asr r2
     e1c:	705f6b63 	subsvc	r6, pc, r3, ror #22
     e20:	2f6c6c69 	svccs	0x006c6c69
     e24:	76697244 	strbtvc	r7, [r9], -r4, asr #4
     e28:	2f737265 	svccs	0x00737265
     e2c:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
     e30:	65442f53 	strbvs	r2, [r4, #-3923]	; 0xfffff0ad
     e34:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
     e38:	2f54532f 	svccs	0x0054532f
     e3c:	334d5453 	movtcc	r5, #54355	; 0xd453
     e40:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
     e44:	6e492f78 	mcrvs	15, 2, r2, cr9, cr8, {3}
     e48:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     e4c:	682f0065 	stmdavs	pc!, {r0, r2, r5, r6}	; <UNPREDICTABLE>
     e50:	2f656d6f 	svccs	0x00656d6f
     e54:	6f6d7369 	svcvs	0x006d7369
     e58:	702f6c69 	eorvc	r6, pc, r9, ror #24
     e5c:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
     e60:	2f737463 	svccs	0x00737463
     e64:	2f55434d 	svccs	0x0055434d
     e68:	37377473 			; <UNDEFINED> instruction: 0x37377473
     e6c:	732f3938 			; <UNDEFINED> instruction: 0x732f3938
     e70:	38373774 	ldmdacc	r7!, {r2, r4, r5, r6, r8, r9, sl, ip, sp}
     e74:	6d635f39 	stclvs	15, cr5, [r3, #-228]!	; 0xffffff1c
     e78:	5f736973 	svcpl	0x00736973
     e7c:	63616c62 	cmnvs	r1, #25088	; 0x6200
     e80:	69705f6b 	ldmdbvs	r0!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     e84:	432f6c6c 			; <UNDEFINED> instruction: 0x432f6c6c
     e88:	2f65726f 	svccs	0x0065726f
     e8c:	00636e49 	rsbeq	r6, r3, r9, asr #28
     e90:	37747300 	ldrbcc	r7, [r4, -r0, lsl #6]!
     e94:	2e393837 	mrccs	8, 1, r3, cr9, cr7, {1}
     e98:	00010063 	andeq	r0, r1, r3, rrx
     e9c:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
     ea0:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
     ea4:	00020068 	andeq	r0, r2, r8, rrx
     ea8:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
     eac:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     eb0:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     eb4:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
     eb8:	00030068 	andeq	r0, r3, r8, rrx
     ebc:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
     ec0:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
     ec4:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
     ec8:	74730000 	ldrbtvc	r0, [r3], #-0
     ecc:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     ed0:	78313034 	ldmdavc	r1!, {r2, r4, r5, ip, sp}
     ed4:	00682e63 	rsbeq	r2, r8, r3, ror #28
     ed8:	73000005 	movwvc	r0, #5
     edc:	38373774 	ldmdacc	r7!, {r2, r4, r5, r6, r8, r9, sl, ip, sp}
     ee0:	00682e39 	rsbeq	r2, r8, r9, lsr lr
     ee4:	00000006 	andeq	r0, r0, r6
     ee8:	05003d05 	streq	r3, [r0, #-3333]	; 0xfffff2fb
     eec:	001c2002 	andseq	r2, ip, r2
     ef0:	010b0308 	tsteq	fp, r8, lsl #6
     ef4:	054b3405 	strbeq	r3, [fp, #-1029]	; 0xfffffbfb
     ef8:	09052e39 	stmdbeq	r5, {r0, r3, r4, r5, r9, sl, fp, sp}
     efc:	210b054a 	tstcs	fp, sl, asr #10
     f00:	21210905 			; <UNDEFINED> instruction: 0x21210905
     f04:	053a0c05 	ldreq	r0, [sl, #-3077]!	; 0xfffff3fb
     f08:	09024001 	stmdbeq	r2, {r0, lr}
     f0c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     f10:	02050019 	andeq	r0, r5, #25
     f14:	08001c58 	stmdaeq	r0, {r3, r4, r6, sl, fp, ip}
     f18:	05011403 	streq	r1, [r1, #-1027]	; 0xfffffbfd
     f1c:	05052f1a 	streq	r2, [r5, #-3866]	; 0xfffff0e6
     f20:	4b1a0567 	blmi	6824c4 <_Min_Stack_Size+0x6820c4>
     f24:	05670505 	strbeq	r0, [r7, #-1285]!	; 0xfffffafb
     f28:	07023d01 	streq	r3, [r2, -r1, lsl #26]
     f2c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     f30:	02050020 	andeq	r0, r5, #32
     f34:	08001c90 	stmdaeq	r0, {r4, r7, sl, fp, ip}
     f38:	05011c03 	streq	r1, [r1, #-3075]	; 0xfffff3fd
     f3c:	01053019 	tsteq	r5, r9, lsl r0
     f40:	00080267 	andeq	r0, r8, r7, ror #4
     f44:	1d050101 	stfnes	f0, [r5, #-4]
     f48:	b0020500 	andlt	r0, r2, r0, lsl #10
     f4c:	0308001c 	movweq	r0, #32796	; 0x801c
     f50:	19050122 	stmdbne	r5, {r1, r5, r8}
     f54:	67010530 	smladxvs	r1, r0, r5, r0
     f58:	01000802 	tsteq	r0, r2, lsl #16
     f5c:	00240501 	eoreq	r0, r4, r1, lsl #10
     f60:	1cd00205 	lfmne	f0, 2, [r0], {5}
     f64:	28030800 	stmdacs	r3, {fp}
     f68:	5e0b0501 	cfsh32pl	mvfx0, mvfx11, #1
     f6c:	02001805 	andeq	r1, r0, #327680	; 0x50000
     f70:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
     f74:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
     f78:	0c052e01 	stceq	14, cr2, [r5], {1}
     f7c:	01040200 	mrseq	r0, R12_usr
     f80:	2f0f052e 	svccs	0x000f052e
     f84:	05201405 	streq	r1, [r0, #-1029]!	; 0xfffffbfb
     f88:	09023101 	stmdbeq	r2, {r0, r8, ip, sp}
     f8c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     f90:	02050033 	andeq	r0, r5, #51	; 0x33
     f94:	00000000 	andeq	r0, r0, r0
     f98:	05013503 	streq	r3, [r1, #-1283]	; 0xfffffafd
     f9c:	0d055a15 	vstreq	s10, [r5, #-84]	; 0xffffffac
     fa0:	030b0567 	movweq	r0, #46439	; 0xb567
     fa4:	0f052e0d 	svceq	0x00052e0d
     fa8:	001c0521 	andseq	r0, ip, r1, lsr #10
     fac:	20010402 	andcs	r0, r1, r2, lsl #8
     fb0:	02002105 	andeq	r2, r0, #1073741825	; 0x40000001
     fb4:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
     fb8:	04020010 	streq	r0, [r2], #-16
     fbc:	13052e01 	movwne	r2, #24065	; 0x5e01
     fc0:	2018052f 	andscs	r0, r8, pc, lsr #10
     fc4:	052f0f05 	streq	r0, [pc, #-3845]!	; c7 <_Min_Heap_Size-0x139>
     fc8:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
     fcc:	21052001 	tstcs	r5, r1
     fd0:	01040200 	mrseq	r0, R12_usr
     fd4:	0010052e 	andseq	r0, r0, lr, lsr #10
     fd8:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
     fdc:	052f1d05 	streq	r1, [pc, #-3333]!	; 2df <_Min_Heap_Size+0xdf>
     fe0:	11052e0e 	tstne	r5, lr, lsl #28
     fe4:	2a12053c 	bcs	4824dc <_Min_Stack_Size+0x4820dc>
     fe8:	053c0c05 	ldreq	r0, [ip, #-3077]!	; 0xfffff3fb
     fec:	1605340b 	strne	r3, [r5], -fp, lsl #8
     ff0:	01040200 	mrseq	r0, R12_usr
     ff4:	001b0520 	andseq	r0, fp, r0, lsr #10
     ff8:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
     ffc:	02000c05 	andeq	r0, r0, #1280	; 0x500
    1000:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    1004:	01053115 	tsteq	r5, r5, lsl r1
    1008:	00080267 	andeq	r0, r8, r7, ror #4
    100c:	49050101 	stmdbmi	r5, {r0, r8}
    1010:	00020500 	andeq	r0, r2, r0, lsl #10
    1014:	0308001d 	movweq	r0, #32797	; 0x801d
    1018:	050100d2 	streq	r0, [r1, #-210]	; 0xffffff2e
    101c:	1305670f 	movwne	r6, #22287	; 0x570f
    1020:	2f0f0520 	svccs	0x000f0520
    1024:	05201905 	streq	r1, [r0, #-2309]!	; 0xfffff6fb
    1028:	0f052017 	svceq	0x00052017
    102c:	20160521 	andscs	r0, r6, r1, lsr #10
    1030:	052f0f05 	streq	r0, [pc, #-3845]!	; 133 <_Min_Heap_Size-0xcd>
    1034:	15052016 	strne	r2, [r5, #-22]	; 0xffffffea
    1038:	0567672f 	strbeq	r6, [r7, #-1839]!	; 0xfffff8d1
    103c:	11056709 	tstne	r5, r9, lsl #14
    1040:	3d140520 	cfldr32cc	mvfx0, [r4, #-128]	; 0xffffff80
    1044:	02670105 	rsbeq	r0, r7, #1073741825	; 0x40000001
    1048:	01010010 	tsteq	r1, r0, lsl r0
    104c:	05001e05 	streq	r1, [r0, #-3589]	; 0xfffff1fb
    1050:	001d7c02 	andseq	r7, sp, r2, lsl #24
    1054:	00df0308 	sbcseq	r0, pc, r8, lsl #6
    1058:	2f0a0501 	svccs	0x000a0501
    105c:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    1060:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    1064:	0402000b 	streq	r0, [r2], #-11
    1068:	01052e01 	tsteq	r5, r1, lsl #28
    106c:	0009022f 	andeq	r0, r9, pc, lsr #4
    1070:	45050101 	strmi	r0, [r5, #-257]	; 0xfffffeff
    1074:	00020500 	andeq	r0, r2, r0, lsl #10
    1078:	03000000 	movweq	r0, #0
    107c:	050100e3 	streq	r0, [r1, #-227]	; 0xffffff1d
    1080:	4b2f7505 	blmi	bde49c <_Min_Stack_Size+0xbde09c>
    1084:	4b01052f 	blmi	42548 <_Min_Stack_Size+0x42148>
    1088:	01000402 	tsteq	r0, r2, lsl #8
    108c:	004c0501 	subeq	r0, ip, r1, lsl #10
    1090:	00000205 	andeq	r0, r0, r5, lsl #4
    1094:	eb030000 	bl	c109c <_Min_Stack_Size+0xc0c9c>
    1098:	05050100 	streq	r0, [r5, #-256]	; 0xffffff00
    109c:	054b2f75 	strbeq	r2, [fp, #-3957]	; 0xfffff08b
    10a0:	05052f11 	streq	r2, [r5, #-3857]	; 0xfffff0ef
    10a4:	0030052e 	eorseq	r0, r0, lr, lsr #10
    10a8:	21030402 	tstcs	r3, r2, lsl #8
    10ac:	02000905 	andeq	r0, r0, #81920	; 0x14000
    10b0:	053c0304 	ldreq	r0, [ip, #-772]!	; 0xfffffcfc
    10b4:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
    10b8:	1a054903 	bne	1534cc <_Min_Stack_Size+0x1530cc>
    10bc:	01040200 	mrseq	r0, R12_usr
    10c0:	4d01053c 	cfstr32mi	mvfx0, [r1, #-240]	; 0xffffff10
    10c4:	01000502 	tsteq	r0, r2, lsl #10
    10c8:	00370501 	eorseq	r0, r7, r1, lsl #10
    10cc:	1d9c0205 	lfmne	f0, 4, [ip, #20]
    10d0:	f5030800 			; <UNDEFINED> instruction: 0xf5030800
    10d4:	05050100 	streq	r0, [r5, #-256]	; 0xffffff00
    10d8:	2f1c054b 	svccs	0x001c054b
    10dc:	052e0505 	streq	r0, [lr, #-1285]!	; 0xfffffafb
    10e0:	08053d10 	stmdaeq	r5, {r4, r8, sl, fp, ip, sp}
    10e4:	2f09052e 	svccs	0x0009052e
    10e8:	052f1605 	streq	r1, [pc, #-1541]!	; aeb <_Min_Stack_Size+0x6eb>
    10ec:	24052e09 	strcs	r2, [r5], #-3593	; 0xfffff1f7
    10f0:	03040200 	movweq	r0, #16896	; 0x4200
    10f4:	002a0521 	eoreq	r0, sl, r1, lsr #10
    10f8:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    10fc:	02000d05 	andeq	r0, r0, #320	; 0x140
    1100:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
    1104:	04020034 	streq	r0, [r2], #-52	; 0xffffffcc
    1108:	28054903 	stmdacs	r5, {r0, r1, r8, fp, lr}
    110c:	01040200 	mrseq	r0, R12_usr
    1110:	001f053c 	andseq	r0, pc, ip, lsr r5	; <UNPREDICTABLE>
    1114:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    1118:	05401005 	strbeq	r1, [r0, #-5]
    111c:	24052e08 	strcs	r2, [r5], #-3592	; 0xfffff1f8
    1120:	3c2d052f 	cfstr32cc	mvfx0, [sp], #-188	; 0xffffff44
    1124:	054a0905 	strbeq	r0, [sl, #-2309]	; 0xfffff6fb
    1128:	04023e01 	streq	r3, [r2], #-3585	; 0xfffff1ff
    112c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1130:	02050039 	andeq	r0, r5, #57	; 0x39
    1134:	08001e08 	stmdaeq	r0, {r3, r9, sl, fp, ip}
    1138:	01018403 	tsteq	r1, r3, lsl #8
    113c:	054b0b05 	strbeq	r0, [fp, #-2821]	; 0xfffff4fb
    1140:	11052109 	tstne	r5, r9, lsl #2
    1144:	3a14053d 	bcc	502640 <_Min_Stack_Size+0x502240>
    1148:	052e1e05 	streq	r1, [lr, #-3589]!	; 0xfffff1fb
    114c:	05023201 	streq	r3, [r2, #-513]	; 0xfffffdff
    1150:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1154:	02050020 	andeq	r0, r5, #32
    1158:	08001e30 	stmdaeq	r0, {r4, r5, r9, sl, fp, ip}
    115c:	01018c03 	tsteq	r1, r3, lsl #24
    1160:	503e1305 	eorspl	r1, lr, r5, lsl #6
    1164:	05501a05 	ldrbeq	r1, [r0, #-2565]	; 0xfffff5fb
    1168:	02210305 	eoreq	r0, r1, #335544320	; 0x14000000
    116c:	590101ce 	stmdbpl	r1, {r1, r2, r3, r6, r7, r8}
    1170:	053d1a05 	ldreq	r1, [sp, #-2565]!	; 0xfffff5fb
    1174:	01059605 	tsteq	r5, r5, lsl #12
    1178:	001c024b 	andseq	r0, ip, fp, asr #4
    117c:	24050101 	strcs	r0, [r5], #-257	; 0xfffffeff
    1180:	44020500 	strmi	r0, [r2], #-1280	; 0xfffffb00
    1184:	03080020 	movweq	r0, #32800	; 0x8020
    1188:	050101c7 	streq	r0, [r1, #-455]	; 0xfffffe39
    118c:	3d2f2f05 	stccc	15, cr2, [pc, #-20]!	; 1180 <_Min_Stack_Size+0xd80>
    1190:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    1194:	01010002 	tsteq	r1, r2
    1198:	05005705 	streq	r5, [r0, #-1797]	; 0xfffff8fb
    119c:	00205a02 	eoreq	r5, r0, r2, lsl #20
    11a0:	01ce0308 	biceq	r0, lr, r8, lsl #6
    11a4:	e7100501 	ldr	r0, [r0, -r1, lsl #10]
    11a8:	054a0e05 	strbeq	r0, [sl, #-3589]	; 0xfffff1fb
    11ac:	0e052f10 	mcreq	15, 0, r2, cr5, cr0, {0}
    11b0:	2f10052e 	svccs	0x0010052e
    11b4:	054a0e05 	strbeq	r0, [sl, #-3589]	; 0xfffff1fb
    11b8:	0e052f10 	mcreq	15, 0, r2, cr5, cr0, {0}
    11bc:	2f10052e 	svccs	0x0010052e
    11c0:	054a0e05 	strbeq	r0, [sl, #-3589]	; 0xfffff1fb
    11c4:	0e052f10 	mcreq	15, 0, r2, cr5, cr0, {0}
    11c8:	2f10052e 	svccs	0x0010052e
    11cc:	054a0e05 	strbeq	r0, [sl, #-3589]	; 0xfffff1fb
    11d0:	0e052f10 	mcreq	15, 0, r2, cr5, cr0, {0}
    11d4:	2f14052e 	svccs	0x0014052e
    11d8:	25020505 	strcs	r0, [r2, #-1285]	; 0xfffffafb
    11dc:	05592f18 	ldrbeq	r2, [r9, #-3864]	; 0xfffff0e8
    11e0:	04022f01 	streq	r2, [r2], #-3841	; 0xfffff0ff
    11e4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    11e8:	02050069 	andeq	r0, r5, #105	; 0x69
    11ec:	0800212c 	stmdaeq	r0, {r2, r3, r5, r8, sp}
    11f0:	0101e503 	tsteq	r1, r3, lsl #10
    11f4:	05e61105 	strbeq	r1, [r6, #261]!	; 0x105
    11f8:	10053c05 	andne	r3, r5, r5, lsl #24
    11fc:	03040200 	movweq	r0, #16896	; 0x4200
    1200:	00330521 	eorseq	r0, r3, r1, lsr #10
    1204:	81030402 	tsthi	r3, r2, lsl #8
    1208:	02001a05 	andeq	r1, r0, #20480	; 0x5000
    120c:	05580104 	ldrbeq	r0, [r8, #-260]	; 0xfffffefc
    1210:	05054d2d 	streq	r4, [r5, #-3373]	; 0xfffff2d3
    1214:	2e41054a 	cdpcs	5, 4, cr0, cr1, cr10, {2}
    1218:	05580505 	ldrbeq	r0, [r8, #-1285]	; 0xfffffafb
    121c:	2b057522 	blcs	15e6ac <_Min_Stack_Size+0x15e2ac>
    1220:	200c0558 	andcs	r0, ip, r8, asr r5
    1224:	052f0e05 	streq	r0, [pc, #-3589]!	; 427 <_Min_Stack_Size+0x27>
    1228:	1b053d0b 	blne	15065c <_Min_Stack_Size+0x15025c>
    122c:	2e0c0521 	cfsh32cs	mvfx0, mvfx12, #17
    1230:	054b1a05 	strbeq	r1, [fp, #-2565]	; 0xfffff5fb
    1234:	09054c17 	stmdbeq	r5, {r0, r1, r2, r4, sl, fp, lr}
    1238:	1a058375 	bne	162014 <_Min_Stack_Size+0x161c14>
    123c:	052e7a03 	streq	r7, [lr, #-2563]!	; 0xfffff5fd
    1240:	05025201 	streq	r5, [r2, #-513]	; 0xfffffdff
    1244:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1248:	02050023 	andeq	r0, r5, #35	; 0x23
    124c:	080021f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, sp}
    1250:	0101f803 	tsteq	r1, r3, lsl #16	; <UNPREDICTABLE>
    1254:	05590505 	ldrbeq	r0, [r9, #-1285]	; 0xfffffafb
    1258:	04028301 	streq	r8, [r2], #-769	; 0xfffffcff
    125c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1260:	0205003d 	andeq	r0, r5, #61	; 0x3d
    1264:	0800221a 	stmdaeq	r0, {r1, r3, r4, r9, sp}
    1268:	0101fd03 	tsteq	r1, r3, lsl #26	; <UNPREDICTABLE>
    126c:	05911a05 	ldreq	r1, [r1, #2565]	; 0xa05
    1270:	27053c20 	strcs	r3, [r5, -r0, lsr #24]
    1274:	20370520 	eorscs	r0, r7, r0, lsr #10
    1278:	053c3d05 	ldreq	r3, [ip, #-3333]!	; 0xfffff2fb
    127c:	43052027 	movwmi	r2, #20519	; 0x5027
    1280:	7501053c 	strvc	r0, [r1, #-1340]	; 0xfffffac4
    1284:	01000602 	tsteq	r0, r2, lsl #12
    1288:	00026001 	andeq	r6, r2, r1
    128c:	b5000300 	strlt	r0, [r0, #-768]	; 0xfffffd00
    1290:	02000001 	andeq	r0, r0, #1
    1294:	0d0efb01 	vstreq	d15, [lr, #-4]
    1298:	01010100 	mrseq	r0, (UNDEF: 17)
    129c:	00000001 	andeq	r0, r0, r1
    12a0:	01000001 	tsteq	r0, r1
    12a4:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 11f0 <_Min_Stack_Size+0xdf0>
    12a8:	73692f65 	cmnvc	r9, #404	; 0x194
    12ac:	6c696f6d 	stclvs	15, cr6, [r9], #-436	; 0xfffffe4c
    12b0:	6f72702f 	svcvs	0x0072702f
    12b4:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    12b8:	434d2f73 	movtmi	r2, #57203	; 0xdf73
    12bc:	74732f55 	ldrbtvc	r2, [r3], #-3925	; 0xfffff0ab
    12c0:	39383737 	ldmdbcc	r8!, {r0, r1, r2, r4, r5, r8, r9, sl, ip, sp}
    12c4:	3774732f 	ldrbcc	r7, [r4, -pc, lsr #6]!
    12c8:	5f393837 	svcpl	0x00393837
    12cc:	69736d63 	ldmdbvs	r3!, {r0, r1, r5, r6, r8, sl, fp, sp, lr}^
    12d0:	6c625f73 	stclvs	15, cr5, [r2], #-460	; 0xfffffe34
    12d4:	5f6b6361 	svcpl	0x006b6361
    12d8:	6c6c6970 			; <UNDEFINED> instruction: 0x6c6c6970
    12dc:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
    12e0:	72532f65 	subsvc	r2, r3, #404	; 0x194
    12e4:	752f0063 	strvc	r0, [pc, #-99]!	; 1289 <_Min_Stack_Size+0xe89>
    12e8:	612f7273 			; <UNDEFINED> instruction: 0x612f7273
    12ec:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    12f0:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    12f4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    12f8:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    12fc:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    1300:	63616d2f 	cmnvs	r1, #3008	; 0xbc0
    1304:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    1308:	73752f00 	cmnvc	r5, #0, 30
    130c:	72612f72 	rsbvc	r2, r1, #456	; 0x1c8
    1310:	6f6e2d6d 	svcvs	0x006e2d6d
    1314:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1318:	2f696261 	svccs	0x00696261
    131c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    1320:	2f656475 	svccs	0x00656475
    1324:	00737973 	rsbseq	r7, r3, r3, ror r9
    1328:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 1274 <_Min_Stack_Size+0xe74>
    132c:	73692f65 	cmnvc	r9, #404	; 0x194
    1330:	6c696f6d 	stclvs	15, cr6, [r9], #-436	; 0xfffffe4c
    1334:	6f72702f 	svcvs	0x0072702f
    1338:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    133c:	434d2f73 	movtmi	r2, #57203	; 0xdf73
    1340:	74732f55 	ldrbtvc	r2, [r3], #-3925	; 0xfffff0ab
    1344:	39383737 	ldmdbcc	r8!, {r0, r1, r2, r4, r5, r8, r9, sl, ip, sp}
    1348:	3774732f 	ldrbcc	r7, [r4, -pc, lsr #6]!
    134c:	5f393837 	svcpl	0x00393837
    1350:	69736d63 	ldmdbvs	r3!, {r0, r1, r5, r6, r8, sl, fp, sp, lr}^
    1354:	6c625f73 	stclvs	15, cr5, [r2], #-460	; 0xfffffe34
    1358:	5f6b6361 	svcpl	0x006b6361
    135c:	6c6c6970 			; <UNDEFINED> instruction: 0x6c6c6970
    1360:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    1364:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    1368:	534d432f 	movtpl	r4, #54063	; 0xd32f
    136c:	492f5349 	stmdbmi	pc!, {r0, r3, r6, r8, r9, ip, lr}	; <UNPREDICTABLE>
    1370:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    1374:	2f006564 	svccs	0x00006564
    1378:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    137c:	6d73692f 			; <UNDEFINED> instruction: 0x6d73692f
    1380:	2f6c696f 	svccs	0x006c696f
    1384:	6a6f7270 	bvs	1bddd4c <_Min_Stack_Size+0x1bdd94c>
    1388:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    138c:	55434d2f 	strbpl	r4, [r3, #-3375]	; 0xfffff2d1
    1390:	3774732f 	ldrbcc	r7, [r4, -pc, lsr #6]!
    1394:	2f393837 	svccs	0x00393837
    1398:	37377473 			; <UNDEFINED> instruction: 0x37377473
    139c:	635f3938 	cmpvs	pc, #56, 18	; 0xe0000
    13a0:	7369736d 	cmnvc	r9, #-1275068415	; 0xb4000001
    13a4:	616c625f 	cmnvs	ip, pc, asr r2
    13a8:	705f6b63 	subsvc	r6, pc, r3, ror #22
    13ac:	2f6c6c69 	svccs	0x006c6c69
    13b0:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    13b4:	2f737265 	svccs	0x00737265
    13b8:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
    13bc:	65442f53 	strbvs	r2, [r4, #-3923]	; 0xfffff0ad
    13c0:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
    13c4:	2f54532f 	svccs	0x0054532f
    13c8:	334d5453 	movtcc	r5, #54355	; 0xd453
    13cc:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    13d0:	6e492f78 	mcrvs	15, 2, r2, cr9, cr8, {3}
    13d4:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    13d8:	73000065 	movwvc	r0, #101	; 0x65
    13dc:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    13e0:	74735f6d 	ldrbtvc	r5, [r3], #-3949	; 0xfffff093
    13e4:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    13e8:	2e787834 	mrccs	8, 3, r7, cr8, cr4, {1}
    13ec:	00010063 	andeq	r0, r1, r3, rrx
    13f0:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
    13f4:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    13f8:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    13fc:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    1400:	00020068 	andeq	r0, r2, r8, rrx
    1404:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    1408:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    140c:	0300682e 	movweq	r6, #2094	; 0x82e
    1410:	6f630000 	svcvs	0x00630000
    1414:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
    1418:	682e346d 	stmdavs	lr!, {r0, r2, r3, r5, r6, sl, ip, sp}
    141c:	00000400 	andeq	r0, r0, r0, lsl #8
    1420:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    1424:	735f6d65 	cmpvc	pc, #6464	; 0x1940
    1428:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    142c:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    1430:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    1434:	74730000 	ldrbtvc	r0, [r3], #-0
    1438:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    143c:	78313034 	ldmdavc	r1!, {r2, r4, r5, ip, sp}
    1440:	00682e63 	rsbeq	r2, r8, r3, ror #28
    1444:	00000005 	andeq	r0, r0, r5
    1448:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    144c:	00226002 	eoreq	r6, r2, r2
    1450:	01a80308 			; <UNDEFINED> instruction: 0x01a80308
    1454:	31100501 	tstcc	r0, r1, lsl #10
    1458:	0b030105 	bleq	c1874 <_Min_Stack_Size+0xc1474>
    145c:	00080282 	andeq	r0, r8, r2, lsl #5
    1460:	01050101 	tsteq	r5, r1, lsl #2
    1464:	84020500 	strhi	r0, [r2], #-1280	; 0xfffffb00
    1468:	03080022 	movweq	r0, #32802	; 0x8022
    146c:	050101dd 	streq	r0, [r1, #-477]	; 0xfffffe23
    1470:	15053d0c 	strne	r3, [r5, #-3340]	; 0xfffff2f4
    1474:	2e21052e 	cfsh64cs	mvdx0, mvdx1, #30
    1478:	052e2b05 	streq	r2, [lr, #-2821]!	; 0xfffff4fb
    147c:	0c052e3a 	stceq	14, cr2, [r5], {58}	; 0x3a
    1480:	2e070531 	mcrcs	5, 0, r0, cr7, cr1, {1}
    1484:	053e0305 	ldreq	r0, [lr, #-773]!	; 0xfffffcfb
    1488:	0705cb17 	smladeq	r5, r7, fp, ip
    148c:	2217053d 	andscs	r0, r7, #255852544	; 0xf400000
    1490:	053d0705 	ldreq	r0, [sp, #-1797]!	; 0xfffff8fb
    1494:	37052617 	smladcc	r5, r7, r6, r2
    1498:	2011052e 	andscs	r0, r1, lr, lsr #10
    149c:	2e0c053d 	mcrcs	5, 0, r0, cr12, cr13, {1}
    14a0:	053e0a05 	ldreq	r0, [lr, #-2565]!	; 0xfffff5fb
    14a4:	2c053f1d 	stccs	15, cr3, [r5], {29}
    14a8:	2e4a054a 	cdpcs	5, 4, cr0, cr10, cr10, {2}
    14ac:	053c1005 	ldreq	r1, [ip, #-5]!
    14b0:	2c054f1d 	stccs	15, cr4, [r5], {29}
    14b4:	2e4a054a 	cdpcs	5, 4, cr0, cr10, cr10, {2}
    14b8:	053c1005 	ldreq	r1, [ip, #-5]!
    14bc:	32053f14 	andcc	r3, r5, #20, 30	; 0x50
    14c0:	3c38052e 	cfldr32cc	mvfx0, [r8], #-184	; 0xffffff48
    14c4:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    14c8:	17052f1f 	smladne	r5, pc, pc, r2	; <UNPREDICTABLE>
    14cc:	2f07054a 	svccs	0x0007054a
    14d0:	05221705 	streq	r1, [r2, #-1797]!	; 0xfffff8fb
    14d4:	1c053d07 	stcne	13, cr3, [r5], {7}
    14d8:	2e340524 	cdpcs	5, 3, cr0, cr4, cr4, {1}
    14dc:	053c1605 	ldreq	r1, [ip, #-1541]!	; 0xfffff9fb
    14e0:	13052e07 	movwne	r2, #24071	; 0x5e07
    14e4:	75010522 	strvc	r0, [r1, #-1314]	; 0xfffffade
    14e8:	01001002 	tsteq	r0, r2
    14ec:	0000ab01 	andeq	sl, r0, r1, lsl #22
    14f0:	65000300 	strvs	r0, [r0, #-768]	; 0xfffffd00
    14f4:	02000000 	andeq	r0, r0, #0
    14f8:	0d0efb01 	vstreq	d15, [lr, #-4]
    14fc:	01010100 	mrseq	r0, (UNDEF: 17)
    1500:	00000001 	andeq	r0, r0, r1
    1504:	01000001 	tsteq	r0, r1
    1508:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 1454 <_Min_Stack_Size+0x1054>
    150c:	73692f65 	cmnvc	r9, #404	; 0x194
    1510:	6c696f6d 	stclvs	15, cr6, [r9], #-436	; 0xfffffe4c
    1514:	6f72702f 	svcvs	0x0072702f
    1518:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    151c:	434d2f73 	movtmi	r2, #57203	; 0xdf73
    1520:	74732f55 	ldrbtvc	r2, [r3], #-3925	; 0xfffff0ab
    1524:	39383737 	ldmdbcc	r8!, {r0, r1, r2, r4, r5, r8, r9, sl, ip, sp}
    1528:	3774732f 	ldrbcc	r7, [r4, -pc, lsr #6]!
    152c:	5f393837 	svcpl	0x00393837
    1530:	69736d63 	ldmdbvs	r3!, {r0, r1, r5, r6, r8, sl, fp, sp, lr}^
    1534:	6c625f73 	stclvs	15, cr5, [r2], #-460	; 0xfffffe34
    1538:	5f6b6361 	svcpl	0x006b6361
    153c:	6c6c6970 			; <UNDEFINED> instruction: 0x6c6c6970
    1540:	74730000 	ldrbtvc	r0, [r3], #-0
    1544:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
    1548:	74735f70 	ldrbtvc	r5, [r3], #-3952	; 0xfffff090
    154c:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    1550:	78313034 	ldmdavc	r1!, {r2, r4, r5, ip, sp}
    1554:	00732e63 	rsbseq	r2, r3, r3, ror #28
    1558:	00000001 	andeq	r0, r0, r1
    155c:	84020500 	strhi	r0, [r2], #-1280	; 0xfffffb00
    1560:	03080023 	movweq	r0, #32803	; 0x8023
    1564:	2131013d 	teqcs	r1, sp, lsr r1
    1568:	23212121 			; <UNDEFINED> instruction: 0x23212121
    156c:	21232121 			; <UNDEFINED> instruction: 0x21232121
    1570:	21212321 			; <UNDEFINED> instruction: 0x21212321
    1574:	23212321 			; <UNDEFINED> instruction: 0x23212321
    1578:	30302321 	eorscc	r2, r0, r1, lsr #6
    157c:	2059032f 	subscs	r0, r9, pc, lsr #6
    1580:	032f2f31 			; <UNDEFINED> instruction: 0x032f2f31
    1584:	022f2e0f 	eoreq	r2, pc, #15, 28	; 0xf0
    1588:	01010002 	tsteq	r1, r2
    158c:	d4020500 	strle	r0, [r2], #-1280	; 0xfffffb00
    1590:	03080023 	movweq	r0, #32803	; 0x8023
    1594:	020100f1 	andeq	r0, r1, #241	; 0xf1
    1598:	01010001 	tsteq	r1, r1
    159c:	00000068 	andeq	r0, r0, r8, rrx
    15a0:	00040005 	andeq	r0, r4, r5
    15a4:	0000002e 	andeq	r0, r0, lr, lsr #32
    15a8:	fb010102 	blx	419ba <_Min_Stack_Size+0x415ba>
    15ac:	01000d0e 	tsteq	r0, lr, lsl #26
    15b0:	00010101 	andeq	r0, r1, r1, lsl #2
    15b4:	00010000 	andeq	r0, r1, r0
    15b8:	01010100 	mrseq	r0, (UNDEF: 17)
    15bc:	0000021f 	andeq	r0, r0, pc, lsl r2
    15c0:	00000000 	andeq	r0, r0, r0
    15c4:	01020000 	mrseq	r0, (UNDEF: 2)
    15c8:	020f021f 	andeq	r0, pc, #-268435455	; 0xf0000001
    15cc:	0000003a 	andeq	r0, r0, sl, lsr r0
    15d0:	00003a00 	andeq	r3, r0, r0, lsl #20
    15d4:	05000100 	streq	r0, [r0, #-256]	; 0xffffff00
    15d8:	00019402 	andeq	r9, r1, r2, lsl #8
    15dc:	01b90308 			; <UNDEFINED> instruction: 0x01b90308
    15e0:	4b140801 	blmi	5035ec <_Min_Stack_Size+0x5031ec>
    15e4:	22212121 	eorcs	r2, r1, #1073741832	; 0x40000008
    15e8:	21245930 			; <UNDEFINED> instruction: 0x21245930
    15ec:	3022212f 	eorcc	r2, r2, pc, lsr #2
    15f0:	212f2159 			; <UNDEFINED> instruction: 0x212f2159
    15f4:	3021242f 	eorcc	r2, r1, pc, lsr #8
    15f8:	2f215930 	svccs	0x00215930
    15fc:	2f302124 	svccs	0x00302124
    1600:	022f2159 	eoreq	r2, pc, #1073741846	; 0x40000016
    1604:	01010001 	tsteq	r1, r1
    1608:	000000c0 	andeq	r0, r0, r0, asr #1
    160c:	007e0003 	rsbseq	r0, lr, r3
    1610:	01020000 	mrseq	r0, (UNDEF: 2)
    1614:	000d0efb 	strdeq	r0, [sp], -fp
    1618:	01010101 	tsteq	r1, r1, lsl #2
    161c:	01000000 	mrseq	r0, (UNDEF: 0)
    1620:	2f010000 	svccs	0x00010000
    1624:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    1628:	72612f64 	rsbvc	r2, r1, #100, 30	; 0x190
    162c:	6f6e2d6d 	svcvs	0x006e2d6d
    1630:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1634:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    1638:	2f636367 	svccs	0x00636367
    163c:	2f637273 	svccs	0x00637273
    1640:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    1644:	322e3131 	eorcc	r3, lr, #1073741836	; 0x4000000c
    1648:	6c2f302e 	stcvs	0, cr3, [pc], #-184	; 1598 <_Min_Stack_Size+0x1198>
    164c:	63676269 	cmnvs	r7, #-1879048186	; 0x90000006
    1650:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    1654:	2f2e2e2f 	svccs	0x002e2e2f
    1658:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    165c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1660:	672f2e2f 	strvs	r2, [pc, -pc, lsr #28]!
    1664:	00006363 	andeq	r6, r0, r3, ror #6
    1668:	6762696c 	strbvs	r6, [r2, -ip, ror #18]!
    166c:	2e326363 	cdpcs	3, 3, cr6, cr2, cr3, {3}
    1670:	00010063 	andeq	r0, r1, r3, rrx
    1674:	6d726100 	ldfvse	f6, [r2, #-0]
    1678:	6173692d 	cmnvs	r3, sp, lsr #18
    167c:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    1680:	696c0000 	stmdbvs	ip!, {}^	; <UNPREDICTABLE>
    1684:	63636762 	cmnvs	r3, #25690112	; 0x1880000
    1688:	00682e32 	rsbeq	r2, r8, r2, lsr lr
    168c:	00000001 	andeq	r0, r0, r1
    1690:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1694:	0023d602 	eoreq	sp, r3, r2, lsl #12
    1698:	0bcf0308 	bleq	ff3c22c0 <_estack+0xdf3b22c0>
    169c:	13030501 	movwne	r0, #13569	; 0x3501
    16a0:	11060105 	tstne	r6, r5, lsl #2
    16a4:	052f0605 	streq	r0, [pc, #-1541]!	; 10a7 <_Min_Stack_Size+0xca7>
    16a8:	06054901 	streq	r4, [r5], -r1, lsl #18
    16ac:	06030521 	streq	r0, [r3], -r1, lsr #10
    16b0:	06010522 	streq	r0, [r1], -r2, lsr #10
    16b4:	2d0a0513 	cfstr32cs	mvfx0, [sl, #-76]	; 0xffffffb4
    16b8:	2d060505 	cfstr32cs	mvfx0, [r6, #-20]	; 0xffffffec
    16bc:	01060e05 	tsteq	r6, r5, lsl #28
    16c0:	2e0c054a 	cfsh32cs	mvfx0, mvfx12, #42
    16c4:	023e0105 	eorseq	r0, lr, #1073741825	; 0x40000001
    16c8:	01010001 	tsteq	r1, r1
    16cc:	000000c9 	andeq	r0, r0, r9, asr #1
    16d0:	007e0003 	rsbseq	r0, lr, r3
    16d4:	01020000 	mrseq	r0, (UNDEF: 2)
    16d8:	000d0efb 	strdeq	r0, [sp], -fp
    16dc:	01010101 	tsteq	r1, r1, lsl #2
    16e0:	01000000 	mrseq	r0, (UNDEF: 0)
    16e4:	2f010000 	svccs	0x00010000
    16e8:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    16ec:	72612f64 	rsbvc	r2, r1, #100, 30	; 0x190
    16f0:	6f6e2d6d 	svcvs	0x006e2d6d
    16f4:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    16f8:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    16fc:	2f636367 	svccs	0x00636367
    1700:	2f637273 	svccs	0x00637273
    1704:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    1708:	322e3131 	eorcc	r3, lr, #1073741836	; 0x4000000c
    170c:	6c2f302e 	stcvs	0, cr3, [pc], #-184	; 165c <_Min_Stack_Size+0x125c>
    1710:	63676269 	cmnvs	r7, #-1879048186	; 0x90000006
    1714:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    1718:	2f2e2e2f 	svccs	0x002e2e2f
    171c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1720:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1724:	672f2e2f 	strvs	r2, [pc, -pc, lsr #28]!
    1728:	00006363 	andeq	r6, r0, r3, ror #6
    172c:	6762696c 	strbvs	r6, [r2, -ip, ror #18]!
    1730:	2e326363 	cdpcs	3, 3, cr6, cr2, cr3, {3}
    1734:	00010063 	andeq	r0, r1, r3, rrx
    1738:	6d726100 	ldfvse	f6, [r2, #-0]
    173c:	6173692d 	cmnvs	r3, sp, lsr #18
    1740:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    1744:	696c0000 	stmdbvs	ip!, {}^	; <UNPREDICTABLE>
    1748:	63636762 	cmnvs	r3, #25690112	; 0x1880000
    174c:	00682e32 	rsbeq	r2, r8, r2, lsr lr
    1750:	00000001 	andeq	r0, r0, r1
    1754:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1758:	00240402 	eoreq	r0, r4, r2, lsl #8
    175c:	0b8f0308 	bleq	fe3c2384 <_estack+0xde3b2384>
    1760:	17030501 	strne	r0, [r3, -r1, lsl #10]
    1764:	0d060105 	stfeqs	f0, [r6, #-20]	; 0xffffffec
    1768:	05251005 	streq	r1, [r5, #-5]!
    176c:	10053319 	andne	r3, r5, r9, lsl r3
    1770:	06030529 	streq	r0, [r3], -r9, lsr #10
    1774:	06190533 			; <UNDEFINED> instruction: 0x06190533
    1778:	2e100501 	cfmul32cs	mvfx0, mvfx0, mvfx1
    177c:	41060305 	tstmi	r6, r5, lsl #6
    1780:	061b0515 			; <UNDEFINED> instruction: 0x061b0515
    1784:	2e27050f 	cfsh64cs	mvdx0, mvdx7, #15
    1788:	05661905 	strbeq	r1, [r6, #-2309]!	; 0xfffff6fb
    178c:	01054a10 	tsteq	r5, r0, lsl sl
    1790:	2e2e2b03 	vmulcs.f64	d2, d14, d3
    1794:	01000402 	tsteq	r0, r2, lsl #8
    1798:	00051e01 	andeq	r1, r5, r1, lsl #28
    179c:	7e000300 	cdpvc	3, 0, cr0, cr0, cr0, {0}
    17a0:	02000000 	andeq	r0, r0, #0
    17a4:	0d0efb01 	vstreq	d15, [lr, #-4]
    17a8:	01010100 	mrseq	r0, (UNDEF: 17)
    17ac:	00000001 	andeq	r0, r0, r1
    17b0:	01000001 	tsteq	r0, r1
    17b4:	6975622f 	ldmdbvs	r5!, {r0, r1, r2, r3, r5, r9, sp, lr}^
    17b8:	612f646c 			; <UNDEFINED> instruction: 0x612f646c
    17bc:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    17c0:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    17c4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    17c8:	6363672d 	cmnvs	r3, #11796480	; 0xb40000
    17cc:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    17d0:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
    17d4:	2e31312d 	rsfcssp	f3, f1, #5.0
    17d8:	2f302e32 	svccs	0x00302e32
    17dc:	6762696c 	strbvs	r6, [r2, -ip, ror #18]!
    17e0:	2e006363 	cdpcs	3, 0, cr6, cr0, cr3, {3}
    17e4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    17e8:	2f2e2e2f 	svccs	0x002e2e2f
    17ec:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    17f0:	2f2e2f2e 	svccs	0x002e2f2e
    17f4:	00636367 	rsbeq	r6, r3, r7, ror #6
    17f8:	62696c00 	rsbvs	r6, r9, #0, 24
    17fc:	32636367 	rsbcc	r6, r3, #-1677721599	; 0x9c000001
    1800:	0100632e 	tsteq	r0, lr, lsr #6
    1804:	72610000 	rsbvc	r0, r1, #0
    1808:	73692d6d 	cmnvc	r9, #6976	; 0x1b40
    180c:	00682e61 	rsbeq	r2, r8, r1, ror #28
    1810:	6c000002 	stcvs	0, cr0, [r0], {2}
    1814:	63676269 	cmnvs	r7, #-1879048186	; 0x90000006
    1818:	682e3263 	stmdavs	lr!, {r0, r1, r5, r6, r9, ip, sp}
    181c:	00000100 	andeq	r0, r0, r0, lsl #2
    1820:	00010500 	andeq	r0, r1, r0, lsl #10
    1824:	24440205 	strbcs	r0, [r4], #-517	; 0xfffffdfb
    1828:	e3030800 	movw	r0, #14336	; 0x3800
    182c:	03050107 	movweq	r0, #20743	; 0x5107
    1830:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    1834:	05141313 	ldreq	r1, [r4, #-787]	; 0xfffffced
    1838:	78030601 	stmdavc	r3, {r0, r9, sl}
    183c:	03060501 	movweq	r0, #25857	; 0x6501
    1840:	01052e0b 	tsteq	r5, fp, lsl #28
    1844:	05207503 	streq	r7, [r0, #-1283]!	; 0xfffffafd
    1848:	03053606 	movweq	r3, #22022	; 0x5606
    184c:	05132106 	ldreq	r2, [r3, #-262]	; 0xfffffefa
    1850:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    1854:	03210603 			; <UNDEFINED> instruction: 0x03210603
    1858:	06050125 	streq	r0, [r5], -r5, lsr #2
    185c:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    1860:	053e0607 	ldreq	r0, [lr, #-1543]!	; 0xfffff9f9
    1864:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    1868:	144e0604 	strbne	r0, [lr], #-1540	; 0xfffff9fc
    186c:	01060705 	tsteq	r6, r5, lsl #14
    1870:	25060805 	strcs	r0, [r6, #-2053]	; 0xfffff7fb
    1874:	13062e05 	movwne	r2, #28165	; 0x6e05
    1878:	052e1105 	streq	r1, [lr, #-261]!	; 0xfffffefb
    187c:	0b052e1e 	bleq	14d0fc <_Min_Stack_Size+0x14ccfc>
    1880:	0608052d 	streq	r0, [r8], -sp, lsr #10
    1884:	060b0521 	streq	r0, [fp], -r1, lsr #10
    1888:	06080501 	streq	r0, [r8], -r1, lsl #10
    188c:	060b052f 	streq	r0, [fp], -pc, lsr #10
    1890:	06040501 	streq	r0, [r4], -r1, lsl #10
    1894:	01010123 	tsteq	r1, r3, lsr #2
    1898:	2e01202e 	cdpcs	0, 0, cr2, cr1, cr14, {1}
    189c:	2e063c06 	cdpcs	12, 0, cr3, cr6, cr6, {0}
    18a0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    18a4:	02002e01 	andeq	r2, r0, #1, 28
    18a8:	20060104 	andcs	r0, r6, r4, lsl #2
    18ac:	01040200 	mrseq	r0, R12_usr
    18b0:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    18b4:	00200304 	eoreq	r0, r0, r4, lsl #6
    18b8:	2e050402 	cdpcs	4, 0, cr0, cr5, cr2, {0}
    18bc:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    18c0:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    18c4:	20060704 	andcs	r0, r6, r4, lsl #14
    18c8:	07040200 	streq	r0, [r4, -r0, lsl #4]
    18cc:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    18d0:	02000107 	andeq	r0, r0, #-1073741823	; 0xc0000001
    18d4:	01060704 	tsteq	r6, r4, lsl #14
    18d8:	07040200 	streq	r0, [r4, -r0, lsl #4]
    18dc:	012a0306 			; <UNDEFINED> instruction: 0x012a0306
    18e0:	07040200 	streq	r0, [r4, -r0, lsl #4]
    18e4:	04020001 	streq	r0, [r2], #-1
    18e8:	02002e07 	andeq	r2, r0, #7, 28	; 0x70
    18ec:	20060704 	andcs	r0, r6, r4, lsl #14
    18f0:	07040200 	streq	r0, [r4, -r0, lsl #4]
    18f4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    18f8:	002e0607 	eoreq	r0, lr, r7, lsl #12
    18fc:	2e070402 	cdpcs	4, 0, cr0, cr7, cr2, {0}
    1900:	08040200 	stmdaeq	r4, {r9}
    1904:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1908:	00200608 	eoreq	r0, r0, r8, lsl #12
    190c:	06080402 	streq	r0, [r8], -r2, lsl #8
    1910:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1914:	0200200a 	andeq	r2, r0, #10
    1918:	002e0c04 	eoreq	r0, lr, r4, lsl #24
    191c:	060c0402 	streq	r0, [ip], -r2, lsl #8
    1920:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1924:	0020060e 	eoreq	r0, r0, lr, lsl #12
    1928:	200e0402 	andcs	r0, lr, r2, lsl #8
    192c:	0e040200 	cdpeq	2, 0, cr0, cr4, cr0, {0}
    1930:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1934:	0001060e 	andeq	r0, r1, lr, lsl #12
    1938:	060e0402 	streq	r0, [lr], -r2, lsl #8
    193c:	00070501 	andeq	r0, r7, r1, lsl #10
    1940:	170e0402 	strne	r0, [lr, -r2, lsl #8]
    1944:	02000a05 	andeq	r0, r0, #20480	; 0x5000
    1948:	01060e04 	tsteq	r6, r4, lsl #28
    194c:	22060405 	andcs	r0, r6, #83886080	; 0x5000000
    1950:	01061205 	tsteq	r6, r5, lsl #4
    1954:	21060405 	tstcs	r6, r5, lsl #8
    1958:	06080513 			; <UNDEFINED> instruction: 0x06080513
    195c:	05202001 	streq	r2, [r0, #-1]!
    1960:	da030603 	ble	c3174 <_Min_Stack_Size+0xc2d74>
    1964:	05132000 	ldreq	r2, [r3, #-0]
    1968:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    196c:	7ef10304 	cdpvc	3, 15, cr0, cr1, cr4, {0}
    1970:	0620202e 	strteq	r2, [r0], -lr, lsr #32
    1974:	05010903 	streq	r0, [r1, #-2307]	; 0xfffff6fd
    1978:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    197c:	05210606 	streq	r0, [r1, #-1542]!	; 0xfffff9fa
    1980:	05142204 	ldreq	r2, [r4, #-516]	; 0xfffffdfc
    1984:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    1988:	09030608 	stmdbeq	r3, {r3, r9, sl}
    198c:	060b0520 	streq	r0, [fp], -r0, lsr #10
    1990:	06080501 	streq	r0, [r8], -r1, lsl #10
    1994:	060b052f 	streq	r0, [fp], -pc, lsr #10
    1998:	00080501 	andeq	r0, r8, r1, lsl #10
    199c:	060f0402 	streq	r0, [pc], -r2, lsl #8
    19a0:	05200d03 	streq	r0, [r0, #-3331]!	; 0xfffff2fd
    19a4:	04020004 	streq	r0, [r2], #-4
    19a8:	0200170f 	andeq	r1, r0, #3932160	; 0x3c0000
    19ac:	00010f04 	andeq	r0, r1, r4, lsl #30
    19b0:	010f0402 	tsteq	pc, r2, lsl #8
    19b4:	0f040200 	svceq	0x00040200
    19b8:	04020001 	streq	r0, [r2], #-1
    19bc:	02002e0f 	andeq	r2, r0, #15, 28	; 0xf0
    19c0:	00200f04 	eoreq	r0, r0, r4, lsl #30
    19c4:	010f0402 	tsteq	pc, r2, lsl #8
    19c8:	0f040200 	svceq	0x00040200
    19cc:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    19d0:	003c060f 	eorseq	r0, ip, pc, lsl #12
    19d4:	060f0402 	streq	r0, [pc], -r2, lsl #8
    19d8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    19dc:	02002e0f 	andeq	r2, r0, #15, 28	; 0xf0
    19e0:	002e0104 	eoreq	r0, lr, r4, lsl #2
    19e4:	06010402 	streq	r0, [r1], -r2, lsl #8
    19e8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    19ec:	002e0601 	eoreq	r0, lr, r1, lsl #12
    19f0:	20030402 	andcs	r0, r3, r2, lsl #8
    19f4:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    19f8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    19fc:	002e0605 	eoreq	r0, lr, r5, lsl #12
    1a00:	06070402 	streq	r0, [r7], -r2, lsl #8
    1a04:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1a08:	002e0607 	eoreq	r0, lr, r7, lsl #12
    1a0c:	20070402 	andcs	r0, r7, r2, lsl #8
    1a10:	03060805 	movweq	r0, #26629	; 0x6805
    1a14:	0a050174 	beq	141fec <_Min_Stack_Size+0x141bec>
    1a18:	08050106 	stmdaeq	r5, {r1, r2, r8}
    1a1c:	0b053006 	bleq	14da3c <_Min_Stack_Size+0x14d63c>
    1a20:	052d1306 	streq	r1, [sp, #-774]!	; 0xfffffcfa
    1a24:	13210608 			; <UNDEFINED> instruction: 0x13210608
    1a28:	01061105 	tsteq	r6, r5, lsl #2
    1a2c:	052e1e05 	streq	r1, [lr, #-3589]!	; 0xfffff1fb
    1a30:	08052e0b 	stmdaeq	r5, {r0, r1, r3, r9, sl, fp, sp}
    1a34:	14062f06 	strne	r2, [r6], #-3846	; 0xfffff0fa
    1a38:	05204a3c 	streq	r4, [r0, #-2620]!	; 0xfffff5c4
    1a3c:	0805560b 	stmdaeq	r5, {r0, r1, r3, r9, sl, ip, lr}
    1a40:	01013006 	tsteq	r1, r6
    1a44:	01010101 	tsteq	r1, r1, lsl #2
    1a48:	00010101 	andeq	r0, r1, r1, lsl #2
    1a4c:	20010402 	andcs	r0, r1, r2, lsl #8
    1a50:	01040200 	mrseq	r0, R12_usr
    1a54:	02002006 	andeq	r2, r0, #6
    1a58:	2e060104 	adfcss	f0, f6, f4
    1a5c:	03040200 	movweq	r0, #16896	; 0x4200
    1a60:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1a64:	02002e05 	andeq	r2, r0, #5, 28	; 0x50
    1a68:	2e060504 	cfsh32cs	mvfx0, mvfx6, #4
    1a6c:	07040200 	streq	r0, [r4, -r0, lsl #4]
    1a70:	02002006 	andeq	r2, r0, #6
    1a74:	002e0704 	eoreq	r0, lr, r4, lsl #14
    1a78:	01070402 	tsteq	r7, r2, lsl #8
    1a7c:	07040200 	streq	r0, [r4, -r0, lsl #4]
    1a80:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1a84:	02002e07 	andeq	r2, r0, #7, 28	; 0x70
    1a88:	2e060704 	cdpcs	7, 0, cr0, cr6, cr4, {0}
    1a8c:	07040200 	streq	r0, [r4, -r0, lsl #4]
    1a90:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1a94:	002e0607 	eoreq	r0, lr, r7, lsl #12
    1a98:	2e080402 	cdpcs	4, 0, cr0, cr8, cr2, {0}
    1a9c:	08040200 	stmdaeq	r4, {r9}
    1aa0:	02002006 	andeq	r2, r0, #6
    1aa4:	2e060804 	cdpcs	8, 0, cr0, cr6, cr4, {0}
    1aa8:	0a040200 	beq	1022b0 <_Min_Stack_Size+0x101eb0>
    1aac:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1ab0:	02002e0c 	andeq	r2, r0, #12, 28	; 0xc0
    1ab4:	2e060c04 	cdpcs	12, 0, cr0, cr6, cr4, {0}
    1ab8:	0e040200 	cdpeq	2, 0, cr0, cr4, cr0, {0}
    1abc:	02002006 	andeq	r2, r0, #6
    1ac0:	002e0e04 	eoreq	r0, lr, r4, lsl #28
    1ac4:	2e0e0402 	cdpcs	4, 0, cr0, cr14, cr2, {0}
    1ac8:	0e040200 	cdpeq	2, 0, cr0, cr4, cr0, {0}
    1acc:	2e200106 	sufcss	f0, f0, f6
    1ad0:	04052020 	streq	r2, [r5], #-32	; 0xffffffe0
    1ad4:	052e2e17 	streq	r2, [lr, #-3607]!	; 0xfffff1e9
    1ad8:	10030607 	andne	r0, r3, r7, lsl #12
    1adc:	060a0501 	streq	r0, [sl], -r1, lsl #10
    1ae0:	06040501 	streq	r0, [r4], -r1, lsl #10
    1ae4:	05151332 	ldreq	r1, [r5, #-818]	; 0xfffffcce
    1ae8:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    1aec:	13220608 			; <UNDEFINED> instruction: 0x13220608
    1af0:	060c0513 			; <UNDEFINED> instruction: 0x060c0513
    1af4:	03070501 	movweq	r0, #29953	; 0x7501
    1af8:	201f2e79 	andscs	r2, pc, r9, ror lr	; <UNPREDICTABLE>
    1afc:	03060405 	movweq	r0, #25605	; 0x6405
    1b00:	052f200f 	streq	r2, [pc, #-15]!	; 1af9 <_Min_Stack_Size+0x16f9>
    1b04:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    1b08:	0a030608 	beq	c3330 <_Min_Stack_Size+0xc2f30>
    1b0c:	060b0520 	streq	r0, [fp], -r0, lsr #10
    1b10:	00140501 	andseq	r0, r4, r1, lsl #10
    1b14:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    1b18:	30060505 	andcc	r0, r6, r5, lsl #10
    1b1c:	06080513 			; <UNDEFINED> instruction: 0x06080513
    1b20:	2105053b 	tstcs	r5, fp, lsr r5
    1b24:	25060805 	strcs	r0, [r6, #-2053]	; 0xfffff7fb
    1b28:	060b0514 			; <UNDEFINED> instruction: 0x060b0514
    1b2c:	06050501 	streq	r0, [r5], -r1, lsl #10
    1b30:	05131330 	ldreq	r1, [r3, #-816]	; 0xfffffcd0
    1b34:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
    1b38:	2e19030b 	cdpcs	3, 1, cr0, cr9, cr11, {0}
    1b3c:	0306052e 	movweq	r0, #25902	; 0x652e
    1b40:	0520015f 	streq	r0, [r0, #-351]!	; 0xfffffea1
    1b44:	0d030608 	stceq	6, cr0, [r3, #-32]	; 0xffffffe0
    1b48:	0a051520 	beq	146fd0 <_Min_Stack_Size+0x146bd0>
    1b4c:	08050106 	stmdaeq	r5, {r1, r2, r8}
    1b50:	11053006 	tstne	r5, r6
    1b54:	1e050106 	adfnes	f0, f5, f6
    1b58:	2e0b0520 	cfsh32cs	mvfx0, mvfx11, #16
    1b5c:	21060805 	tstcs	r6, r5, lsl #16
    1b60:	14061e05 	strne	r1, [r6], #-3589	; 0xfffff1fb
    1b64:	052d0b05 	streq	r0, [sp, #-2821]!	; 0xfffff4fb
    1b68:	0b052f11 	bleq	14d7b4 <_Min_Stack_Size+0x14d3b4>
    1b6c:	3108052e 	tstcc	r8, lr, lsr #10
    1b70:	052c0b05 	streq	r0, [ip, #-2821]!	; 0xfffff4fb
    1b74:	05663008 	strbeq	r3, [r6, #-8]!
    1b78:	0805610b 	stmdaeq	r5, {r0, r1, r3, r8, sp, lr}
    1b7c:	13132f06 	tstne	r3, #6, 30
    1b80:	01010114 	tsteq	r1, r4, lsl r1
    1b84:	01010101 	tsteq	r1, r1, lsl #2
    1b88:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    1b8c:	00200104 	eoreq	r0, r0, r4, lsl #2
    1b90:	06010402 	streq	r0, [r1], -r2, lsl #8
    1b94:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1b98:	002e0601 	eoreq	r0, lr, r1, lsl #12
    1b9c:	20030402 	andcs	r0, r3, r2, lsl #8
    1ba0:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    1ba4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1ba8:	002e0605 	eoreq	r0, lr, r5, lsl #12
    1bac:	06070402 	streq	r0, [r7], -r2, lsl #8
    1bb0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1bb4:	02002e07 	andeq	r2, r0, #7, 28	; 0x70
    1bb8:	00010704 	andeq	r0, r1, r4, lsl #14
    1bbc:	06070402 	streq	r0, [r7], -r2, lsl #8
    1bc0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1bc4:	002e0607 	eoreq	r0, lr, r7, lsl #12
    1bc8:	06070402 	streq	r0, [r7], -r2, lsl #8
    1bcc:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1bd0:	002e0607 	eoreq	r0, lr, r7, lsl #12
    1bd4:	2e070402 	cdpcs	4, 0, cr0, cr7, cr2, {0}
    1bd8:	08040200 	stmdaeq	r4, {r9}
    1bdc:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1be0:	00200608 	eoreq	r0, r0, r8, lsl #12
    1be4:	06080402 	streq	r0, [r8], -r2, lsl #8
    1be8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1bec:	0200200a 	andeq	r2, r0, #10
    1bf0:	002e0c04 	eoreq	r0, lr, r4, lsl #24
    1bf4:	060c0402 	streq	r0, [ip], -r2, lsl #8
    1bf8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1bfc:	0020060e 	eoreq	r0, r0, lr, lsl #12
    1c00:	060e0402 	streq	r0, [lr], -r2, lsl #8
    1c04:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1c08:	0200130e 	andeq	r1, r0, #939524096	; 0x38000000
    1c0c:	002e0e04 	eoreq	r0, lr, r4, lsl #28
    1c10:	110e0402 	tstne	lr, r2, lsl #8
    1c14:	0e040200 	cdpeq	2, 0, cr0, cr4, cr0, {0}
    1c18:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    1c1c:	00010e04 	andeq	r0, r1, r4, lsl #28
    1c20:	060e0402 	streq	r0, [lr], -r2, lsl #8
    1c24:	04020001 	streq	r0, [r2], #-1
    1c28:	0001060e 	andeq	r0, r1, lr, lsl #12
    1c2c:	130e0402 	movwne	r0, #58370	; 0xe402
    1c30:	0e040200 	cdpeq	2, 0, cr0, cr4, cr0, {0}
    1c34:	04020001 	streq	r0, [r2], #-1
    1c38:	0b05010e 	bleq	142078 <_Min_Stack_Size+0x141c78>
    1c3c:	0e040200 	cdpeq	2, 0, cr0, cr4, cr0, {0}
    1c40:	08051406 	stmdaeq	r5, {r1, r2, sl, ip}
    1c44:	0e040200 	cdpeq	2, 0, cr0, cr4, cr0, {0}
    1c48:	0402001e 	streq	r0, [r2], #-30	; 0xffffffe2
    1c4c:	0020060e 	eoreq	r0, r0, lr, lsl #12
    1c50:	060e0402 	streq	r0, [lr], -r2, lsl #8
    1c54:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1c58:	0001060e 	andeq	r0, r1, lr, lsl #12
    1c5c:	140e0402 	strne	r0, [lr], #-1026	; 0xfffffbfe
    1c60:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    1c64:	01060e04 	tsteq	r6, r4, lsl #28
    1c68:	02001405 	andeq	r1, r0, #83886080	; 0x5000000
    1c6c:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    1c70:	04020021 	streq	r0, [r2], #-33	; 0xffffffdf
    1c74:	05052002 	streq	r2, [r5, #-2]
    1c78:	13063006 	movwne	r3, #24582	; 0x6006
    1c7c:	05490705 	strbeq	r0, [r9, #-1797]	; 0xfffff8fb
    1c80:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    1c84:	05151508 	ldreq	r1, [r5, #-1288]	; 0xfffffaf8
    1c88:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    1c8c:	4b220605 	blmi	8834a8 <_Min_Stack_Size+0x8830a8>
    1c90:	01061405 	tsteq	r6, r5, lsl #8
    1c94:	052e2005 	streq	r2, [lr, #-5]!
    1c98:	05052e1a 	streq	r2, [r5, #-3610]	; 0xfffff1e6
    1c9c:	14052f06 	strne	r2, [r5], #-3846	; 0xfffff0fa
    1ca0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1ca4:	09052106 	stmdbeq	r5, {r1, r2, r8, sp}
    1ca8:	08050106 	stmdaeq	r5, {r1, r2, r8}
    1cac:	2e3c6f03 	cdpcs	15, 3, cr6, cr12, cr3, {0}
    1cb0:	030b052e 	movweq	r0, #46382	; 0xb52e
    1cb4:	02020109 	andeq	r0, r2, #1073741826	; 0x40000002
    1cb8:	f1010100 	setend	le
    1cbc:	05000000 	streq	r0, [r0, #-0]
    1cc0:	2e000400 	cfcpyscs	mvf0, mvf0
    1cc4:	02000000 	andeq	r0, r0, #0
    1cc8:	0efb0101 	cdpeq	1, 15, cr0, cr11, cr1, {0}
    1ccc:	0101000d 	tsteq	r1, sp
    1cd0:	00000101 	andeq	r0, r0, r1, lsl #2
    1cd4:	00000100 	andeq	r0, r0, r0, lsl #2
    1cd8:	1f010101 	svcne	0x00010101
    1cdc:	00000002 	andeq	r0, r0, r2
    1ce0:	00000000 	andeq	r0, r0, r0
    1ce4:	1f010200 	svcne	0x00010200
    1ce8:	42020f02 	andmi	r0, r2, #2, 30
    1cec:	00000000 	andeq	r0, r0, r0
    1cf0:	00000042 	andeq	r0, r0, r2, asr #32
    1cf4:	02050001 	andeq	r0, r5, #1
    1cf8:	08000234 	stmdaeq	r0, {r2, r4, r5, r9}
    1cfc:	0104fc03 	tsteq	r4, r3, lsl #24	; <UNPREDICTABLE>
    1d00:	2f2f2f28 	svccs	0x002f2f28
    1d04:	2f2f2f21 	svccs	0x002f2f21
    1d08:	2f322331 	svccs	0x00322331
    1d0c:	2f212f2f 	svccs	0x00212f2f
    1d10:	2f242f2f 	svccs	0x00242f2f
    1d14:	2f2f2f2f 	svccs	0x002f2f2f
    1d18:	212f322f 			; <UNDEFINED> instruction: 0x212f322f
    1d1c:	2f2f2f31 	svccs	0x002f2f31
    1d20:	31212f21 			; <UNDEFINED> instruction: 0x31212f21
    1d24:	2f2f2f2f 	svccs	0x002f2f2f
    1d28:	2f212f31 	svccs	0x00212f31
    1d2c:	2f212f23 	svccs	0x00212f23
    1d30:	2f242f2f 	svccs	0x00242f2f
    1d34:	2f2f2f2f 	svccs	0x002f2f2f
    1d38:	232f2f21 			; <UNDEFINED> instruction: 0x232f2f21
    1d3c:	31232f2f 			; <UNDEFINED> instruction: 0x31232f2f
    1d40:	2f21212f 	svccs	0x0021212f
    1d44:	21212f23 			; <UNDEFINED> instruction: 0x21212f23
    1d48:	2f2f2321 	svccs	0x002f2321
    1d4c:	2f4b2f2f 	svccs	0x004b2f2f
    1d50:	2f4b2f2f 	svccs	0x004b2f2f
    1d54:	2f242f21 	svccs	0x00242f21
    1d58:	4b2f2f2f 	blmi	bcda1c <_Min_Stack_Size+0xbcd61c>
    1d5c:	2f2f2f2f 	svccs	0x002f2f2f
    1d60:	2f242f21 	svccs	0x00242f21
    1d64:	2f4b2f4b 	svccs	0x004b2f4b
    1d68:	2f2f4b2f 	svccs	0x002f4b2f
    1d6c:	2f252f21 	svccs	0x00252f21
    1d70:	2f212f21 	svccs	0x00212f21
    1d74:	2121212f 			; <UNDEFINED> instruction: 0x2121212f
    1d78:	21212f2f 			; <UNDEFINED> instruction: 0x21212f2f
    1d7c:	2f2f212f 	svccs	0x002f212f
    1d80:	2f212121 	svccs	0x00212121
    1d84:	212f2f24 			; <UNDEFINED> instruction: 0x212f2f24
    1d88:	212f232f 			; <UNDEFINED> instruction: 0x212f232f
    1d8c:	2f2f242f 	svccs	0x002f242f
    1d90:	212f232f 			; <UNDEFINED> instruction: 0x212f232f
    1d94:	212f2121 			; <UNDEFINED> instruction: 0x212f2121
    1d98:	212f212f 			; <UNDEFINED> instruction: 0x212f212f
    1d9c:	212f212f 			; <UNDEFINED> instruction: 0x212f212f
    1da0:	32242121 	eorcc	r2, r4, #1073741832	; 0x40000008
    1da4:	2f2f2f2f 	svccs	0x002f2f2f
    1da8:	022f2f24 	eoreq	r2, pc, #36, 30	; 0x90
    1dac:	01010001 	tsteq	r1, r1
    1db0:	00000046 	andeq	r0, r0, r6, asr #32
    1db4:	00040005 	andeq	r0, r4, r5
    1db8:	0000002e 	andeq	r0, r0, lr, lsr #32
    1dbc:	fb010102 	blx	421ce <_Min_Stack_Size+0x41dce>
    1dc0:	01000d0e 	tsteq	r0, lr, lsl #26
    1dc4:	00010101 	andeq	r0, r1, r1, lsl #2
    1dc8:	00010000 	andeq	r0, r1, r0
    1dcc:	01010100 	mrseq	r0, (UNDEF: 17)
    1dd0:	0000021f 	andeq	r0, r0, pc, lsl r2
    1dd4:	00000000 	andeq	r0, r0, r0
    1dd8:	01020000 	mrseq	r0, (UNDEF: 2)
    1ddc:	020f021f 	andeq	r0, pc, #-268435455	; 0xf0000001
    1de0:	0000004f 	andeq	r0, r0, pc, asr #32
    1de4:	00004f00 	andeq	r4, r0, r0, lsl #30
    1de8:	05000100 	streq	r0, [r0, #-256]	; 0xffffff00
    1dec:	00048802 	andeq	r8, r4, r2, lsl #16
    1df0:	0bb90308 	bleq	fee42a18 <_estack+0xdee32a18>
    1df4:	00010201 	andeq	r0, r1, r1, lsl #4
    1df8:	016b0101 	cmneq	fp, r1, lsl #2
    1dfc:	00050000 	andeq	r0, r5, r0
    1e00:	002e0004 	eoreq	r0, lr, r4
    1e04:	01020000 	mrseq	r0, (UNDEF: 2)
    1e08:	0d0efb01 	vstreq	d15, [lr, #-4]
    1e0c:	01010100 	mrseq	r0, (UNDEF: 17)
    1e10:	00000001 	andeq	r0, r0, r1
    1e14:	01000001 	tsteq	r0, r1
    1e18:	021f0101 	andseq	r0, pc, #1073741824	; 0x40000000
	...
    1e24:	021f0102 	andseq	r0, pc, #-2147483648	; 0x80000000
    1e28:	0042020f 	subeq	r0, r2, pc, lsl #4
    1e2c:	42000000 	andmi	r0, r0, #0
    1e30:	01000000 	mrseq	r0, (UNDEF: 0)
    1e34:	8c020500 	cfstr32hi	mvfx0, [r2], {-0}
    1e38:	03080004 	movweq	r0, #32772	; 0x8004
    1e3c:	2f0100cc 	svccs	0x000100cc
    1e40:	2f273633 	svccs	0x00273633
    1e44:	2f212f2f 	svccs	0x00212f2f
    1e48:	2f2f2f21 	svccs	0x002f2f21
    1e4c:	2f2f322f 	svccs	0x002f322f
    1e50:	21212121 			; <UNDEFINED> instruction: 0x21212121
    1e54:	2f2f2f2f 	svccs	0x002f2f2f
    1e58:	2121332f 			; <UNDEFINED> instruction: 0x2121332f
    1e5c:	2f2f2f23 	svccs	0x002f2f23
    1e60:	3421222f 	strtcc	r2, [r1], #-559	; 0xfffffdd1
    1e64:	222f2f2f 	eorcs	r2, pc, #47, 30	; 0xbc
    1e68:	032f3621 			; <UNDEFINED> instruction: 0x032f3621
    1e6c:	2f312e09 	svccs	0x00312e09
    1e70:	2f3d2f21 	svccs	0x003d2f21
    1e74:	2f213d3d 	svccs	0x00213d3d
    1e78:	212f212f 			; <UNDEFINED> instruction: 0x212f212f
    1e7c:	2f323d2f 	svccs	0x00323d2f
    1e80:	2f2f2f22 	svccs	0x002f2f22
    1e84:	2f2e0903 	svccs	0x002e0903
    1e88:	21232f21 			; <UNDEFINED> instruction: 0x21232f21
    1e8c:	2f312f2f 	svccs	0x00312f2f
    1e90:	212f352f 			; <UNDEFINED> instruction: 0x212f352f
    1e94:	2f2f2f2f 	svccs	0x002f2f2f
    1e98:	2f212f24 	svccs	0x00212f24
    1e9c:	032f2121 			; <UNDEFINED> instruction: 0x032f2121
    1ea0:	212f201d 			; <UNDEFINED> instruction: 0x212f201d
    1ea4:	212f2121 			; <UNDEFINED> instruction: 0x212f2121
    1ea8:	212f3321 			; <UNDEFINED> instruction: 0x212f3321
    1eac:	2f2f2421 	svccs	0x002f2421
    1eb0:	2f242f2f 	svccs	0x00242f2f
    1eb4:	2f302f21 	svccs	0x00302f21
    1eb8:	21272f21 			; <UNDEFINED> instruction: 0x21272f21
    1ebc:	24212f21 	strtcs	r2, [r1], #-3873	; 0xfffff0df
    1ec0:	2121212f 			; <UNDEFINED> instruction: 0x2121212f
    1ec4:	2f2f2f23 	svccs	0x002f2f23
    1ec8:	2f244b4b 	svccs	0x00244b4b
    1ecc:	214b2f2f 	cmpcs	fp, pc, lsr #30
    1ed0:	25212f24 	strcs	r2, [r1, #-3876]!	; 0xfffff0dc
    1ed4:	2f212f2f 	svccs	0x00212f2f
    1ed8:	2f242121 	svccs	0x00242121
    1edc:	2f222f21 	svccs	0x00222f21
    1ee0:	2f232f21 	svccs	0x00232f21
    1ee4:	22212121 	eorcs	r2, r1, #1073741832	; 0x40000008
    1ee8:	21212131 			; <UNDEFINED> instruction: 0x21212131
    1eec:	21212f23 			; <UNDEFINED> instruction: 0x21212f23
    1ef0:	212f2121 			; <UNDEFINED> instruction: 0x212f2121
    1ef4:	212f212f 			; <UNDEFINED> instruction: 0x212f212f
    1ef8:	2f2f2f32 	svccs	0x002f2f32
    1efc:	2f200903 	svccs	0x00200903
    1f00:	2f212121 	svccs	0x00212121
    1f04:	2f212121 	svccs	0x00212121
    1f08:	2f2f2f21 	svccs	0x002f2f21
    1f0c:	2f2e0c03 	svccs	0x002e0c03
    1f10:	26222121 	strtcs	r2, [r2], -r1, lsr #2
    1f14:	2f322f2f 	svccs	0x00322f2f
    1f18:	2f2e0a03 	svccs	0x002e0a03
    1f1c:	26222121 	strtcs	r2, [r2], -r1, lsr #2
    1f20:	212f2f2f 			; <UNDEFINED> instruction: 0x212f2f2f
    1f24:	0a032f24 	beq	cdbbc <_Min_Stack_Size+0xcd7bc>
    1f28:	2f2f212e 	svccs	0x002f212e
    1f2c:	2f2f212f 	svccs	0x002f212f
    1f30:	212f222f 			; <UNDEFINED> instruction: 0x212f222f
    1f34:	2f212f22 	svccs	0x00212f22
    1f38:	2f2f2623 	svccs	0x002f2623
    1f3c:	2e0b032f 	cdpcs	3, 0, cr0, cr11, cr15, {1}
    1f40:	2622212f 	strtcs	r2, [r2], -pc, lsr #2
    1f44:	2009032f 	andcs	r0, r9, pc, lsr #6
    1f48:	2622212f 	strtcs	r2, [r2], -pc, lsr #2
    1f4c:	3421222f 	strtcc	r2, [r1], #-559	; 0xfffffdd1
    1f50:	2e09032f 	cdpcs	3, 0, cr0, cr9, cr15, {1}
    1f54:	2f2f312f 	svccs	0x002f312f
    1f58:	212f2121 			; <UNDEFINED> instruction: 0x212f2121
    1f5c:	2f2f3021 	svccs	0x002f3021
    1f60:	212f4b2f 			; <UNDEFINED> instruction: 0x212f4b2f
    1f64:	01000102 	tsteq	r0, r2, lsl #2
    1f68:	00005a01 	andeq	r5, r0, r1, lsl #20
    1f6c:	04000500 	streq	r0, [r0], #-1280	; 0xfffffb00
    1f70:	00002e00 	andeq	r2, r0, r0, lsl #28
    1f74:	01010200 	mrseq	r0, R9_usr
    1f78:	000d0efb 	strdeq	r0, [sp], -fp
    1f7c:	01010101 	tsteq	r1, r1, lsl #2
    1f80:	01000000 	mrseq	r0, (UNDEF: 0)
    1f84:	01010000 	mrseq	r0, (UNDEF: 1)
    1f88:	00021f01 	andeq	r1, r2, r1, lsl #30
    1f8c:	00000000 	andeq	r0, r0, r0
    1f90:	02000000 	andeq	r0, r0, #0
    1f94:	0f021f01 	svceq	0x00021f01
    1f98:	00004202 	andeq	r4, r0, r2, lsl #4
    1f9c:	00420000 	subeq	r0, r2, r0
    1fa0:	00010000 	andeq	r0, r1, r0
    1fa4:	08040205 	stmdaeq	r4, {r0, r2, r9}
    1fa8:	eb030800 	bl	c3fb0 <_Min_Stack_Size+0xc3bb0>
    1fac:	2121010a 			; <UNDEFINED> instruction: 0x2121010a
    1fb0:	2f21212f 	svccs	0x0021212f
    1fb4:	2f2f232f 	svccs	0x002f232f
    1fb8:	2f222f2f 	svccs	0x00222f2f
    1fbc:	2f212f22 	svccs	0x00212f22
    1fc0:	01022f22 	tsteq	r2, r2, lsr #30
    1fc4:	Address 0x0000000000001fc4 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
void st7789_ReadSpi(uint8_t *data, size_t length) {
       0:	52455352 	subpl	r5, r5, #1207959553	; 0x48000001
       4:	31444556 	cmpcc	r4, r6, asr r5
       8:	43545200 	cmpmi	r4, #0, 4
    ST7789_SPI->CR1 &= ~(SPI_CR1_BIDIOE);
       c:	554b575f 	strbpl	r5, [fp, #-1887]	; 0xfffff8a1
      10:	52495f50 	subpl	r5, r9, #80, 30	; 0x140
      14:	45006e51 	strmi	r6, [r0, #-3665]	; 0xfffff1af
    uint8_t dummy = 0;
      18:	32495458 	subcc	r5, r9, #88, 8	; 0x58000000
        while (!(ST7789_SPI->SR & SPI_SR_TXE));
      1c:	5152495f 	cmppl	r2, pc, asr r9
      20:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
      24:	535f3141 	cmppl	pc, #1073741840	; 0x40000010
      28:	61657274 	smcvs	22308	; 0x5724
        ST7789_SPI->DR = dummy;
      2c:	495f366d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, r9, sl, ip, sp}^	; <UNPREDICTABLE>
        while (!(ST7789_SPI->SR & SPI_SR_RXNE));
      30:	006e5152 	rsbeq	r5, lr, r2, asr r1
      34:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
      38:	4c500074 	mrrcmi	0, 7, r0, r0, cr4	; <UNPREDICTABLE>
      3c:	5332494c 	teqpl	r2, #76, 18	; 0x130000
        *data++ = ST7789_SPI->DR;
      40:	52474643 	subpl	r4, r7, #70254592	; 0x4300000
      44:	6f437800 	svcvs	0x00437800
      48:	65746e75 	ldrbvs	r6, [r4, #-3701]!	; 0xfffff18b
    while (length--) {
      4c:	76730072 			; <UNDEFINED> instruction: 0x76730072
      50:	6c614363 	stclvs	3, cr4, [r1], #-396	; 0xfffffe74
      54:	6572006c 	ldrbvs	r0, [r2, #-108]!	; 0xffffff94
    while (ST7789_SPI->SR & SPI_SR_BSY);
      58:	69466c61 	stmdbvs	r6, {r0, r5, r6, sl, fp, sp, lr}^
      5c:	4d6c616e 	stfmie	f6, [ip, #-440]!	; 0xfffffe48
      60:	62006e69 	andvs	r6, r0, #1680	; 0x690
    ST7789_SPI->CR1 |= SPI_CR1_BIDIOE;
      64:	426b6361 	rsbmi	r6, fp, #-2080374783	; 0x84000001
      68:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
      6c:	4d440072 	stclmi	0, cr0, [r4, #-456]	; 0xfffffe38
}
      70:	535f3241 	cmppl	pc, #268435460	; 0x10000004
      74:	61657274 	smcvs	22308	; 0x5724
      78:	495f316d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, r8, ip, sp}^	; <UNPREDICTABLE>
      7c:	006e5152 	rsbeq	r5, lr, r2, asr r1
        line = line + PIXEL_BUFFER_LINES;
      80:	63746162 	cmnvs	r4, #-2147483624	; 0x80000018
      84:	54560068 	ldrbpl	r0, [r6], #-104	; 0xffffff98
        batch += 1;
      88:	5300524f 	movwpl	r5, #591	; 0x24f
      8c:	5f334950 	svcpl	0x00334950
      90:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
      94:	414c4600 	cmpmi	ip, r0, lsl #12
      98:	495f4853 	ldmdbmi	pc, {r0, r1, r4, r6, fp, lr}^	; <UNPREDICTABLE>
      9c:	006e5152 	rsbeq	r5, lr, r2, asr r1
    while (line < ST7789_LCD_HEIGHT) {
      a0:	67616d69 	strbvs	r6, [r1, -r9, ror #26]!
      a4:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
      a8:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    st7789_WaitNanosecs(2000000);
      ac:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
      b0:	6d006e51 	stcvs	14, cr6, [r0, #-324]	; 0xfffffebc
}
      b4:	74697861 	strbtvc	r7, [r9], #-2145	; 0xfffff79f
      b8:	44007265 	strmi	r7, [r0], #-613	; 0xfffffd9b
      bc:	0052414d 	subseq	r4, r2, sp, asr #2
      c0:	52504349 	subspl	r4, r0, #603979777	; 0x24000001
      c4:	6c6f6300 	stclvs	3, cr6, [pc], #-0	; cc <_Min_Heap_Size-0x134>
      c8:	616d726f 	cmnvs	sp, pc, ror #4
      cc:	53550070 	cmppl	r5, #112	; 0x70
      d0:	36545241 	ldrbcc	r5, [r4], -r1, asr #4
      d4:	5152495f 	cmppl	r2, pc, asr r9
      d8:	6e69006e 	cdpvs	0, 6, cr0, cr9, cr14, {3}
      dc:	61697469 	cmnvs	r9, r9, ror #8
      e0:	6f50586c 	svcvs	0x0050586c
      e4:	6972616c 	ldmdbvs	r2!, {r2, r3, r5, r6, r8, sp, lr}^
      e8:	43007974 	movwmi	r7, #2420	; 0x974
      ec:	00315243 	eorseq	r5, r1, r3, asr #4
      f0:	32524343 	subscc	r4, r2, #201326593	; 0xc000001
      f4:	52434300 	subpl	r4, r3, #0, 6
      f8:	43430033 	movtmi	r0, #12339	; 0x3033
      fc:	64003452 	strvs	r3, [r0], #-1106	; 0xfffffbae
     100:	436f6d65 	cmnmi	pc, #6464	; 0x1940
     104:	656c6379 	strbvs	r6, [ip, #-889]!	; 0xfffffc87
     108:	6f6c6f43 	svcvs	0x006c6f43
     10c:	5f007372 	svcpl	0x00007372
     110:	6e69755f 	mcrvs	5, 3, r7, cr9, cr15, {2}
     114:	745f3874 	ldrbvc	r3, [pc], #-2164	; 11c <_Min_Heap_Size-0xe4>
     118:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
     11c:	31314320 	teqcc	r1, r0, lsr #6
     120:	2e313120 	rsfcssp	f3, f1, f0
     124:	20302e32 	eorscs	r2, r0, r2, lsr lr
     128:	70636d2d 	rsbvc	r6, r3, sp, lsr #26
     12c:	6f633d75 	svcvs	0x00633d75
     130:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
     134:	20346d2d 	eorscs	r6, r4, sp, lsr #26
     138:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
     13c:	20626d75 	rsbcs	r6, r2, r5, ror sp
     140:	696c6d2d 	stmdbvs	ip!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
     144:	656c7474 	strbvs	r7, [ip, #-1140]!	; 0xfffffb8c
     148:	646e652d 	strbtvs	r6, [lr], #-1325	; 0xfffffad3
     14c:	206e6169 	rsbcs	r6, lr, r9, ror #2
     150:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
     154:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
     158:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
     15c:	64726168 	ldrbtvs	r6, [r2], #-360	; 0xfffffe98
     160:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
     164:	663d7570 			; <UNDEFINED> instruction: 0x663d7570
     168:	2d347670 	ldccs	6, cr7, [r4, #-448]!	; 0xfffffe40
     16c:	642d7073 	strtvs	r7, [sp], #-115	; 0xffffff8d
     170:	2d203631 	stccs	6, cr3, [r0, #-196]!	; 0xffffff3c
     174:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
     178:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
     17c:	6537766d 	ldrvs	r7, [r7, #-1645]!	; 0xfffff993
     180:	662b6d2d 	strtvs	r6, [fp], -sp, lsr #26
     184:	672d2070 			; <UNDEFINED> instruction: 0x672d2070
     188:	304f2d20 	subcc	r2, pc, r0, lsr #26
     18c:	74732d20 	ldrbtvc	r2, [r3], #-3360	; 0xfffff2e0
     190:	6e673d64 	cdpvs	13, 6, cr3, cr7, cr4, {3}
     194:	20313175 	eorscs	r3, r1, r5, ror r1
     198:	7473662d 	ldrbtvc	r6, [r3], #-1581	; 0xfffff9d3
     19c:	2d6b6361 	stclcs	3, cr6, [fp, #-388]!	; 0xfffffe7c
     1a0:	67617375 			; <UNDEFINED> instruction: 0x67617375
     1a4:	662d2065 	strtvs	r2, [sp], -r5, rrx
     1a8:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
     1ac:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     1b0:	6365732d 	cmnvs	r5, #-1275068416	; 0xb4000000
     1b4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     1b8:	662d2073 			; <UNDEFINED> instruction: 0x662d2073
     1bc:	61746164 	cmnvs	r4, r4, ror #2
     1c0:	6365732d 	cmnvs	r5, #-1275068416	; 0xb4000000
     1c4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     1c8:	662d2073 			; <UNDEFINED> instruction: 0x662d2073
     1cc:	732d6f6e 			; <UNDEFINED> instruction: 0x732d6f6e
     1d0:	63697274 	cmnvs	r9, #116, 4	; 0x40000007
     1d4:	6c612d74 	stclvs	13, cr2, [r1], #-464	; 0xfffffe30
     1d8:	69736169 	ldmdbvs	r3!, {r0, r3, r5, r6, r8, sp, lr}^
     1dc:	2d20676e 	stccs	7, cr6, [r0, #-440]!	; 0xfffffe48
     1e0:	73697666 	cmnvc	r9, #106954752	; 0x6600000
     1e4:	6c696269 	sfmvs	f6, 2, [r9], #-420	; 0xfffffe5c
     1e8:	3d797469 	cfldrdcc	mvd7, [r9, #-420]!	; 0xfffffe5c
     1ec:	64646968 	strbtvs	r6, [r4], #-2408	; 0xfffff698
     1f0:	53006e65 	movwpl	r6, #3685	; 0xe65
     1f4:	5f324950 	svcpl	0x00324950
     1f8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     1fc:	6f507900 	svcvs	0x00507900
     200:	6972616c 	ldmdbvs	r2!, {r2, r3, r5, r6, r8, sp, lr}^
     204:	41007974 	tstmi	r0, r4, ror r9
     208:	4c324248 	lfmmi	f4, 4, [r2], #-288	; 0xfffffee0
     20c:	524e4550 	subpl	r4, lr, #80, 10	; 0x14000000
     210:	43585400 	cmpmi	r8, #0, 8
     214:	00524352 	subseq	r4, r2, r2, asr r3
     218:	43524941 	cmpmi	r2, #1064960	; 0x104000
     21c:	6d690052 	stclvs	0, cr0, [r9, #-328]!	; 0xfffffeb8
     220:	614d6761 	cmpvs	sp, r1, ror #14
     224:	50430078 	subpl	r0, r3, r8, ror r0
     228:	00444955 	subeq	r4, r4, r5, asr r9
     22c:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
     230:	79530065 	ldmdbvc	r3, {r0, r2, r5, r6}^
     234:	63695473 	cmnvs	r9, #1929379840	; 0x73000000
     238:	61485f6b 	cmpvs	r8, fp, ror #30
     23c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     240:	4d440072 	stclmi	0, cr0, [r4, #-456]	; 0xfffffe38
     244:	535f3241 	cmppl	pc, #268435460	; 0x10000004
     248:	61657274 	smcvs	22308	; 0x5724
     24c:	495f356d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, r8, sl, ip, sp}^	; <UNPREDICTABLE>
     250:	006e5152 	rsbeq	r5, lr, r2, asr r1
     254:	616f7469 	cmnvs	pc, r9, ror #8
     258:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     25c:	52545f31 	subspl	r5, r4, #49, 30	; 0xc4
     260:	4f435f47 	svcmi	0x00435f47
     264:	49545f4d 	ldmdbmi	r4, {r0, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
     268:	5f31314d 	svcpl	0x0031314d
     26c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     270:	42504100 	subsmi	r4, r0, #0, 2
     274:	524e4532 	subpl	r4, lr, #209715200	; 0xc800000
     278:	42484100 	submi	r4, r8, #0, 2
     27c:	45504c31 	ldrbmi	r4, [r0, #-3121]	; 0xfffff3cf
     280:	5300524e 	movwpl	r5, #590	; 0x24e
     284:	69547379 	ldmdbvs	r4, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
     288:	495f6b63 	ldmdbmi	pc, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^	; <UNPREDICTABLE>
     28c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     290:	434b4344 	movtmi	r4, #45892	; 0xb344
     294:	00524746 	subseq	r4, r2, r6, asr #14
     298:	52534349 	subspl	r4, r3, #603979777	; 0x24000001
     29c:	616d6900 	cmnvs	sp, r0, lsl #18
     2a0:	615f6567 	cmpvs	pc, r7, ror #10
     2a4:	00726464 	rsbseq	r6, r2, r4, ror #8
     2a8:	756c6f63 	strbvc	r6, [ip, #-3939]!	; 0xfffff09d
     2ac:	54006e6d 	strpl	r6, [r0], #-3693	; 0xfffff193
     2b0:	545f4d49 	ldrbpl	r4, [pc], #-3401	; 2b8 <_Min_Heap_Size+0xb8>
     2b4:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     2b8:	44006665 	strmi	r6, [r0], #-1637	; 0xfffff99b
     2bc:	5f31414d 	svcpl	0x0031414d
     2c0:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
     2c4:	5f326d61 	svcpl	0x00326d61
     2c8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     2cc:	53455200 	movtpl	r5, #20992	; 0x5200
     2d0:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     2d4:	52003044 	andpl	r3, r0, #68	; 0x44
     2d8:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     2dc:	31444556 	cmpcc	r4, r6, asr r5
     2e0:	736e7500 	cmnvc	lr, #0, 10
     2e4:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
     2e8:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
     2ec:	44007261 	strmi	r7, [r0], #-609	; 0xfffffd9f
     2f0:	5f32414d 	svcpl	0x0032414d
     2f4:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
     2f8:	5f346d61 	svcpl	0x00346d61
     2fc:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     300:	53455200 	movtpl	r5, #20992	; 0x5200
     304:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     308:	52003444 	andpl	r3, r0, #68, 8	; 0x44000000
     30c:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     310:	35444556 	strbcc	r4, [r4, #-1366]	; 0xfffffaaa
     314:	53455200 	movtpl	r5, #20992	; 0x5200
     318:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     31c:	52003644 	andpl	r3, r0, #68, 12	; 0x4400000
     320:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     324:	37444556 	smlsldcc	r4, r4, r6, r5	; <UNPREDICTABLE>
     328:	4e5f5f00 	cdpmi	15, 5, cr5, cr15, cr0, {0}
     32c:	5f434956 	svcpl	0x00434956
     330:	50746553 	rsbspl	r6, r4, r3, asr r5
     334:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
     338:	00797469 	rsbseq	r7, r9, r9, ror #8
     33c:	52424149 	subpl	r4, r2, #1073741842	; 0x40000012
     340:	43324900 	teqmi	r2, #0, 18
     344:	52455f31 	subpl	r5, r5, #49, 30	; 0xc4
     348:	5152495f 	cmppl	r2, pc, asr r9
     34c:	6d69006e 	stclvs	0, cr0, [r9, #-440]!	; 0xfffffe48
     350:	69466761 	stmdbvs	r6, {r0, r5, r6, r8, r9, sl, sp, lr}^
     354:	4d6c616e 	stfmie	f6, [ip, #-440]!	; 0xfffffe48
     358:	64007861 	strvs	r7, [r0], #-2145	; 0xfffff79f
     35c:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
     360:	00736d5f 	rsbseq	r6, r3, pc, asr sp
     364:	6c616572 	cfstr64vs	mvdx6, [r1], #-456	; 0xfffffe38
     368:	006e696d 	rsbeq	r6, lr, sp, ror #18
     36c:	37377473 			; <UNDEFINED> instruction: 0x37377473
     370:	575f3938 	smmlarpl	pc, r8, r9, r3	; <UNPREDICTABLE>
     374:	4e746961 	vsubmi.f16	s13, s8, s3	; <UNPREDICTABLE>
     378:	736f6e61 	cmnvc	pc, #1552	; 0x610
     37c:	00736365 	rsbseq	r6, r3, r5, ror #6
     380:	6f6f425f 	svcvs	0x006f425f
     384:	6970006c 	ldmdbvs	r0!, {r2, r3, r5, r6}^
     388:	736c6578 	cmnvc	ip, #120, 10	; 0x1e000000
     38c:	53455200 	movtpl	r5, #20992	; 0x5200
     390:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     394:	52003244 	andpl	r3, r0, #68, 4	; 0x40000004
     398:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     39c:	33444556 	movtcc	r4, #17750	; 0x4556
     3a0:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     3a4:	52495f35 	subpl	r5, r9, #53, 30	; 0xd4
     3a8:	55006e51 	strpl	r6, [r0, #-3665]	; 0xfffff1af
     3ac:	65676173 	strbvs	r6, [r7, #-371]!	; 0xfffffe8d
     3b0:	6c756146 	ldfvse	f6, [r5], #-280	; 0xfffffee8
     3b4:	52495f74 	subpl	r5, r9, #116, 30	; 0x1d0
     3b8:	43006e51 	movwmi	r6, #3665	; 0xe51
     3bc:	31524d43 	cmpcc	r2, r3, asr #26
     3c0:	4d434300 	stclmi	3, cr4, [r3, #-0]
     3c4:	73003252 	movwvc	r3, #594	; 0x252
     3c8:	38373774 	ldmdacc	r7!, {r2, r4, r5, r6, r8, r9, sl, ip, sp}
     3cc:	50475f39 	subpl	r5, r7, r9, lsr pc
     3d0:	6e494f49 	cdpvs	15, 4, cr4, cr9, cr9, {2}
     3d4:	53007469 	movwpl	r7, #1129	; 0x469
     3d8:	545f4243 	ldrbpl	r4, [pc], #-579	; 3e0 <_Min_Heap_Size+0x1e0>
     3dc:	00657079 	rsbeq	r7, r5, r9, ror r0
     3e0:	52534644 	subspl	r4, r3, #68, 12	; 0x4400000
     3e4:	42484100 	submi	r4, r8, #0, 2
     3e8:	54535231 	ldrbpl	r5, [r3], #-561	; 0xfffffdcf
     3ec:	5f5f0052 	svcpl	0x005f0052
     3f0:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
     3f4:	745f3631 	ldrbvc	r3, [pc], #-1585	; 3fc <_Min_Heap_Size+0x1fc>
     3f8:	42484100 	submi	r4, r8, #0, 2
     3fc:	524e4532 	subpl	r4, lr, #209715200	; 0xc800000
     400:	65747300 	ldrbvs	r7, [r4, #-768]!	; 0xfffffd00
     404:	61655270 	smcvs	21792	; 0x5520
     408:	7673006c 	ldrbtvc	r0, [r3], -ip, rrx
     40c:	676f4c63 	strbvs	r4, [pc, -r3, ror #24]!
     410:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
     414:	53464800 	movtpl	r4, #26624	; 0x6800
     418:	6d690052 	stclvs	0, cr0, [r9, #-328]!	; 0xfffffeb8
     41c:	64006761 	strvs	r6, [r0], #-1889	; 0xfffff89f
     420:	4d6f6d65 	stclmi	13, cr6, [pc, #-404]!	; 294 <_Min_Heap_Size+0x94>
     424:	65646e61 	strbvs	r6, [r4, #-3681]!	; 0xfffff19f
     428:	6f72626c 	svcvs	0x0072626c
     42c:	49540074 	ldmdbmi	r4, {r2, r4, r5, r6}^
     430:	495f344d 	ldmdbmi	pc, {r0, r2, r3, r6, sl, ip, sp}^	; <UNPREDICTABLE>
     434:	006e5152 	rsbeq	r5, lr, r2, asr r1
     438:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
     43c:	495f3254 	ldmdbmi	pc, {r2, r4, r6, r9, ip, sp}^	; <UNPREDICTABLE>
     440:	006e5152 	rsbeq	r5, lr, r2, asr r1
     444:	52434442 	subpl	r4, r3, #1107296256	; 0x42000000
     448:	43485300 	movtmi	r5, #33536	; 0x8300
     44c:	69005253 	stmdbvs	r0, {r0, r1, r4, r6, r9, ip, lr}
     450:	7167616d 	cmnvc	r7, sp, ror #2
     454:	49545300 	ldmdbmi	r4, {r8, r9, ip, lr}^
     458:	32490052 	subcc	r0, r9, #82	; 0x52
     45c:	455f3143 	ldrbmi	r3, [pc, #-323]	; 321 <_Min_Heap_Size+0x121>
     460:	52495f56 	subpl	r5, r9, #344	; 0x158
     464:	73006e51 	movwvc	r6, #3665	; 0xe51
     468:	49706574 	ldmdbmi	r0!, {r2, r4, r5, r6, r8, sl, sp, lr}^
     46c:	0067616d 	rsbeq	r6, r7, sp, ror #2
     470:	53746553 	cmnpl	r4, #348127232	; 0x14c00000
     474:	6c437379 	mcrrvs	3, 7, r7, r3, cr9
     478:	386f546b 	stmdacc	pc!, {r0, r1, r3, r5, r6, sl, ip, lr}^	; <UNPREDICTABLE>
     47c:	50470034 	subpl	r0, r7, r4, lsr r0
     480:	495f4f49 	ldmdbmi	pc, {r0, r3, r6, r8, r9, sl, fp, lr}^	; <UNPREDICTABLE>
     484:	0074696e 	rsbseq	r6, r4, lr, ror #18
     488:	37377473 			; <UNDEFINED> instruction: 0x37377473
     48c:	575f3938 	smmlarpl	pc, r8, r9, r3	; <UNPREDICTABLE>
     490:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
     494:	00414d44 	subeq	r4, r1, r4, asr #26
     498:	37377473 			; <UNDEFINED> instruction: 0x37377473
     49c:	435f3938 	cmpmi	pc, #56, 18	; 0xe0000
     4a0:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
     4a4:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     4a8:	43435f31 	movtmi	r5, #16177	; 0x3f31
     4ac:	5152495f 	cmppl	r2, pc, asr r9
     4b0:	5845006e 	stmdapl	r5, {r1, r2, r3, r5, r6}^
     4b4:	5f314954 	svcpl	0x00314954
     4b8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     4bc:	42484100 	submi	r4, r8, #0, 2
     4c0:	524e4533 	subpl	r4, lr, #213909504	; 0xcc00000
     4c4:	6d656400 	cfstrdvs	mvd6, [r5, #-0]
     4c8:	6568436f 	strbvs	r4, [r8, #-879]!	; 0xfffffc91
     4cc:	6f626b63 	svcvs	0x00626b63
     4d0:	44647261 	strbtmi	r7, [r4], #-609	; 0xfffffd9f
     4d4:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
     4d8:	44007961 	strmi	r7, [r0], #-2401	; 0xfffff69f
     4dc:	5f31414d 	svcpl	0x0031414d
     4e0:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
     4e4:	5f356d61 	svcpl	0x00356d61
     4e8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     4ec:	37747300 	ldrbcc	r7, [r4, -r0, lsl #6]!
     4f0:	5f393837 	svcpl	0x00393837
     4f4:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
     4f8:	44726f46 	ldrbtmi	r6, [r2], #-3910	; 0xfffff0ba
     4fc:	4400414d 	strmi	r4, [r0], #-333	; 0xfffffeb3
     500:	5f32414d 	svcpl	0x0032414d
     504:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
     508:	5f376d61 	svcpl	0x00376d61
     50c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     510:	616d6900 	cmnvs	sp, r0, lsl #18
     514:	6e694d67 	cdpvs	13, 6, cr4, cr9, cr7, {3}
     518:	47544f00 	ldrbmi	r4, [r4, -r0, lsl #30]
     51c:	5f53465f 	svcpl	0x0053465f
     520:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     524:	54504f00 	ldrbpl	r4, [r0], #-3840	; 0xfffff100
     528:	5259454b 	subspl	r4, r9, #314572800	; 0x12c00000
     52c:	6e6f4e00 	cdpvs	14, 6, cr4, cr15, cr0, {0}
     530:	6b73614d 	blvs	1cd8a6c <_Min_Stack_Size+0x1cd866c>
     534:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
     538:	5f746e49 	svcpl	0x00746e49
     53c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     540:	65686300 	strbvs	r6, [r8, #-768]!	; 0xfffffd00
     544:	6f626b63 	svcvs	0x00626b63
     548:	53647261 	cmnpl	r4, #268435462	; 0x10000006
     54c:	00657a69 	rsbeq	r7, r5, r9, ror #20
     550:	75746573 	ldrbvc	r6, [r4, #-1395]!	; 0xfffffa8d
     554:	6d695470 	cfstrdvs	mvd5, [r9, #-448]!	; 0xfffffe40
     558:	57007265 	strpl	r7, [r0, -r5, ror #4]
     55c:	5f474457 	svcpl	0x00474457
     560:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     564:	42504100 	subsmi	r4, r0, #0, 2
     568:	524e4531 	subpl	r4, lr, #205520896	; 0xc400000
     56c:	66756200 	ldrbtvs	r6, [r5], -r0, lsl #4
     570:	00727450 	rsbseq	r7, r2, r0, asr r4
     574:	6f6d654d 	svcvs	0x006d654d
     578:	614d7972 	hvcvs	55186	; 0xd792
     57c:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
     580:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
     584:	5152495f 	cmppl	r2, pc, asr r9
     588:	4944006e 	stmdbmi	r4, {r1, r2, r3, r5, r6}^
     58c:	53005245 	movwpl	r5, #581	; 0x245
     590:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
     594:	726f436d 	rsbvc	r4, pc, #-1275068415	; 0xb4000001
     598:	6f6c4365 	svcvs	0x006c4365
     59c:	54006b63 	strpl	r6, [r0], #-2915	; 0xfffff49d
     5a0:	5f504d41 	svcpl	0x00504d41
     5a4:	4d415453 	cfstrdmi	mvd5, [r1, #-332]	; 0xfffffeb4
     5a8:	52495f50 	subpl	r5, r9, #80, 30	; 0x140
     5ac:	49006e51 	stmdbmi	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     5b0:	5f6e5152 	svcpl	0x006e5152
     5b4:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     5b8:	6e696c00 	cdpvs	12, 6, cr6, cr9, cr0, {0}
     5bc:	682f0065 	stmdavs	pc!, {r0, r2, r5, r6}	; <UNPREDICTABLE>
     5c0:	2f656d6f 	svccs	0x00656d6f
     5c4:	6f6d7369 	svcvs	0x006d7369
     5c8:	702f6c69 	eorvc	r6, pc, r9, ror #24
     5cc:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
     5d0:	2f737463 	svccs	0x00737463
     5d4:	2f55434d 	svccs	0x0055434d
     5d8:	37377473 			; <UNDEFINED> instruction: 0x37377473
     5dc:	732f3938 			; <UNDEFINED> instruction: 0x732f3938
     5e0:	38373774 	ldmdacc	r7!, {r2, r4, r5, r6, r8, r9, sl, ip, sp}
     5e4:	6d635f39 	stclvs	15, cr5, [r3, #-228]!	; 0xffffff1c
     5e8:	5f736973 	svcpl	0x00736973
     5ec:	63616c62 	cmnvs	r1, #25088	; 0x6200
     5f0:	69705f6b 	ldmdbvs	r0!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     5f4:	432f6c6c 			; <UNDEFINED> instruction: 0x432f6c6c
     5f8:	2f65726f 	svccs	0x0065726f
     5fc:	2f637253 	svccs	0x00637253
     600:	6e69616d 	powvsez	f6, f1, #5.0
     604:	7400632e 	strvc	r6, [r0], #-814	; 0xfffffcd2
     608:	006b6369 	rsbeq	r6, fp, r9, ror #6
     60c:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
     610:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     614:	306d6165 	rsbcc	r6, sp, r5, ror #2
     618:	5152495f 	cmppl	r2, pc, asr r9
     61c:	434c006e 	movtmi	r0, #49262	; 0xc06e
     620:	4900524b 	stmdbmi	r0, {r0, r1, r3, r6, r9, ip, lr}
     624:	5f324332 	svcpl	0x00324332
     628:	495f5245 	ldmdbmi	pc, {r0, r2, r6, r9, ip, lr}^	; <UNPREDICTABLE>
     62c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     630:	6c6f5078 	stclvs	0, cr5, [pc], #-480	; 458 <_Min_Stack_Size+0x58>
     634:	74697261 	strbtvc	r7, [r9], #-609	; 0xfffffd9f
     638:	534f0079 	movtpl	r0, #61561	; 0xf079
     63c:	44454550 	strbmi	r4, [r5], #-1360	; 0xfffffab0
     640:	75420052 	strbvc	r0, [r2, #-82]	; 0xffffffae
     644:	75614673 	strbvc	r4, [r1, #-1651]!	; 0xfffff98d
     648:	495f746c 	ldmdbmi	pc, {r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
     64c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     650:	6b636974 	blvs	18dac28 <_Min_Stack_Size+0x18da828>
     654:	74730073 	ldrbtvc	r0, [r3], #-115	; 0xffffff8d
     658:	39383737 	ldmdbcc	r8!, {r0, r1, r2, r4, r5, r8, r9, sl, ip, sp}
     65c:	7365525f 	cmnvc	r5, #-268435451	; 0xf0000005
     660:	54007465 	strpl	r7, [r0], #-1125	; 0xfffffb9b
     664:	5f314d49 	svcpl	0x00314d49
     668:	5f4b5242 	svcpl	0x004b5242
     66c:	394d4954 	stmdbcc	sp, {r2, r4, r6, r8, fp, lr}^
     670:	5152495f 	cmppl	r2, pc, asr r9
     674:	5f5f006e 	svcpl	0x005f006e
     678:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
     67c:	745f3233 	ldrbvc	r3, [pc], #-563	; 684 <_Min_Stack_Size+0x284>
     680:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
     684:	6f6c2067 	svcvs	0x006c2067
     688:	6920676e 	stmdbvs	r0!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
     68c:	5000746e 	andpl	r7, r0, lr, ror #8
     690:	52445055 	subpl	r5, r4, #85	; 0x55
     694:	616d6900 	cmnvs	sp, r0, lsl #18
     698:	6e694667 	cdpvs	6, 6, cr4, cr9, cr7, {3}
     69c:	694d6c61 	stmdbvs	sp, {r0, r5, r6, sl, fp, sp, lr}^
     6a0:	5353006e 	cmppl	r3, #110	; 0x6e
     6a4:	00524743 	subseq	r4, r2, r3, asr #14
     6a8:	31495053 	qdaddcc	r5, r3, r9
     6ac:	5152495f 	cmppl	r2, pc, asr r9
     6b0:	4c50006e 	mrrcmi	0, 6, r0, r0, cr14	; <UNPREDICTABLE>
     6b4:	4746434c 	strbmi	r4, [r6, -ip, asr #6]
     6b8:	56530052 			; <UNDEFINED> instruction: 0x56530052
     6bc:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
     6c0:	5152495f 	cmppl	r2, pc, asr r9
     6c4:	6572006e 	ldrbvs	r0, [r2, #-110]!	; 0xffffff92
     6c8:	6e496c61 	cdpvs	12, 4, cr6, cr9, cr1, {3}
     6cc:	41007469 	tstmi	r0, r9, ror #8
     6d0:	52324250 	eorspl	r4, r2, #80, 4
     6d4:	00525453 	subseq	r5, r2, r3, asr r4
     6d8:	6f6c6f63 	svcvs	0x006c6f63
     6dc:	74730072 	ldrbtvc	r0, [r3], #-114	; 0xffffff8e
     6e0:	39383737 	ldmdbcc	r8!, {r0, r1, r2, r4, r5, r8, r9, sl, ip, sp}
     6e4:	696e495f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
     6e8:	5f315f74 	svcpl	0x00315f74
     6ec:	434c5f33 	movtmi	r5, #53043	; 0xcf33
     6f0:	50460044 	subpl	r0, r6, r4, asr #32
     6f4:	52495f55 	subpl	r5, r9, #340	; 0x154
     6f8:	52006e51 	andpl	r6, r0, #1296	; 0x510
     6fc:	43524358 	cmpmi	r2, #88, 6	; 0x60000001
     700:	65720052 	ldrbvs	r0, [r2, #-82]!	; 0xffffffae
     704:	614d6c61 	cmpvs	sp, r1, ror #24
     708:	50410078 	subpl	r0, r1, r8, ror r0
     70c:	504c3242 	subpl	r3, ip, r2, asr #4
     710:	00524e45 	subseq	r4, r2, r5, asr #28
     714:	5f47544f 	svcpl	0x0047544f
     718:	575f5346 	ldrbpl	r5, [pc, -r6, asr #6]
     71c:	5f50554b 	svcpl	0x0050554b
     720:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     724:	61657200 	cmnvs	r5, r0, lsl #4
     728:	5845006c 	stmdapl	r5, {r2, r3, r5, r6}^
     72c:	5f344954 	svcpl	0x00344954
     730:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     734:	52544300 	subspl	r4, r4, #0, 6
     738:	6564004c 	strbvs	r0, [r4, #-76]!	; 0xffffffb4
     73c:	614d6f6d 	cmpvs	sp, sp, ror #30
     740:	6c65646e 	cfstrdvs	mvd6, [r5], #-440	; 0xfffffe48
     744:	746f7262 	strbtvc	r7, [pc], #-610	; 74c <_Min_Stack_Size+0x34c>
     748:	636c6143 	cmnvs	ip, #-1073741808	; 0xc0000010
     74c:	74616c75 	strbtvc	r6, [r1], #-3189	; 0xfffff38b
     750:	32490065 	subcc	r0, r9, #101	; 0x65
     754:	455f3243 	ldrbmi	r3, [pc, #-579]	; 519 <_Min_Stack_Size+0x119>
     758:	52495f56 	subpl	r5, r9, #344	; 0x158
     75c:	64006e51 	strvs	r6, [r0], #-3665	; 0xfffff1af
     760:	496f6d65 	stmdbmi	pc!, {r0, r2, r5, r6, r8, sl, fp, sp, lr}^	; <UNPREDICTABLE>
     764:	006e6f63 	rsbeq	r6, lr, r3, ror #30
     768:	67616d69 	strbvs	r6, [r1, -r9, ror #26]!
     76c:	0078616d 	rsbseq	r6, r8, sp, ror #2
     770:	52414642 	subpl	r4, r1, #69206016	; 0x4200000
     774:	6d656400 	cfstrdvs	mvd6, [r5, #-0]
     778:	6568436f 	strbvs	r4, [r8, #-879]!	; 0xfffffc91
     77c:	6f626b63 	svcvs	0x00626b63
     780:	00647261 	rsbeq	r7, r4, r1, ror #4
     784:	31425041 	cmpcc	r2, r1, asr #32
     788:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
     78c:	4d440052 	stclmi	0, cr0, [r4, #-328]	; 0xfffffeb8
     790:	535f3141 	cmppl	pc, #1073741840	; 0x40000010
     794:	61657274 	smcvs	22308	; 0x5724
     798:	495f316d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     79c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     7a0:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
     7a4:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     7a8:	336d6165 	cmncc	sp, #1073741849	; 0x40000019
     7ac:	5152495f 	cmppl	r2, pc, asr r9
     7b0:	6c66006e 	stclvs	0, cr0, [r6], #-440	; 0xfffffe48
     7b4:	5f74616f 	svcpl	0x0074616f
     7b8:	74736166 	ldrbtvc	r6, [r3], #-358	; 0xfffffe9a
     7bc:	5300745f 	movwpl	r7, #1119	; 0x45f
     7c0:	69547379 	ldmdbvs	r4, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
     7c4:	545f6b63 	ldrbpl	r6, [pc], #-2915	; 7cc <_Min_Stack_Size+0x3cc>
     7c8:	00657079 	rsbeq	r7, r5, r9, ror r0
     7cc:	33424841 	movtcc	r4, #10305	; 0x2841
     7d0:	52545352 	subspl	r5, r4, #1207959553	; 0x48000001
     7d4:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
     7d8:	6f642067 	svcvs	0x00642067
     7dc:	656c6275 	strbvs	r6, [ip, #-629]!	; 0xfffffd8b
     7e0:	6f6c6600 	svcvs	0x006c6600
     7e4:	745f7461 	ldrbvc	r7, [pc], #-1121	; 7ec <_Min_Stack_Size+0x3ec>
     7e8:	54504f00 	ldrbpl	r4, [r0], #-3840	; 0xfffff100
     7ec:	00315243 	eorseq	r5, r1, r3, asr #4
     7f0:	31414d44 	cmpcc	r1, r4, asr #26
     7f4:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     7f8:	306d6165 	rsbcc	r6, sp, r5, ror #2
     7fc:	5152495f 	cmppl	r2, pc, asr r9
     800:	4379006e 	cmnmi	r9, #110	; 0x6e
     804:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
     808:	41007265 	tstmi	r0, r5, ror #4
     80c:	52314250 	eorspl	r4, r1, #80, 4
     810:	00525453 	subseq	r5, r2, r3, asr r4
     814:	5f435452 	svcpl	0x00435452
     818:	72616c41 	rsbvc	r6, r1, #16640	; 0x4100
     81c:	52495f6d 	subpl	r5, r9, #436	; 0x1b4
     820:	4e006e51 	mcrmi	14, 0, r6, cr0, cr1, {2}
     824:	5f434956 	svcpl	0x00434956
     828:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     82c:	49505300 	ldmdbmi	r0, {r8, r9, ip, lr}^
     830:	52495f34 	subpl	r5, r9, #52, 30	; 0xd0
     834:	49006e51 	stmdbmi	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     838:	5f334332 	svcpl	0x00334332
     83c:	495f5245 	ldmdbmi	pc, {r0, r2, r6, r9, ip, lr}^	; <UNPREDICTABLE>
     840:	006e5152 	rsbeq	r5, lr, r2, asr r1
     844:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
     848:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     84c:	5f353149 	svcpl	0x00353149
     850:	495f3031 	ldmdbmi	pc, {r0, r4, r5, ip, sp}^	; <UNPREDICTABLE>
     854:	006e5152 	rsbeq	r5, lr, r2, asr r1
     858:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
     85c:	6e6f6c20 	cdpvs	12, 6, cr6, cr15, cr0, {1}
     860:	6e752067 	cdpvs	0, 7, cr2, cr5, cr7, {3}
     864:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
     868:	69206465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, sp, lr}
     86c:	5400746e 	strpl	r7, [r0], #-1134	; 0xfffffb92
     870:	5f334d49 	svcpl	0x00334d49
     874:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     878:	45434300 	strbmi	r4, [r3, #-768]	; 0xfffffd00
     87c:	53550052 	cmppl	r5, #82	; 0x52
     880:	31545241 	cmpcc	r4, r1, asr #4
     884:	5152495f 	cmppl	r2, pc, asr r9
     888:	6564006e 	strbvs	r0, [r4, #-110]!	; 0xffffff92
     88c:	614d6f6d 	cmpvs	sp, sp, ror #30
     890:	6c65646e 	cfstrdvs	mvd6, [r5], #-440	; 0xfffffe48
     894:	746f7262 	strbtvc	r7, [pc], #-610	; 89c <_Min_Stack_Size+0x49c>
     898:	70736944 	rsbsvc	r6, r3, r4, asr #18
     89c:	4679616c 	ldrbtmi	r6, [r9], -ip, ror #2
     8a0:	00747361 	rsbseq	r7, r4, r1, ror #6
     8a4:	6c616572 	cfstr64vs	mvdx6, [r1], #-456	; 0xfffffe38
     8a8:	74730071 	ldrbtvc	r0, [r3], #-113	; 0xffffff8f
     8ac:	39383737 	ldmdbcc	r8!, {r0, r1, r2, r4, r5, r8, r9, sl, ip, sp}
     8b0:	6174535f 	cmnvs	r4, pc, asr r3
     8b4:	654d7472 	strbvs	r7, [sp, #-1138]	; 0xfffffb8e
     8b8:	79726f6d 	ldmdbvc	r2!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
     8bc:	74697257 	strbtvc	r7, [r9], #-599	; 0xfffffda9
     8c0:	696c0065 	stmdbvs	ip!, {r0, r2, r5, r6}^
     8c4:	7542656e 	strbvc	r6, [r2, #-1390]	; 0xfffffa92
     8c8:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
     8cc:	6d656400 	cfstrdvs	mvd6, [r5, #-0]
     8d0:	6e614d6f 	cdpvs	13, 6, cr4, cr1, cr15, {3}
     8d4:	626c6564 	rsbvs	r6, ip, #100, 10	; 0x19000000
     8d8:	44746f72 	ldrbtmi	r6, [r4], #-3954	; 0xfffff08e
     8dc:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
     8e0:	41007961 	tstmi	r0, r1, ror #18
     8e4:	495f4344 	ldmdbmi	pc, {r2, r6, r8, r9, lr}^	; <UNPREDICTABLE>
     8e8:	006e5152 	rsbeq	r5, lr, r2, asr r1
     8ec:	52454349 	subpl	r4, r5, #603979777	; 0x24000001
     8f0:	434d5300 	movtmi	r5, #54016	; 0xd300
     8f4:	48410052 	stmdami	r1, {r1, r4, r6}^
     8f8:	504c3342 	subpl	r3, ip, r2, asr #6
     8fc:	00524e45 	subseq	r4, r2, r5, asr #28
     900:	54737953 	ldrbtpl	r7, [r3], #-2387	; 0xfffff6ad
     904:	5f6b6369 	svcpl	0x006b6369
     908:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
     90c:	50006769 	andpl	r6, r0, r9, ror #14
     910:	495f4456 	ldmdbmi	pc, {r1, r2, r4, r6, sl, lr}^	; <UNPREDICTABLE>
     914:	006e5152 	rsbeq	r5, lr, r2, asr r1
     918:	52534641 	subspl	r4, r3, #68157440	; 0x4100000
     91c:	59544f00 	ldmdbpl	r4, {r8, r9, sl, fp, lr}^
     920:	00524550 	subseq	r4, r2, r0, asr r5
     924:	494c4143 	stmdbmi	ip, {r0, r1, r6, r8, lr}^
     928:	756e0042 	strbvc	r0, [lr, #-66]!	; 0xffffffbe
     92c:	7265626d 	rsbvc	r6, r5, #-805306362	; 0xd0000006
     930:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     934:	495f3049 	ldmdbmi	pc, {r0, r3, r6, ip, sp}^	; <UNPREDICTABLE>
     938:	006e5152 	rsbeq	r5, lr, r2, asr r1
     93c:	5f495053 	svcpl	0x00495053
     940:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     944:	00666544 	rsbeq	r6, r6, r4, asr #10
     948:	52534643 	subspl	r4, r3, #70254592	; 0x4300000
     94c:	43524300 	cmpmi	r2, #0, 6
     950:	44005250 	strmi	r5, [r0], #-592	; 0xfffffdb0
     954:	5f31414d 	svcpl	0x0031414d
     958:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
     95c:	5f346d61 	svcpl	0x00346d61
     960:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     964:	414d4400 	cmpmi	sp, r0, lsl #8
     968:	74535f32 	ldrbvc	r5, [r3], #-3890	; 0xfffff0ce
     96c:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
     970:	52495f36 	subpl	r5, r9, #54, 30	; 0xd8
     974:	41006e51 	tstmi	r0, r1, asr lr
     978:	45314248 	ldrmi	r4, [r1, #-584]!	; 0xfffffdb8
     97c:	4c00524e 	sfmmi	f5, 4, [r0], {78}	; 0x4e
     980:	0044414f 	subeq	r4, r4, pc, asr #2
     984:	75626544 	strbvc	r6, [r2, #-1348]!	; 0xfffffabc
     988:	6e6f4d67 	cdpvs	13, 6, cr4, cr15, cr7, {3}
     98c:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
     990:	5152495f 	cmppl	r2, pc, asr r9
     994:	6572006e 	ldrbvs	r0, [r2, #-110]!	; 0xffffff92
     998:	69466c61 	stmdbvs	r6, {r0, r5, r6, sl, fp, sp, lr}^
     99c:	4d6c616e 	stfmie	f6, [ip, #-440]!	; 0xfffffe48
     9a0:	49007861 	stmdbmi	r0, {r0, r5, r6, fp, ip, sp, lr}
     9a4:	5f334332 	svcpl	0x00334332
     9a8:	495f5645 	ldmdbmi	pc, {r0, r2, r6, r9, sl, ip, lr}^	; <UNPREDICTABLE>
     9ac:	006e5152 	rsbeq	r5, lr, r2, asr r1
     9b0:	32424841 	subcc	r4, r2, #4259840	; 0x410000
     9b4:	52545352 	subspl	r5, r4, #1207959553	; 0x48000001
     9b8:	61657200 	cmnvs	r5, r0, lsl #4
     9bc:	6e694d6c 	cdpvs	13, 6, cr4, cr9, cr12, {3}
     9c0:	464d4d00 	strbmi	r4, [sp], -r0, lsl #26
     9c4:	43520052 	cmpmi	r2, #82	; 0x52
     9c8:	79545f43 	ldmdbvc	r4, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
     9cc:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     9d0:	4d4d0066 	stclmi	0, cr0, [sp, #-408]	; 0xfffffe68
     9d4:	00524146 	subseq	r4, r2, r6, asr #2
     9d8:	726f6873 	rsbvc	r6, pc, #7536640	; 0x730000
     9dc:	6e692074 	mcrvs	0, 3, r2, cr9, cr4, {3}
     9e0:	43520074 	cmpmi	r2, #116	; 0x74
     9e4:	52495f43 	subpl	r5, r9, #268	; 0x10c
     9e8:	70006e51 	andvc	r6, r0, r1, asr lr
     9ec:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
     9f0:	00797469 	rsbseq	r7, r9, r9, ror #8
     9f4:	58736f70 	ldmdapl	r3!, {r4, r5, r6, r8, r9, sl, fp, sp, lr}^
     9f8:	736f7000 	cmnvc	pc, #0
     9fc:	74730059 	ldrbtvc	r0, [r3], #-89	; 0xffffffa7
     a00:	39383737 	ldmdbcc	r8!, {r0, r1, r2, r4, r5, r8, r9, sl, ip, sp}
     a04:	4247525f 	submi	r5, r7, #-268435451	; 0xf0000005
     a08:	6f436f54 	svcvs	0x00436f54
     a0c:	00726f6c 	rsbseq	r6, r2, ip, ror #30
     a10:	52415349 	subpl	r5, r1, #603979777	; 0x24000001
     a14:	414d4400 	cmpmi	sp, r0, lsl #8
     a18:	74535f31 	ldrbvc	r5, [r3], #-3889	; 0xfffff0cf
     a1c:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
     a20:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
     a24:	73006e51 	movwvc	r6, #3665	; 0xe51
     a28:	72576376 	subsvc	r6, r7, #-671088639	; 0xd8000001
     a2c:	4e657469 	cdpmi	4, 6, cr7, cr5, cr9, {3}
     a30:	65626d75 	strbvs	r6, [r2, #-3445]!	; 0xfffff28b
     a34:	6d690072 	stclvs	0, cr0, [r9, #-456]!	; 0xfffffe38
     a38:	696d6761 	stmdbvs	sp!, {r0, r5, r6, r8, r9, sl, sp, lr}^
     a3c:	5342006e 	movtpl	r0, #8302	; 0x206e
     a40:	47005252 	smlsdmi	r0, r2, r2, r5
     a44:	5f4f4950 	svcpl	0x004f4950
     a48:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     a4c:	00666544 	rsbeq	r6, r6, r4, asr #10
     a50:	314d4954 	cmpcc	sp, r4, asr r9
     a54:	5f50555f 	svcpl	0x0050555f
     a58:	314d4954 	cmpcc	sp, r4, asr r9
     a5c:	52495f30 	subpl	r5, r9, #48, 30	; 0xc0
     a60:	5f006e51 	svcpl	0x00006e51
     a64:	746e695f 	strbtvc	r6, [lr], #-2399	; 0xfffff6a1
     a68:	745f3436 	ldrbvc	r3, [pc], #-1078	; a70 <_Min_Stack_Size+0x670>
     a6c:	414c4600 	cmpmi	ip, r0, lsl #12
     a70:	545f4853 	ldrbpl	r4, [pc], #-2131	; a78 <_Min_Stack_Size+0x678>
     a74:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     a78:	53006665 	movwpl	r6, #1637	; 0x665
     a7c:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
     a80:	726f436d 	rsbvc	r4, pc, #-1275068415	; 0xb4000001
     a84:	6f6c4365 	svcvs	0x006c4365
     a88:	70556b63 	subsvc	r6, r5, r3, ror #22
     a8c:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
     a90:	54444200 	strbpl	r4, [r4], #-512	; 0xfffffe00
     a94:	504f0052 	subpl	r0, pc, r2, asr r0	; <UNPREDICTABLE>
     a98:	00524354 	subseq	r4, r2, r4, asr r3
     a9c:	50533249 	subspl	r3, r3, r9, asr #4
     aa0:	4f4d0052 	svcmi	0x004d0052
     aa4:	00524544 	subseq	r4, r2, r4, asr #10
     aa8:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
     aac:	4500745f 	strmi	r7, [r0, #-1119]	; 0xfffffba1
     ab0:	39495458 	stmdbcc	r9, {r3, r4, r6, sl, ip, lr}^
     ab4:	495f355f 	ldmdbmi	pc, {r0, r1, r2, r3, r4, r6, r8, sl, ip, sp}^	; <UNPREDICTABLE>
     ab8:	006e5152 	rsbeq	r5, lr, r2, asr r1
     abc:	726f6873 	rsbvc	r6, pc, #7536640	; 0x730000
     ac0:	6e752074 	mrcvs	0, 3, r2, cr5, cr4, {3}
     ac4:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
     ac8:	69206465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, sp, lr}
     acc:	6400746e 	strvs	r7, [r0], #-1134	; 0xfffffb92
     ad0:	506f6d65 	rsbpl	r6, pc, r5, ror #26
     ad4:	616d7869 	cmnvs	sp, r9, ror #16
     ad8:	76730070 			; <UNDEFINED> instruction: 0x76730070
     adc:	676f4c63 	strbvs	r4, [pc, -r3, ror #24]!
     ae0:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
     ae4:	65736552 	ldrbvs	r6, [r3, #-1362]!	; 0xfffffaae
     ae8:	44530074 	ldrbmi	r0, [r3], #-116	; 0xffffff8c
     aec:	495f4f49 	ldmdbmi	pc, {r0, r3, r6, r8, r9, sl, fp, lr}^	; <UNPREDICTABLE>
     af0:	006e5152 	rsbeq	r5, lr, r2, asr r1
     af4:	43415043 	movtmi	r5, #4163	; 0x1043
     af8:	682f0052 	stmdavs	pc!, {r1, r4, r6}	; <UNPREDICTABLE>
     afc:	2f656d6f 	svccs	0x00656d6f
     b00:	6f6d7369 	svcvs	0x006d7369
     b04:	49006c69 	stmdbmi	r0, {r0, r3, r5, r6, sl, fp, sp, lr}
     b08:	00525053 	subseq	r5, r2, r3, asr r0
     b0c:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     b10:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
     b14:	50006e51 	andpl	r6, r0, r1, asr lr
     b18:	53646e65 	cmnpl	r4, #1616	; 0x650
     b1c:	52495f56 	subpl	r5, r9, #344	; 0x158
     b20:	64006e51 	strvs	r6, [r0], #-3665	; 0xfffff1af
     b24:	4d6f6d65 	stclmi	13, cr6, [pc, #-404]!	; 998 <_Min_Stack_Size+0x598>
     b28:	65646e61 	strbvs	r6, [r4, #-3681]!	; 0xfffff19f
     b2c:	6f72626c 	svcvs	0x0072626c
     b30:	6c614374 	stclvs	3, cr4, [r1], #-464	; 0xfffffe30
     b34:	616c7563 	cmnvs	ip, r3, ror #10
     b38:	61466574 	hvcvs	26196	; 0x6654
     b3c:	44007473 	strmi	r7, [r0], #-1139	; 0xfffffb8d
     b40:	5f31414d 	svcpl	0x0031414d
     b44:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
     b48:	5f376d61 	svcpl	0x00376d61
     b4c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     b50:	695f5f00 	ldmdbvs	pc, {r8, r9, sl, fp, ip, lr}^	; <UNPREDICTABLE>
     b54:	3233746e 	eorscc	r7, r3, #1845493760	; 0x6e000000
     b58:	4900745f 	stmdbmi	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
     b5c:	00524553 	subseq	r4, r2, r3, asr r5
     b60:	6e6f7266 	cdpvs	2, 6, cr7, cr15, cr6, {3}
     b64:	66754274 			; <UNDEFINED> instruction: 0x66754274
     b68:	00726566 	rsbseq	r6, r2, r6, ror #10
     b6c:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
     b70:	73005874 	movwvc	r5, #2164	; 0x874
     b74:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
     b78:	76730059 			; <UNDEFINED> instruction: 0x76730059
     b7c:	69725763 	ldmdbvs	r2!, {r0, r1, r5, r6, r8, r9, sl, ip, lr}^
     b80:	00306574 	eorseq	r6, r0, r4, ror r5
     b84:	6c616572 	cfstr64vs	mvdx6, [r1], #-456	; 0xfffffe38
     b88:	0078616d 	rsbseq	r6, r8, sp, ror #2
     b8c:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
     b90:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     b94:	326d6165 	rsbcc	r6, sp, #1073741849	; 0x40000019
     b98:	5152495f 	cmppl	r2, pc, asr r9
     b9c:	7473006e 	ldrbtvc	r0, [r3], #-110	; 0xffffff92
     ba0:	39383737 	ldmdbcc	r8!, {r0, r1, r2, r4, r5, r8, r9, sl, ip, sp}
     ba4:	6165525f 	cmnvs	r5, pc, asr r2
     ba8:	6d6f4364 	stclvs	3, cr4, [pc, #-400]!	; a20 <_Min_Stack_Size+0x620>
     bac:	646e616d 	strbtvs	r6, [lr], #-365	; 0xfffffe93
     bb0:	37747300 	ldrbcc	r7, [r4, -r0, lsl #6]!
     bb4:	5f393837 	svcpl	0x00393837
     bb8:	64616552 	strbtvs	r6, [r1], #-1362	; 0xfffffaae
     bbc:	00697053 	rsbeq	r7, r9, r3, asr r0
     bc0:	646e4578 	strbtvs	r4, [lr], #-1400	; 0xfffffa88
     bc4:	414d4400 	cmpmi	sp, r0, lsl #8
     bc8:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     bcc:	5f6d6165 	svcpl	0x006d6165
     bd0:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     bd4:	00666544 	rsbeq	r6, r6, r4, asr #10
     bd8:	6e617274 	mcrvs	2, 3, r7, cr1, cr4, {3}
     bdc:	72656673 	rsbvc	r6, r5, #120586240	; 0x7300000
     be0:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
     be4:	6e656c00 	cdpvs	12, 6, cr6, cr5, cr0, {0}
     be8:	00687467 	rsbeq	r7, r8, r7, ror #8
     bec:	37377473 			; <UNDEFINED> instruction: 0x37377473
     bf0:	435f3938 	cmpmi	pc, #56, 18	; 0xe0000
     bf4:	616d6d6f 	cmnvs	sp, pc, ror #26
     bf8:	4400646e 	strmi	r6, [r0], #-1134	; 0xfffffb92
     bfc:	545f414d 	ldrbpl	r4, [pc], #-333	; c04 <_Min_Stack_Size+0x804>
     c00:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     c04:	64006665 	strvs	r6, [r0], #-1637	; 0xfffff99b
     c08:	53617461 	cmnpl	r1, #1627389952	; 0x61000000
     c0c:	00657a69 	rsbeq	r7, r5, r9, ror #20
     c10:	74646977 	strbtvc	r6, [r4], #-2423	; 0xfffff689
     c14:	45790068 	ldrbmi	r0, [r9, #-104]!	; 0xffffff98
     c18:	4800646e 	stmdami	r0, {r1, r2, r3, r5, r6, sl, sp, lr}
     c1c:	52434649 	subpl	r4, r3, #76546048	; 0x4900000
     c20:	74537900 	ldrbvc	r7, [r3], #-2304	; 0xfffff700
     c24:	00747261 	rsbseq	r7, r4, r1, ror #4
     c28:	65747962 	ldrbvs	r7, [r4, #-2402]!	; 0xfffff69e
     c2c:	6f547473 	svcvs	0x00547473
     c30:	74697257 	strbtvc	r7, [r9], #-599	; 0xfffffda9
     c34:	494c0065 	stmdbmi	ip, {r0, r2, r5, r6}^
     c38:	73005253 	movwvc	r5, #595	; 0x253
     c3c:	38373774 	ldmdacc	r7!, {r2, r4, r5, r6, r8, r9, sl, ip, sp}
     c40:	75525f39 	ldrbvc	r5, [r2, #-3897]	; 0xfffff0c7
     c44:	6d6f436e 	stclvs	3, cr4, [pc, #-440]!	; a94 <_Min_Stack_Size+0x694>
     c48:	646e616d 	strbtvs	r6, [lr], #-365	; 0xfffffe93
     c4c:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
     c50:	71655374 	smcvc	21812	; 0x5534
     c54:	636e6575 	cmnvs	lr, #490733568	; 0x1d400000
     c58:	74730065 	ldrbtvc	r0, [r3], #-101	; 0xffffff9b
     c5c:	39383737 	ldmdbcc	r8!, {r0, r1, r2, r4, r5, r8, r9, sl, ip, sp}
     c60:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
     c64:	6572416c 	ldrbvs	r4, [r2, #-364]!	; 0xfffffe94
     c68:	65730061 	ldrbvs	r0, [r3, #-97]!	; 0xffffff9f
     c6c:	6e657571 	mcrvs	5, 3, r7, cr5, cr1, {3}
     c70:	73006563 	movwvc	r6, #1379	; 0x563
     c74:	38373774 	ldmdacc	r7!, {r2, r4, r5, r6, r8, r9, sl, ip, sp}
     c78:	74535f39 	ldrbvc	r5, [r3], #-3897	; 0xfffff0c7
     c7c:	43747261 	cmnmi	r4, #268435462	; 0x10000006
     c80:	616d6d6f 	cmnvs	sp, pc, ror #26
     c84:	6800646e 	stmdavs	r0, {r1, r2, r3, r5, r6, sl, sp, lr}
     c88:	68676965 	stmdavs	r7!, {r0, r2, r5, r6, r8, fp, sp, lr}^
     c8c:	682f0074 	stmdavs	pc!, {r2, r4, r5, r6}	; <UNPREDICTABLE>
     c90:	2f656d6f 	svccs	0x00656d6f
     c94:	6f6d7369 	svcvs	0x006d7369
     c98:	702f6c69 	eorvc	r6, pc, r9, ror #24
     c9c:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
     ca0:	2f737463 	svccs	0x00737463
     ca4:	2f55434d 	svccs	0x0055434d
     ca8:	37377473 			; <UNDEFINED> instruction: 0x37377473
     cac:	732f3938 			; <UNDEFINED> instruction: 0x732f3938
     cb0:	38373774 	ldmdacc	r7!, {r2, r4, r5, r6, r8, r9, sl, ip, sp}
     cb4:	6d635f39 	stclvs	15, cr5, [r3, #-228]!	; 0xffffff1c
     cb8:	5f736973 	svcpl	0x00736973
     cbc:	63616c62 	cmnvs	r1, #25088	; 0x6200
     cc0:	69705f6b 	ldmdbvs	r0!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     cc4:	432f6c6c 			; <UNDEFINED> instruction: 0x432f6c6c
     cc8:	2f65726f 	svccs	0x0065726f
     ccc:	2f637253 	svccs	0x00637253
     cd0:	37377473 			; <UNDEFINED> instruction: 0x37377473
     cd4:	632e3938 			; <UNDEFINED> instruction: 0x632e3938
     cd8:	53494800 	movtpl	r4, #38912	; 0x9800
     cdc:	61720052 	cmnvs	r2, r2, asr r0
     ce0:	00746573 	rsbseq	r6, r4, r3, ror r5
     ce4:	65736163 	ldrbvs	r6, [r3, #-355]!	; 0xfffffe9d
     ce8:	314d0074 	hvccc	53252	; 0xd004
     cec:	73005241 	movwvc	r5, #577	; 0x241
     cf0:	38373774 	ldmdacc	r7!, {r2, r4, r5, r6, r8, r9, sl, ip, sp}
     cf4:	65535f39 	ldrbvs	r5, [r3, #-3897]	; 0xfffff0c7
     cf8:	6e695774 	mcrvs	7, 3, r5, cr9, cr4, {3}
     cfc:	00776f64 	rsbseq	r6, r7, r4, ror #30
     d00:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
     d04:	75716553 	ldrbvc	r6, [r1, #-1363]!	; 0xfffffaad
     d08:	65636e65 	strbvs	r6, [r3, #-3685]!	; 0xfffff19b
     d0c:	304d0032 	subcc	r0, sp, r2, lsr r0
     d10:	64005241 	strvs	r5, [r0], #-577	; 0xfffffdbf
     d14:	00617461 	rsbeq	r7, r1, r1, ror #8
     d18:	37377473 			; <UNDEFINED> instruction: 0x37377473
     d1c:	525f3938 	subspl	r3, pc, #56, 18	; 0xe0000
     d20:	6f436e75 	svcvs	0x00436e75
     d24:	6e616d6d 	cdpvs	13, 6, cr6, cr1, cr13, {3}
     d28:	4c007364 	stcmi	3, cr7, [r0], {100}	; 0x64
     d2c:	52434649 	subpl	r4, r3, #76546048	; 0x4900000
     d30:	54444e00 	strbpl	r4, [r4], #-3584	; 0xfffff200
     d34:	74730052 	ldrbtvc	r0, [r3], #-82	; 0xffffffae
     d38:	39383737 	ldmdbcc	r8!, {r0, r1, r2, r4, r5, r8, r9, sl, ip, sp}
     d3c:	6972575f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, lr}^
     d40:	70536574 	subsvc	r6, r3, r4, ror r5
     d44:	61770069 	cmnvs	r7, r9, rrx
     d48:	734d7469 	movtvc	r7, #54377	; 0xd469
     d4c:	74537800 	ldrbvc	r7, [r3], #-2048	; 0xfffff800
     d50:	00747261 	rsbseq	r7, r4, r1, ror #4
     d54:	6d6d7564 	cfstr64vs	mvdx7, [sp, #-400]!	; 0xfffffe70
     d58:	74730079 	ldrbtvc	r0, [r3], #-121	; 0xffffff87
     d5c:	39383737 	ldmdbcc	r8!, {r0, r1, r2, r4, r5, r8, r9, sl, ip, sp}
     d60:	6174535f 	cmnvs	r4, pc, asr r3
     d64:	61447472 	hvcvs	18242	; 0x4742
     d68:	63006174 	movwvs	r6, #372	; 0x174
     d6c:	616d6d6f 	cmnvs	sp, pc, ror #26
     d70:	7300646e 	movwvc	r6, #1134	; 0x46e
     d74:	38373774 	ldmdacc	r7!, {r2, r4, r5, r6, r8, r9, sl, ip, sp}
     d78:	72575f39 	subsvc	r5, r7, #57, 30	; 0xe4
     d7c:	43657469 	cmnmi	r5, #1761607680	; 0x69000000
     d80:	616d6d6f 	cmnvs	sp, pc, ror #26
     d84:	5300646e 	movwpl	r6, #1134	; 0x46e
     d88:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
     d8c:	696e496d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, fp, lr}^
     d90:	6c700074 	ldclvs	0, cr0, [r0], #-464	; 0xfffffe30
     d94:	756f736c 	strbvc	r7, [pc, #-876]!	; a30 <_Min_Stack_Size+0x630>
     d98:	00656372 	rsbeq	r6, r5, r2, ror r3
     d9c:	6d6c6c70 	stclvs	12, cr6, [ip, #-448]!	; 0xfffffe40
     da0:	6c6c7000 	stclvs	0, cr7, [ip], #-0
     da4:	50410070 	subpl	r0, r1, r0, ror r0
     da8:	65725042 	ldrbvs	r5, [r2, #-66]!	; 0xffffffbe
     dac:	61546373 	cmpvs	r4, r3, ror r3
     db0:	00656c62 	rsbeq	r6, r5, r2, ror #24
     db4:	766c6c70 			; <UNDEFINED> instruction: 0x766c6c70
     db8:	41006f63 	tstmi	r0, r3, ror #30
     dbc:	72504248 	subsvc	r4, r0, #72, 4	; 0x80000004
     dc0:	54637365 	strbtpl	r7, [r3], #-869	; 0xfffffc9b
     dc4:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
     dc8:	6f682f00 	svcvs	0x00682f00
     dcc:	692f656d 	stmdbvs	pc!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
     dd0:	696f6d73 	stmdbvs	pc!, {r0, r1, r4, r5, r6, r8, sl, fp, sp, lr}^	; <UNPREDICTABLE>
     dd4:	72702f6c 	rsbsvc	r2, r0, #108, 30	; 0x1b0
     dd8:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
     ddc:	4d2f7374 	stcmi	3, cr7, [pc, #-464]!	; c14 <_Min_Stack_Size+0x814>
     de0:	732f5543 			; <UNDEFINED> instruction: 0x732f5543
     de4:	38373774 	ldmdacc	r7!, {r2, r4, r5, r6, r8, r9, sl, ip, sp}
     de8:	74732f39 	ldrbtvc	r2, [r3], #-3897	; 0xfffff0c7
     dec:	39383737 	ldmdbcc	r8!, {r0, r1, r2, r4, r5, r8, r9, sl, ip, sp}
     df0:	736d635f 	cmnvc	sp, #2080374785	; 0x7c000001
     df4:	625f7369 	subsvs	r7, pc, #-1543503871	; 0xa4000001
     df8:	6b63616c 	blvs	18d93b0 <_Min_Stack_Size+0x18d8fb0>
     dfc:	6c69705f 	stclvs	0, cr7, [r9], #-380	; 0xfffffe84
     e00:	6f432f6c 	svcvs	0x00432f6c
     e04:	532f6572 			; <UNDEFINED> instruction: 0x532f6572
     e08:	732f6372 			; <UNDEFINED> instruction: 0x732f6372
     e0c:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
     e10:	74735f6d 	ldrbtvc	r5, [r3], #-3949	; 0xfffff093
     e14:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     e18:	2e787834 	mrccs	8, 3, r7, cr8, cr4, {1}
     e1c:	682f0063 	stmdavs	pc!, {r0, r1, r5, r6}	; <UNPREDICTABLE>
     e20:	2f656d6f 	svccs	0x00656d6f
     e24:	6f6d7369 	svcvs	0x006d7369
     e28:	702f6c69 	eorvc	r6, pc, r9, ror #24
     e2c:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
     e30:	2f737463 	svccs	0x00737463
     e34:	2f55434d 	svccs	0x0055434d
     e38:	37377473 			; <UNDEFINED> instruction: 0x37377473
     e3c:	732f3938 			; <UNDEFINED> instruction: 0x732f3938
     e40:	38373774 	ldmdacc	r7!, {r2, r4, r5, r6, r8, r9, sl, ip, sp}
     e44:	6d635f39 	stclvs	15, cr5, [r3, #-228]!	; 0xffffff1c
     e48:	5f736973 	svcpl	0x00736973
     e4c:	63616c62 	cmnvs	r1, #25088	; 0x6200
     e50:	69705f6b 	ldmdbvs	r0!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     e54:	732f6c6c 			; <UNDEFINED> instruction: 0x732f6c6c
     e58:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
     e5c:	735f7075 	cmpvc	pc, #117	; 0x75
     e60:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     e64:	31303466 	teqcc	r0, r6, ror #8
     e68:	732e6378 			; <UNDEFINED> instruction: 0x732e6378
     e6c:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
     e70:	20534120 	subscs	r4, r3, r0, lsr #2
     e74:	37332e32 			; <UNDEFINED> instruction: 0x37332e32
     e78:	61706200 	cmnvs	r0, r0, lsl #4
     e7c:	532e6962 			; <UNDEFINED> instruction: 0x532e6962
     e80:	75622f00 	strbvc	r2, [r2, #-3840]!	; 0xfffff100
     e84:	2f646c69 	svccs	0x00646c69
     e88:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     e8c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     e90:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     e94:	63672d69 	cmnvs	r7, #6720	; 0x1a40
     e98:	72732f63 	rsbsvc	r2, r3, #396	; 0x18c
     e9c:	75622f63 	strbvc	r2, [r2, #-3939]!	; 0xfffff09d
     ea0:	2d646c69 	stclcs	12, cr6, [r4, #-420]!	; 0xfffffe5c
     ea4:	2f636367 	svccs	0x00636367
     ea8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     eac:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     eb0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     eb4:	68742f69 	ldmdavs	r4!, {r0, r3, r5, r6, r8, r9, sl, fp, sp}^
     eb8:	2f626d75 	svccs	0x00626d75
     ebc:	2d653776 	stclcs	7, cr3, [r5, #-472]!	; 0xfffffe28
     ec0:	70662b6d 	rsbvc	r2, r6, sp, ror #22
     ec4:	7261682f 	rsbvc	r6, r1, #3080192	; 0x2f0000
     ec8:	696c2f64 	stmdbvs	ip!, {r2, r5, r6, r8, r9, sl, fp, sp}^
     ecc:	63636762 	cmnvs	r3, #25690112	; 0x1880000
     ed0:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
     ed4:	20534120 	subscs	r4, r3, r0, lsr #2
     ed8:	36332e32 			; <UNDEFINED> instruction: 0x36332e32
     edc:	5f00312e 	svcpl	0x0000312e
     ee0:	7869665f 	stmdavc	r9!, {r0, r1, r2, r3, r4, r6, r9, sl, sp, lr}^
     ee4:	73736e75 	cmnvc	r3, #1872	; 0x750
     ee8:	00696466 	rsbeq	r6, r9, r6, ror #8
     eec:	5f617369 	svcpl	0x00617369
     ef0:	5f746962 	svcpl	0x00746962
     ef4:	64657270 	strbtvs	r7, [r5], #-624	; 0xfffffd90
     ef8:	00736572 	rsbseq	r6, r3, r2, ror r5
     efc:	5f617369 	svcpl	0x00617369
     f00:	5f746962 	svcpl	0x00746962
     f04:	5f706676 	svcpl	0x00706676
     f08:	65736162 	ldrbvs	r6, [r3, #-354]!	; 0xfffffe9e
     f0c:	6d6f6300 	stclvs	3, cr6, [pc, #-0]	; f14 <_Min_Stack_Size+0xb14>
     f10:	78656c70 	stmdavc	r5!, {r4, r5, r6, sl, fp, sp, lr}^
     f14:	6f6c6620 	svcvs	0x006c6620
     f18:	47007461 	strmi	r7, [r0, -r1, ror #8]
     f1c:	4320554e 			; <UNDEFINED> instruction: 0x4320554e
     f20:	31203731 			; <UNDEFINED> instruction: 0x31203731
     f24:	2e322e31 	mrccs	14, 1, r2, cr2, cr1, {1}
     f28:	6d2d2030 	stcvs	0, cr2, [sp, #-192]!	; 0xffffff40
     f2c:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
     f30:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	; 0xfffffe78
     f34:	616f6c66 	cmnvs	pc, r6, ror #24
     f38:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
     f3c:	61683d69 	cmnvs	r8, r9, ror #26
     f40:	2d206472 	cfstrscs	mvf6, [r0, #-456]!	; 0xfffffe38
     f44:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
     f48:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
     f4c:	6537766d 	ldrvs	r7, [r7, #-1645]!	; 0xfffff993
     f50:	662b6d2d 	strtvs	r6, [fp], -sp, lsr #26
     f54:	672d2070 			; <UNDEFINED> instruction: 0x672d2070
     f58:	20672d20 	rsbcs	r2, r7, r0, lsr #26
     f5c:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
     f60:	2d20734f 	stccs	3, cr7, [r0, #-316]!	; 0xfffffec4
     f64:	2d20324f 	sfmcs	f3, 4, [r0, #-316]!	; 0xfffffec4
     f68:	2d20734f 	stccs	3, cr7, [r0, #-316]!	; 0xfffffec4
     f6c:	6e756666 	cdpvs	6, 7, cr6, cr5, cr6, {3}
     f70:	6f697463 	svcvs	0x00697463
     f74:	65732d6e 	ldrbvs	r2, [r3, #-3438]!	; 0xfffff292
     f78:	6f697463 	svcvs	0x00697463
     f7c:	2d20736e 	stccs	3, cr7, [r0, #-440]!	; 0xfffffe48
     f80:	74616466 	strbtvc	r6, [r1], #-1126	; 0xfffffb9a
     f84:	65732d61 	ldrbvs	r2, [r3, #-3425]!	; 0xfffff29f
     f88:	6f697463 	svcvs	0x00697463
     f8c:	2d20736e 	stccs	3, cr7, [r0, #-440]!	; 0xfffffe48
     f90:	69756266 	ldmdbvs	r5!, {r1, r2, r5, r6, r9, sp, lr}^
     f94:	6e69646c 	cdpvs	4, 6, cr6, cr9, cr12, {3}
     f98:	696c2d67 	stmdbvs	ip!, {r0, r1, r2, r5, r6, r8, sl, fp, sp}^
     f9c:	63636762 	cmnvs	r3, #25690112	; 0x1880000
     fa0:	6e662d20 	cdpvs	13, 6, cr2, cr6, cr0, {1}
     fa4:	74732d6f 	ldrbtvc	r2, [r3], #-3439	; 0xfffff291
     fa8:	2d6b6361 	stclcs	3, cr6, [fp, #-388]!	; 0xfffffe7c
     fac:	746f7270 	strbtvc	r7, [pc], #-624	; fb4 <_Min_Stack_Size+0xbb4>
     fb0:	6f746365 	svcvs	0x00746365
     fb4:	662d2072 			; <UNDEFINED> instruction: 0x662d2072
     fb8:	692d6f6e 	pushvs	{r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}
     fbc:	6e696c6e 	cdpvs	12, 6, cr6, cr9, cr14, {3}
     fc0:	662d2065 	strtvs	r2, [sp], -r5, rrx
     fc4:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
     fc8:	696c6962 	stmdbvs	ip!, {r1, r5, r6, r8, fp, sp, lr}^
     fcc:	683d7974 	ldmdavs	sp!, {r2, r4, r5, r6, r8, fp, ip, sp, lr}
     fd0:	65646469 	strbvs	r6, [r4, #-1129]!	; 0xfffffb97
     fd4:	7369006e 	cmnvc	r9, #110	; 0x6e
     fd8:	6f6e5f61 	svcvs	0x006e5f61
     fdc:	00746962 	rsbseq	r6, r4, r2, ror #18
     fe0:	5f617369 	svcpl	0x00617369
     fe4:	5f746962 	svcpl	0x00746962
     fe8:	5f65766d 	svcpl	0x0065766d
     fec:	616f6c66 	cmnvs	pc, r6, ror #24
     ff0:	73690074 	cmnvc	r9, #116	; 0x74
     ff4:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
     ff8:	70665f74 	rsbvc	r5, r6, r4, ror pc
     ffc:	69003631 	stmdbvs	r0, {r0, r4, r5, r9, sl, ip, sp}
    1000:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    1004:	735f7469 	cmpvc	pc, #1761607680	; 0x69000000
    1008:	69006365 	stmdbvs	r0, {r0, r2, r5, r6, r8, r9, sp, lr}
    100c:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    1010:	615f7469 	cmpvs	pc, r9, ror #8
    1014:	00766964 	rsbseq	r6, r6, r4, ror #18
    1018:	5f617369 	svcpl	0x00617369
    101c:	5f746962 	svcpl	0x00746962
    1020:	6d6d7769 	stclvs	7, cr7, [sp, #-420]!	; 0xfffffe5c
    1024:	00327478 	eorseq	r7, r2, r8, ror r4
    1028:	5f617369 	svcpl	0x00617369
    102c:	5f746962 	svcpl	0x00746962
    1030:	72697571 	rsbvc	r7, r9, #473956352	; 0x1c400000
    1034:	6f6e5f6b 	svcvs	0x006e5f6b
    1038:	6c6f765f 	stclvs	6, cr7, [pc], #-380	; ec4 <_Min_Stack_Size+0xac4>
    103c:	6c697461 	cfstrdvs	mvd7, [r9], #-388	; 0xfffffe7c
    1040:	65635f65 	strbvs	r5, [r3, #-3941]!	; 0xfffff09b
    1044:	61736900 	cmnvs	r3, r0, lsl #18
    1048:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    104c:	00706d5f 	rsbseq	r6, r0, pc, asr sp
    1050:	5f617369 	svcpl	0x00617369
    1054:	5f746962 	svcpl	0x00746962
    1058:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
    105c:	69007435 	stmdbvs	r0, {r0, r2, r4, r5, sl, ip, sp, lr}
    1060:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    1064:	615f7469 	cmpvs	pc, r9, ror #8
    1068:	35766d72 	ldrbcc	r6, [r6, #-3442]!	; 0xfffff28e
    106c:	69006574 	stmdbvs	r0, {r2, r4, r5, r6, r8, sl, sp, lr}
    1070:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    1074:	6e5f7469 	cdpvs	4, 5, cr7, cr15, cr9, {3}
    1078:	006e6f65 	rsbeq	r6, lr, r5, ror #30
    107c:	5f617369 	svcpl	0x00617369
    1080:	5f746962 	svcpl	0x00746962
    1084:	36316662 	ldrtcc	r6, [r1], -r2, ror #12
    1088:	69626600 	stmdbvs	r2!, {r9, sl, sp, lr}^
    108c:	6d695f74 	stclvs	15, cr5, [r9, #-464]!	; 0xfffffe30
    1090:	63696c70 	cmnvs	r9, #112, 24	; 0x7000
    1094:	6f697461 	svcvs	0x00697461
    1098:	7369006e 	cmnvc	r9, #110	; 0x6e
    109c:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    10a0:	72635f74 	rsbvc	r5, r3, #116, 30	; 0x1d0
    10a4:	6f747079 	svcvs	0x00747079
    10a8:	61736900 	cmnvs	r3, r0, lsl #18
    10ac:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    10b0:	6964745f 	stmdbvs	r4!, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}^
    10b4:	6f630076 	svcvs	0x00630076
    10b8:	6900736e 	stmdbvs	r0, {r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}
    10bc:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    10c0:	695f7469 	ldmdbvs	pc, {r0, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    10c4:	786d6d77 	stmdavc	sp!, {r0, r1, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    10c8:	73690074 	cmnvc	r9, #116	; 0x74
    10cc:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    10d0:	72615f74 	rsbvc	r5, r1, #116, 30	; 0x1d0
    10d4:	0036766d 	eorseq	r7, r6, sp, ror #12
    10d8:	5f617369 	svcpl	0x00617369
    10dc:	5f746962 	svcpl	0x00746962
    10e0:	0065766d 	rsbeq	r7, r5, sp, ror #12
    10e4:	5f617369 	svcpl	0x00617369
    10e8:	5f746962 	svcpl	0x00746962
    10ec:	63656463 	cmnvs	r5, #1660944384	; 0x63000000
    10f0:	69003070 	stmdbvs	r0, {r4, r5, r6, ip, sp}
    10f4:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    10f8:	635f7469 	cmpvs	pc, #1761607680	; 0x69000000
    10fc:	70636564 	rsbvc	r6, r3, r4, ror #10
    1100:	73690031 	cmnvc	r9, #49	; 0x31
    1104:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    1108:	64635f74 	strbtvs	r5, [r3], #-3956	; 0xfffff08c
    110c:	32706365 	rsbscc	r6, r0, #-1811939327	; 0x94000001
    1110:	61736900 	cmnvs	r3, r0, lsl #18
    1114:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    1118:	6564635f 	strbvs	r6, [r4, #-863]!	; 0xfffffca1
    111c:	00337063 	eorseq	r7, r3, r3, rrx
    1120:	5f617369 	svcpl	0x00617369
    1124:	5f746962 	svcpl	0x00746962
    1128:	63656463 	cmnvs	r5, #1660944384	; 0x63000000
    112c:	69003470 	stmdbvs	r0, {r4, r5, r6, sl, ip, sp}
    1130:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    1134:	665f7469 	ldrbvs	r7, [pc], -r9, ror #8
    1138:	62645f70 	rsbvs	r5, r4, #112, 30	; 0x1c0
    113c:	7369006c 	cmnvc	r9, #108	; 0x6c
    1140:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    1144:	64635f74 	strbtvs	r5, [r3], #-3956	; 0xfffff08c
    1148:	36706365 	ldrbtcc	r6, [r0], -r5, ror #6
    114c:	61736900 	cmnvs	r3, r0, lsl #18
    1150:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    1154:	6564635f 	strbvs	r6, [r4, #-863]!	; 0xfffffca1
    1158:	00377063 	eorseq	r7, r7, r3, rrx
    115c:	5f617369 	svcpl	0x00617369
    1160:	5f746962 	svcpl	0x00746962
    1164:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
    1168:	69006b36 	stmdbvs	r0, {r1, r2, r4, r5, r8, r9, fp, sp, lr}
    116c:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    1170:	615f7469 	cmpvs	pc, r9, ror #8
    1174:	38766d72 	ldmdacc	r6!, {r1, r4, r5, r6, r8, sl, fp, sp, lr}^
    1178:	5f6d315f 	svcpl	0x006d315f
    117c:	6e69616d 	powvsez	f6, f1, #5.0
    1180:	746e6100 	strbtvc	r6, [lr], #-256	; 0xffffff00
    1184:	73690065 	cmnvc	r9, #101	; 0x65
    1188:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    118c:	6d635f74 	stclvs	15, cr5, [r3, #-464]!	; 0xfffffe30
    1190:	69006573 	stmdbvs	r0, {r0, r1, r4, r5, r6, r8, sl, sp, lr}
    1194:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    1198:	665f7469 	ldrbvs	r7, [pc], -r9, ror #8
    119c:	00357670 	eorseq	r7, r5, r0, ror r6
    11a0:	5f617369 	svcpl	0x00617369
    11a4:	5f746962 	svcpl	0x00746962
    11a8:	61637378 	smcvs	14136	; 0x3738
    11ac:	6900656c 	stmdbvs	r0, {r2, r3, r5, r6, r8, sl, sp, lr}
    11b0:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    11b4:	715f7469 	cmpvc	pc, r9, ror #8
    11b8:	6b726975 	blvs	1c9b794 <_Min_Stack_Size+0x1c9b394>
    11bc:	336d635f 	cmncc	sp, #2080374785	; 0x7c000001
    11c0:	72646c5f 	rsbvc	r6, r4, #24320	; 0x5f00
    11c4:	73690064 	cmnvc	r9, #100	; 0x64
    11c8:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    11cc:	38695f74 	stmdacc	r9!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    11d0:	69006d6d 	stmdbvs	r0, {r0, r2, r3, r5, r6, r8, sl, fp, sp, lr}
    11d4:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    11d8:	665f7469 	ldrbvs	r7, [pc], -r9, ror #8
    11dc:	33645f70 	cmncc	r4, #112, 30	; 0x1c0
    11e0:	44550032 	ldrbmi	r0, [r5], #-50	; 0xffffffce
    11e4:	70797449 	rsbsvc	r7, r9, r9, asr #8
    11e8:	73690065 	cmnvc	r9, #101	; 0x65
    11ec:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    11f0:	72615f74 	rsbvc	r5, r1, #116, 30	; 0x1d0
    11f4:	6537766d 	ldrvs	r7, [r7, #-1645]!	; 0xfffff993
    11f8:	7369006d 	cmnvc	r9, #109	; 0x6d
    11fc:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    1200:	706c5f74 	rsbvc	r5, ip, r4, ror pc
    1204:	61006561 	tstvs	r0, r1, ror #10
    1208:	695f6c6c 	ldmdbvs	pc, {r2, r3, r5, r6, sl, fp, sp, lr}^	; <UNPREDICTABLE>
    120c:	696c706d 	stmdbvs	ip!, {r0, r2, r3, r5, r6, ip, sp, lr}^
    1210:	665f6465 	ldrbvs	r6, [pc], -r5, ror #8
    1214:	73746962 	cmnvc	r4, #1605632	; 0x188000
    1218:	74465300 	strbvc	r5, [r6], #-768	; 0xfffffd00
    121c:	00657079 	rsbeq	r7, r5, r9, ror r0
    1220:	5f617369 	svcpl	0x00617369
    1224:	5f746962 	svcpl	0x00746962
    1228:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
    122c:	00315f38 	eorseq	r5, r1, r8, lsr pc
    1230:	5f617369 	svcpl	0x00617369
    1234:	5f746962 	svcpl	0x00746962
    1238:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
    123c:	00325f38 	eorseq	r5, r2, r8, lsr pc
    1240:	5f617369 	svcpl	0x00617369
    1244:	5f746962 	svcpl	0x00746962
    1248:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
    124c:	00335f38 	eorseq	r5, r3, r8, lsr pc
    1250:	5f617369 	svcpl	0x00617369
    1254:	5f746962 	svcpl	0x00746962
    1258:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
    125c:	00345f38 	eorseq	r5, r4, r8, lsr pc
    1260:	5f617369 	svcpl	0x00617369
    1264:	5f746962 	svcpl	0x00746962
    1268:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
    126c:	00355f38 	eorseq	r5, r5, r8, lsr pc
    1270:	5f617369 	svcpl	0x00617369
    1274:	5f746962 	svcpl	0x00746962
    1278:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
    127c:	00365f38 	eorseq	r5, r6, r8, lsr pc
    1280:	5f617369 	svcpl	0x00617369
    1284:	5f746962 	svcpl	0x00746962
    1288:	69006273 	stmdbvs	r0, {r0, r1, r4, r5, r6, r9, sp, lr}
    128c:	6e5f6173 	mrcvs	1, 2, r6, cr15, cr3, {3}
    1290:	625f6d75 	subsvs	r6, pc, #7488	; 0x1d40
    1294:	00737469 	rsbseq	r7, r3, r9, ror #8
    1298:	5f617369 	svcpl	0x00617369
    129c:	5f746962 	svcpl	0x00746962
    12a0:	6c616d73 	stclvs	13, cr6, [r1], #-460	; 0xfffffe34
    12a4:	6c756d6c 	ldclvs	13, cr6, [r5], #-432	; 0xfffffe50
    12a8:	6d6f6300 	stclvs	3, cr6, [pc, #-0]	; 12b0 <_Min_Stack_Size+0xeb0>
    12ac:	78656c70 	stmdavc	r5!, {r4, r5, r6, sl, fp, sp, lr}^
    12b0:	756f6420 	strbvc	r6, [pc, #-1056]!	; e98 <_Min_Stack_Size+0xa98>
    12b4:	00656c62 	rsbeq	r6, r5, r2, ror #24
    12b8:	5f617369 	svcpl	0x00617369
    12bc:	5f746962 	svcpl	0x00746962
    12c0:	63656463 	cmnvs	r5, #1660944384	; 0x63000000
    12c4:	69003570 	stmdbvs	r0, {r4, r5, r6, r8, sl, ip, sp}
    12c8:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    12cc:	765f7469 	ldrbvc	r7, [pc], -r9, ror #8
    12d0:	32767066 	rsbscc	r7, r6, #102	; 0x66
    12d4:	61736900 	cmnvs	r3, r0, lsl #18
    12d8:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    12dc:	7066765f 	rsbvc	r7, r6, pc, asr r6
    12e0:	69003376 	stmdbvs	r0, {r1, r2, r4, r5, r6, r8, r9, ip, sp}
    12e4:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    12e8:	765f7469 	ldrbvc	r7, [pc], -r9, ror #8
    12ec:	34767066 	ldrbtcc	r7, [r6], #-102	; 0xffffff9a
    12f0:	61736900 	cmnvs	r3, r0, lsl #18
    12f4:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    12f8:	7568745f 	strbvc	r7, [r8, #-1119]!	; 0xfffffba1
    12fc:	6900626d 	stmdbvs	r0, {r0, r2, r3, r5, r6, r9, sp, lr}
    1300:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    1304:	665f7469 	ldrbvs	r7, [pc], -r9, ror #8
    1308:	63363170 	teqvs	r6, #112, 2
    130c:	00766e6f 	rsbseq	r6, r6, pc, ror #28
    1310:	5f617369 	svcpl	0x00617369
    1314:	74616566 	strbtvc	r6, [r1], #-1382	; 0xfffffa9a
    1318:	00657275 	rsbeq	r7, r5, r5, ror r2
    131c:	5f617369 	svcpl	0x00617369
    1320:	5f746962 	svcpl	0x00746962
    1324:	6d746f6e 	ldclvs	15, cr6, [r4, #-440]!	; 0xfffffe48
    1328:	61736900 	cmnvs	r3, r0, lsl #18
    132c:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    1330:	6975715f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r8, ip, sp, lr}^
    1334:	615f6b72 	cmpvs	pc, r2, ror fp	; <UNPREDICTABLE>
    1338:	36766d72 			; <UNDEFINED> instruction: 0x36766d72
    133c:	69007a6b 	stmdbvs	r0, {r0, r1, r3, r5, r6, r9, fp, ip, sp, lr}
    1340:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    1344:	635f7469 	cmpvs	pc, #1761607680	; 0x69000000
    1348:	32336372 	eorscc	r6, r3, #-939524095	; 0xc8000001
    134c:	61736900 	cmnvs	r3, r0, lsl #18
    1350:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    1354:	6975715f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r8, ip, sp, lr}^
    1358:	6e5f6b72 	vmovvs.s8	r6, d15[3]
    135c:	73615f6f 	cmnvc	r1, #444	; 0x1bc
    1360:	7570636d 	ldrbvc	r6, [r0, #-877]!	; 0xfffffc93
    1364:	61736900 	cmnvs	r3, r0, lsl #18
    1368:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    136c:	6d72615f 	ldfvse	f6, [r2, #-380]!	; 0xfffffe84
    1370:	69003476 	stmdbvs	r0, {r1, r2, r4, r5, r6, sl, ip, sp}
    1374:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    1378:	745f7469 	ldrbvc	r7, [pc], #-1129	; 1380 <_Min_Stack_Size+0xf80>
    137c:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
    1380:	73690032 	cmnvc	r9, #50	; 0x32
    1384:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    1388:	65625f74 	strbvs	r5, [r2, #-3956]!	; 0xfffff08c
    138c:	73690038 	cmnvc	r9, #56	; 0x38
    1390:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    1394:	72615f74 	rsbvc	r5, r1, #116, 30	; 0x1d0
    1398:	0037766d 	eorseq	r7, r7, sp, ror #12
    139c:	5f617369 	svcpl	0x00617369
    13a0:	5f746962 	svcpl	0x00746962
    13a4:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
    13a8:	5f5f0038 	svcpl	0x005f0038
    13ac:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
    13b0:	32665f69 	rsbcc	r5, r6, #420	; 0x1a4
    13b4:	007a6c75 	rsbseq	r6, sl, r5, ror ip
    13b8:	5f617369 	svcpl	0x00617369
    13bc:	5f746962 	svcpl	0x00746962
    13c0:	36317066 	ldrtcc	r7, [r1], -r6, rrx
    13c4:	006c6d66 	rsbeq	r6, ip, r6, ror #26
    13c8:	6975622f 	ldmdbvs	r5!, {r0, r1, r2, r3, r5, r9, sp, lr}^
    13cc:	612f646c 			; <UNDEFINED> instruction: 0x612f646c
    13d0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    13d4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    13d8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    13dc:	6363672d 	cmnvs	r3, #11796480	; 0xb40000
    13e0:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    13e4:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
    13e8:	2e31312d 	rsfcssp	f3, f1, #5.0
    13ec:	2f302e32 	svccs	0x00302e32
    13f0:	6762696c 	strbvs	r6, [r2, -ip, ror #18]!
    13f4:	6c2f6363 	stcvs	3, cr6, [pc], #-396	; 1270 <_Min_Stack_Size+0xe70>
    13f8:	63676269 	cmnvs	r7, #-1879048186	; 0x90000006
    13fc:	632e3263 			; <UNDEFINED> instruction: 0x632e3263
    1400:	665f5f00 	ldrbvs	r5, [pc], -r0, lsl #30
    1404:	66737869 	ldrbtvs	r7, [r3], -r9, ror #16
    1408:	69006964 	stmdbvs	r0, {r2, r5, r6, r8, fp, sp, lr}
    140c:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    1410:	645f7469 	ldrbvs	r7, [pc], #-1129	; 1418 <_Min_Stack_Size+0x1018>
    1414:	7270746f 	rsbsvc	r7, r0, #1862270976	; 0x6f000000
    1418:	4400646f 	strmi	r6, [r0], #-1135	; 0xfffffb91
    141c:	70797446 	rsbsvc	r7, r9, r6, asr #8
    1420:	5f5f0065 	svcpl	0x005f0065
    1424:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
    1428:	32645f69 	rsbcc	r5, r4, #420	; 0x1a4
    142c:	007a6975 	rsbseq	r6, sl, r5, ror r9
    1430:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
    1434:	5f696261 	svcpl	0x00696261
    1438:	64326975 	ldrtvs	r6, [r2], #-2421	; 0xfffff68b
    143c:	615f5f00 	cmpvs	pc, r0, lsl #30
    1440:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1444:	756d645f 	strbvc	r6, [sp, #-1119]!	; 0xfffffba1
    1448:	5355006c 	cmppl	r5, #108	; 0x6c
    144c:	70797449 	rsbsvc	r7, r9, r9, asr #8
    1450:	5f5f0065 	svcpl	0x005f0065
    1454:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
    1458:	32665f69 	rsbcc	r5, r6, #420	; 0x1a4
    145c:	5f5f0064 	svcpl	0x005f0064
    1460:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
    1464:	73645f69 	cmnvc	r4, #420	; 0x1a4
    1468:	44006275 	strmi	r6, [r0], #-629	; 0xfffffd8b
    146c:	72747357 	rsbsvc	r7, r4, #1543503873	; 0x5c000001
    1470:	00746375 	rsbseq	r6, r4, r5, ror r3
    1474:	6e755744 	cdpvs	7, 7, cr5, cr5, cr4, {2}
    1478:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    147c:	30645f5f 	rsbcc	r5, r4, pc, asr pc
    1480:	645f5f00 	ldrbvs	r5, [pc], #-3840	; 1488 <_Min_Stack_Size+0x1088>
    1484:	69680031 	stmdbvs	r8!, {r0, r4, r5}^
    1488:	5f006867 	svcpl	0x00006867
    148c:	0030745f 	eorseq	r7, r0, pc, asr r4
    1490:	30715f5f 	rsbscc	r5, r1, pc, asr pc
    1494:	715f5f00 	cmpvc	pc, r0, lsl #30
    1498:	5f5f0031 	svcpl	0x005f0031
    149c:	76696475 			; <UNDEFINED> instruction: 0x76696475
    14a0:	64646f6d 	strbtvs	r6, [r4], #-3949	; 0xfffff093
    14a4:	47003469 	strmi	r3, [r0, -r9, ror #8]
    14a8:	4320554e 			; <UNDEFINED> instruction: 0x4320554e
    14ac:	31203731 			; <UNDEFINED> instruction: 0x31203731
    14b0:	2e322e31 	mrccs	14, 1, r2, cr2, cr1, {1}
    14b4:	6d2d2030 	stcvs	0, cr2, [sp, #-192]!	; 0xffffff40
    14b8:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
    14bc:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	; 0xfffffe78
    14c0:	616f6c66 	cmnvs	pc, r6, ror #24
    14c4:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
    14c8:	61683d69 	cmnvs	r8, r9, ror #26
    14cc:	2d206472 	cfstrscs	mvf6, [r0, #-456]!	; 0xfffffe38
    14d0:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
    14d4:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
    14d8:	6537766d 	ldrvs	r7, [r7, #-1645]!	; 0xfffff993
    14dc:	662b6d2d 	strtvs	r6, [fp], -sp, lsr #26
    14e0:	672d2070 			; <UNDEFINED> instruction: 0x672d2070
    14e4:	20672d20 	rsbcs	r2, r7, r0, lsr #26
    14e8:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
    14ec:	2d20734f 	stccs	3, cr7, [r0, #-316]!	; 0xfffffec4
    14f0:	2d20324f 	sfmcs	f3, 4, [r0, #-316]!	; 0xfffffec4
    14f4:	2d20734f 	stccs	3, cr7, [r0, #-316]!	; 0xfffffec4
    14f8:	6e756666 	cdpvs	6, 7, cr6, cr5, cr6, {3}
    14fc:	6f697463 	svcvs	0x00697463
    1500:	65732d6e 	ldrbvs	r2, [r3, #-3438]!	; 0xfffff292
    1504:	6f697463 	svcvs	0x00697463
    1508:	2d20736e 	stccs	3, cr7, [r0, #-440]!	; 0xfffffe48
    150c:	74616466 	strbtvc	r6, [r1], #-1126	; 0xfffffb9a
    1510:	65732d61 	ldrbvs	r2, [r3, #-3425]!	; 0xfffff29f
    1514:	6f697463 	svcvs	0x00697463
    1518:	2d20736e 	stccs	3, cr7, [r0, #-440]!	; 0xfffffe48
    151c:	69756266 	ldmdbvs	r5!, {r1, r2, r5, r6, r9, sp, lr}^
    1520:	6e69646c 	cdpvs	4, 6, cr6, cr9, cr12, {3}
    1524:	696c2d67 	stmdbvs	ip!, {r0, r1, r2, r5, r6, r8, sl, fp, sp}^
    1528:	63636762 	cmnvs	r3, #25690112	; 0x1880000
    152c:	6e662d20 	cdpvs	13, 6, cr2, cr6, cr0, {1}
    1530:	74732d6f 	ldrbtvc	r2, [r3], #-3439	; 0xfffff291
    1534:	2d6b6361 	stclcs	3, cr6, [fp, #-388]!	; 0xfffffe7c
    1538:	746f7270 	strbtvc	r7, [pc], #-624	; 1540 <_Min_Stack_Size+0x1140>
    153c:	6f746365 	svcvs	0x00746365
    1540:	662d2072 			; <UNDEFINED> instruction: 0x662d2072
    1544:	692d6f6e 	pushvs	{r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    1548:	6e696c6e 	cdpvs	12, 6, cr6, cr9, cr14, {3}
    154c:	662d2065 	strtvs	r2, [sp], -r5, rrx
    1550:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
    1554:	6f697470 	svcvs	0x00697470
    1558:	2d20736e 	stccs	3, cr7, [r0, #-440]!	; 0xfffffe48
    155c:	73697666 	cmnvc	r9, #106954752	; 0x6600000
    1560:	6c696269 	sfmvs	f6, 2, [r9], #-420	; 0xfffffe5c
    1564:	3d797469 	cfldrdcc	mvd7, [r9, #-420]!	; 0xfffffe5c
    1568:	64646968 	strbtvs	r6, [r4], #-2408	; 0xfffff698
    156c:	5f006e65 	svcpl	0x00006e65
    1570:	0030725f 	eorseq	r7, r0, pc, asr r2
    1574:	31725f5f 	cmncc	r2, pc, asr pc
    1578:	65656900 	strbvs	r6, [r5, #-2304]!	; 0xfffff700
    157c:	34353765 	ldrtcc	r3, [r5], #-1893	; 0xfffff89b
    1580:	2e66642d 	cdpcs	4, 6, cr6, cr6, cr13, {1}
    1584:	696c0053 	stmdbvs	ip!, {r0, r1, r4, r6}^
    1588:	75663162 	strbvc	r3, [r6, #-354]!	; 0xfffffe9e
    158c:	2e73636e 	cdpcs	3, 7, cr6, cr3, cr14, {3}
    1590:	Address 0x0000000000001590 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
void st7789_ReadSpi(uint8_t *data, size_t length) {
   0:	3a434347 	bcc	10d0d24 <_Min_Stack_Size+0x10d0924>
   4:	72412820 	subvc	r2, r1, #32, 16	; 0x200000
   8:	52206863 	eorpl	r6, r0, #6488064	; 0x630000
    ST7789_SPI->CR1 &= ~(SPI_CR1_BIDIOE);
   c:	736f7065 	cmnvc	pc, #101	; 0x65
  10:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
  14:	31202979 			; <UNDEFINED> instruction: 0x31202979
    uint8_t dummy = 0;
  18:	2e322e31 	mrccs	14, 1, r2, cr2, cr1, {1}
        while (!(ST7789_SPI->SR & SPI_SR_TXE));
  1c:	Address 0x000000000000001c is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
void st7789_ReadSpi(uint8_t *data, size_t length) {
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
    ST7789_SPI->CR1 &= ~(SPI_CR1_BIDIOE);
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	00000024 	andeq	r0, r0, r4, lsr #32
  14:	00000000 	andeq	r0, r0, r0
    uint8_t dummy = 0;
  18:	080009a4 	stmdaeq	r0, {r2, r5, r7, r8, fp}
        while (!(ST7789_SPI->SR & SPI_SR_TXE));
  1c:	00000054 	andeq	r0, r0, r4, asr r0
  20:	87040e41 	strhi	r0, [r4, -r1, asr #28]
  24:	100e4101 	andne	r4, lr, r1, lsl #2
  28:	5f070d41 	svcpl	0x00070d41
        ST7789_SPI->DR = dummy;
  2c:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
        while (!(ST7789_SPI->SR & SPI_SR_RXNE));
  30:	0ec7420d 	cdpeq	2, 12, cr4, cr7, cr13, {0}
  34:	00000000 	andeq	r0, r0, r0
  38:	00000020 	andeq	r0, r0, r0, lsr #32
  3c:	00000000 	andeq	r0, r0, r0
        *data++ = ST7789_SPI->DR;
  40:	080009f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, fp}
  44:	00000044 	andeq	r0, r0, r4, asr #32
  48:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    while (length--) {
  4c:	41018e02 	tstmi	r1, r2, lsl #28
  50:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  54:	080e5a07 	stmdaeq	lr, {r0, r1, r2, r9, fp, ip, lr}
    while (ST7789_SPI->SR & SPI_SR_BSY);
  58:	000d0d41 	andeq	r0, sp, r1, asr #26
  5c:	0000001c 	andeq	r0, r0, ip, lsl r0
  60:	00000000 	andeq	r0, r0, r0
    ST7789_SPI->CR1 |= SPI_CR1_BIDIOE;
  64:	08000a3c 	stmdaeq	r0, {r2, r3, r4, r5, r9, fp}
  68:	00000038 	andeq	r0, r0, r8, lsr r0
  6c:	87040e41 	strhi	r0, [r4, -r1, asr #28]
}
  70:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  74:	420d0d52 	andmi	r0, sp, #5248	; 0x1480
  78:	00000ec7 	andeq	r0, r0, r7, asr #29
  7c:	00000020 	andeq	r0, r0, r0, lsr #32
	...
        batch += 1;
  88:	0000005c 	andeq	r0, r0, ip, asr r0
  8c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  90:	41018e02 	tstmi	r1, r2, lsl #28
  94:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  98:	080e6307 	stmdaeq	lr, {r0, r1, r2, r8, r9, sp, lr}
  9c:	000d0d41 	andeq	r0, sp, r1, asr #26
    while (line < ST7789_LCD_HEIGHT) {
  a0:	0000001c 	andeq	r0, r0, ip, lsl r0
	...
    st7789_WaitNanosecs(2000000);
  ac:	00000018 	andeq	r0, r0, r8, lsl r0
  b0:	87040e41 	strhi	r0, [r4, -r1, asr #28]
}
  b4:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  b8:	420d0d45 	andmi	r0, sp, #4416	; 0x1140
  bc:	00000ec7 	andeq	r0, r0, r7, asr #29
  c0:	00000020 	andeq	r0, r0, r0, lsr #32
	...
  cc:	0000004c 	andeq	r0, r0, ip, asr #32
  d0:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  d4:	41018e02 	tstmi	r1, r2, lsl #28
  d8:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
  dc:	080e5e07 	stmdaeq	lr, {r0, r1, r2, r9, sl, fp, ip, lr}
  e0:	000d0d41 	andeq	r0, sp, r1, asr #26
  e4:	0000001c 	andeq	r0, r0, ip, lsl r0
  e8:	00000000 	andeq	r0, r0, r0
  ec:	08000a74 	stmdaeq	r0, {r2, r4, r5, r6, r9, fp}
  f0:	000000b8 	strheq	r0, [r0], -r8
  f4:	87040e41 	strhi	r0, [r4, -r1, asr #28]
  f8:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  fc:	0d0d4f02 	stceq	15, cr4, [sp, #-8]
 100:	000ec742 	andeq	ip, lr, r2, asr #14
 104:	00000020 	andeq	r0, r0, r0, lsr #32
 108:	00000000 	andeq	r0, r0, r0
 10c:	08000b2c 	stmdaeq	r0, {r2, r3, r5, r8, r9, fp}
 110:	0000011a 	andeq	r0, r0, sl, lsl r1
 114:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 118:	41018e02 	tstmi	r1, r2, lsl #28
 11c:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 120:	0e880207 	cdpeq	2, 8, cr0, cr8, cr7, {0}
 124:	0d0d4108 	stfeqs	f4, [sp, #-32]	; 0xffffffe0
 128:	00000024 	andeq	r0, r0, r4, lsr #32
 12c:	00000000 	andeq	r0, r0, r0
 130:	08000c46 	stmdaeq	r0, {r1, r2, r6, sl, fp}
 134:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
 138:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 13c:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 140:	f00e4201 			; <UNDEFINED> instruction: 0xf00e4201
 144:	070d4107 	streq	r4, [sp, -r7, lsl #2]
 148:	0e015303 	cdpeq	3, 0, cr5, cr1, cr3, {0}
 14c:	0d0d410c 	stfeqs	f4, [sp, #-48]	; 0xffffffd0
 150:	00000020 	andeq	r0, r0, r0, lsr #32
 154:	00000000 	andeq	r0, r0, r0
 158:	08000ef8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9, sl, fp}
 15c:	0000016c 	andeq	r0, r0, ip, ror #2
 160:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 164:	41018e02 	tstmi	r1, r2, lsl #28
 168:	0d41280e 	stcleq	8, cr2, [r1, #-56]	; 0xffffffc8
 16c:	0ead0207 	cdpeq	2, 10, cr0, cr13, cr7, {0}
 170:	0d0d4108 	stfeqs	f4, [sp, #-32]	; 0xffffffe0
 174:	00000024 	andeq	r0, r0, r4, lsr #32
 178:	00000000 	andeq	r0, r0, r0
 17c:	08001064 	stmdaeq	r0, {r2, r5, r6, ip}
 180:	00000078 	andeq	r0, r0, r8, ror r0
 184:	87040e41 	strhi	r0, [r4, -r1, asr #28]
 188:	300e4101 	andcc	r4, lr, r1, lsl #2
 18c:	75070d41 	strvc	r0, [r7, #-3393]	; 0xfffff2bf
 190:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
 194:	0ec7420d 	cdpeq	2, 12, cr4, cr7, cr13, {0}
 198:	00000000 	andeq	r0, r0, r0
 19c:	00000024 	andeq	r0, r0, r4, lsr #32
 1a0:	00000000 	andeq	r0, r0, r0
 1a4:	080010dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, ip}
 1a8:	00000234 	andeq	r0, r0, r4, lsr r2
 1ac:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 1b0:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 1b4:	880e4201 	stmdahi	lr, {r0, r9, lr}
 1b8:	070d4109 	streq	r4, [sp, -r9, lsl #2]
 1bc:	0e011103 	adfeqs	f1, f1, f3
 1c0:	0d0d410c 	stfeqs	f4, [sp, #-48]	; 0xffffffd0
 1c4:	00000038 	andeq	r0, r0, r8, lsr r0
 1c8:	00000000 	andeq	r0, r0, r0
 1cc:	08001310 	stmdaeq	r0, {r4, r8, r9, ip}
 1d0:	00000154 	andeq	r0, r0, r4, asr r1
 1d4:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
 1d8:	86078508 	strhi	r8, [r7], -r8, lsl #10
 1dc:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
 1e0:	8a038904 	bhi	e25f8 <_Min_Stack_Size+0xe21f8>
 1e4:	41018b02 	tstmi	r1, r2, lsl #22
 1e8:	0d41780e 	stcleq	8, cr7, [r1, #-56]	; 0xffffffc8
 1ec:	0e9f0207 	cdpeq	2, 9, cr0, cr15, cr7, {0}
 1f0:	0d0d4120 	stfeqs	f4, [sp, #-128]	; 0xffffff80
 1f4:	c9cacb42 	stmibgt	sl, {r1, r6, r8, r9, fp, lr, pc}^
 1f8:	c5c6c7c8 	strbgt	ip, [r6, #1992]	; 0x7c8
 1fc:	00000ec4 	andeq	r0, r0, r4, asr #29
 200:	00000030 	andeq	r0, r0, r0, lsr r0
 204:	00000000 	andeq	r0, r0, r0
 208:	08001464 	stmdaeq	r0, {r2, r5, r6, sl, ip}
 20c:	00000282 	andeq	r0, r0, r2, lsl #5
 210:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
 214:	86088509 	strhi	r8, [r8], -r9, lsl #10
 218:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
 21c:	8a048905 	bhi	122638 <_Min_Stack_Size+0x122238>
 220:	8e028b03 	vmlahi.f64	d8, d2, d3
 224:	b80e4201 	stmdalt	lr, {r0, r9, lr}
 228:	070d4118 	smladeq	sp, r8, r1, r4
 22c:	0e013903 	vmlaeq.f16	s6, s2, s6	; <UNPREDICTABLE>
 230:	0d0d4124 	stfeqs	f4, [sp, #-144]	; 0xffffff70
 234:	00000030 	andeq	r0, r0, r0, lsr r0
 238:	00000000 	andeq	r0, r0, r0
 23c:	080016e8 	stmdaeq	r0, {r3, r5, r6, r7, r9, sl, ip}
 240:	00000238 	andeq	r0, r0, r8, lsr r2
 244:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
 248:	87078508 	strhi	r8, [r7, -r8, lsl #10]
 24c:	89058806 	stmdbhi	r5, {r1, r2, fp, pc}
 250:	8b038a04 	blhi	e2a68 <_Min_Stack_Size+0xe2668>
 254:	41018e02 	tstmi	r1, r2, lsl #28
 258:	0c41580e 	mcrreq	8, 0, r5, r1, cr14
 25c:	03034807 	movweq	r4, #14343	; 0x3807
 260:	41200e01 			; <UNDEFINED> instruction: 0x41200e01
 264:	00000d0d 	andeq	r0, r0, sp, lsl #26
 268:	00000028 	andeq	r0, r0, r8, lsr #32
	...
 274:	000000c4 	andeq	r0, r0, r4, asr #1
 278:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 27c:	42018e02 	andmi	r8, r1, #2, 28
 280:	414b880e 	cmpmi	fp, lr, lsl #16
 284:	414b900e 	cmpmi	fp, lr
 288:	5802070d 	stmdapl	r2, {r0, r2, r3, r8, r9, sl}
 28c:	0d41080e 	stcleq	8, cr0, [r1, #-56]	; 0xffffffc8
 290:	0000000d 	andeq	r0, r0, sp
 294:	00000024 	andeq	r0, r0, r4, lsr #32
 298:	00000000 	andeq	r0, r0, r0
 29c:	08001920 	stmdaeq	r0, {r5, r8, fp, ip}
 2a0:	000000e0 	andeq	r0, r0, r0, ror #1
 2a4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 2a8:	41018e02 	tstmi	r1, r2, lsl #28
 2ac:	4104800e 	tstmi	r4, lr
 2b0:	6802070d 	stmdavs	r2, {r0, r2, r3, r8, r9, sl}
 2b4:	0d41080e 	stcleq	8, cr0, [r1, #-56]	; 0xffffffc8
 2b8:	0000000d 	andeq	r0, r0, sp
 2bc:	00000024 	andeq	r0, r0, r4, lsr #32
 2c0:	00000000 	andeq	r0, r0, r0
 2c4:	08001a00 	stmdaeq	r0, {r9, fp, ip}
 2c8:	00000030 	andeq	r0, r0, r0, lsr r0
 2cc:	87040e41 	strhi	r0, [r4, -r1, asr #28]
 2d0:	180e4101 	stmdane	lr, {r0, r8, lr}
 2d4:	4f070d41 	svcmi	0x00070d41
 2d8:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
 2dc:	0ec7420d 	cdpeq	2, 12, cr4, cr7, cr13, {0}
 2e0:	00000000 	andeq	r0, r0, r0
 2e4:	0000001c 	andeq	r0, r0, ip, lsl r0
 2e8:	00000000 	andeq	r0, r0, r0
 2ec:	08001a30 	stmdaeq	r0, {r4, r5, r9, fp, ip}
 2f0:	0000004c 	andeq	r0, r0, ip, asr #32
 2f4:	87040e41 	strhi	r0, [r4, -r1, asr #28]
 2f8:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 2fc:	420d0d5c 	andmi	r0, sp, #92, 26	; 0x1700
 300:	00000ec7 	andeq	r0, r0, r7, asr #29
 304:	0000001c 	andeq	r0, r0, ip, lsl r0
 308:	00000000 	andeq	r0, r0, r0
 30c:	08001a7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9, fp, ip}
 310:	00000108 	andeq	r0, r0, r8, lsl #2
 314:	87040e41 	strhi	r0, [r4, -r1, asr #28]
 318:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 31c:	0d0d7b02 	vstreq	d7, [sp, #-8]
 320:	000ec742 	andeq	ip, lr, r2, asr #14
 324:	00000018 	andeq	r0, r0, r8, lsl r0
 328:	00000000 	andeq	r0, r0, r0
 32c:	08001b84 	stmdaeq	r0, {r2, r7, r8, r9, fp, ip}
 330:	00000080 	andeq	r0, r0, r0, lsl #1
 334:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 338:	41018e02 	tstmi	r1, r2, lsl #28
 33c:	0000070d 	andeq	r0, r0, sp, lsl #14
 340:	0000001c 	andeq	r0, r0, ip, lsl r0
 344:	00000000 	andeq	r0, r0, r0
 348:	08001c04 	stmdaeq	r0, {r2, sl, fp, ip}
 34c:	0000001c 	andeq	r0, r0, ip, lsl r0
 350:	87040e41 	strhi	r0, [r4, -r1, asr #28]
 354:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 358:	420d0d47 	andmi	r0, sp, #4544	; 0x11c0
 35c:	00000ec7 	andeq	r0, r0, r7, asr #29
 360:	0000000c 	andeq	r0, r0, ip
 364:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 368:	7c020001 	stcvc	0, cr0, [r2], {1}
 36c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 370:	00000024 	andeq	r0, r0, r4, lsr #32
 374:	00000360 	andeq	r0, r0, r0, ror #6
 378:	08001c20 	stmdaeq	r0, {r5, sl, fp, ip}
 37c:	00000038 	andeq	r0, r0, r8, lsr r0
 380:	87040e41 	strhi	r0, [r4, -r1, asr #28]
 384:	180e4101 	stmdane	lr, {r0, r8, lr}
 388:	53070d41 	movwpl	r0, #32065	; 0x7d41
 38c:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
 390:	0ec7420d 	cdpeq	2, 12, cr4, cr7, cr13, {0}
 394:	00000000 	andeq	r0, r0, r0
 398:	00000018 	andeq	r0, r0, r8, lsl r0
 39c:	00000360 	andeq	r0, r0, r0, ror #6
 3a0:	08001c58 	stmdaeq	r0, {r3, r4, r6, sl, fp, ip}
 3a4:	00000038 	andeq	r0, r0, r8, lsr r0
 3a8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 3ac:	41018e02 	tstmi	r1, r2, lsl #28
 3b0:	0000070d 	andeq	r0, r0, sp, lsl #14
 3b4:	0000001c 	andeq	r0, r0, ip, lsl r0
 3b8:	00000360 	andeq	r0, r0, r0, ror #6
 3bc:	08001c90 	stmdaeq	r0, {r4, r7, sl, fp, ip}
 3c0:	00000020 	andeq	r0, r0, r0, lsr #32
 3c4:	87040e41 	strhi	r0, [r4, -r1, asr #28]
 3c8:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 3cc:	420d0d48 	andmi	r0, sp, #72, 26	; 0x1200
 3d0:	00000ec7 	andeq	r0, r0, r7, asr #29
 3d4:	0000001c 	andeq	r0, r0, ip, lsl r0
 3d8:	00000360 	andeq	r0, r0, r0, ror #6
 3dc:	08001cb0 	stmdaeq	r0, {r4, r5, r7, sl, fp, ip}
 3e0:	00000020 	andeq	r0, r0, r0, lsr #32
 3e4:	87040e41 	strhi	r0, [r4, -r1, asr #28]
 3e8:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 3ec:	420d0d48 	andmi	r0, sp, #72, 26	; 0x1200
 3f0:	00000ec7 	andeq	r0, r0, r7, asr #29
 3f4:	00000024 	andeq	r0, r0, r4, lsr #32
 3f8:	00000360 	andeq	r0, r0, r0, ror #6
 3fc:	08001cd0 	stmdaeq	r0, {r4, r6, r7, sl, fp, ip}
 400:	00000030 	andeq	r0, r0, r0, lsr r0
 404:	87040e41 	strhi	r0, [r4, -r1, asr #28]
 408:	100e4101 	andne	r4, lr, r1, lsl #2
 40c:	4e070d41 	cdpmi	13, 0, cr0, cr7, cr1, {2}
 410:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
 414:	0ec7420d 	cdpeq	2, 12, cr4, cr7, cr13, {0}
 418:	00000000 	andeq	r0, r0, r0
 41c:	00000024 	andeq	r0, r0, r4, lsr #32
 420:	00000360 	andeq	r0, r0, r0, ror #6
 424:	00000000 	andeq	r0, r0, r0
 428:	00000080 	andeq	r0, r0, r0, lsl #1
 42c:	87040e41 	strhi	r0, [r4, -r1, asr #28]
 430:	180e4101 	stmdane	lr, {r0, r8, lr}
 434:	77070d41 	strvc	r0, [r7, -r1, asr #26]
 438:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
 43c:	0ec7420d 	cdpeq	2, 12, cr4, cr7, cr13, {0}
 440:	00000000 	andeq	r0, r0, r0
 444:	00000024 	andeq	r0, r0, r4, lsr #32
 448:	00000360 	andeq	r0, r0, r0, ror #6
 44c:	08001d00 	stmdaeq	r0, {r8, sl, fp, ip}
 450:	0000007c 	andeq	r0, r0, ip, ror r0
 454:	87040e41 	strhi	r0, [r4, -r1, asr #28]
 458:	100e4101 	andne	r4, lr, r1, lsl #2
 45c:	6d070d41 	stcvs	13, cr0, [r7, #-260]	; 0xfffffefc
 460:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
 464:	0ec7420d 	cdpeq	2, 12, cr4, cr7, cr13, {0}
 468:	00000000 	andeq	r0, r0, r0
 46c:	0000001c 	andeq	r0, r0, ip, lsl r0
 470:	00000360 	andeq	r0, r0, r0, ror #6
 474:	08001d7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, sl, fp, ip}
 478:	00000020 	andeq	r0, r0, r0, lsr #32
 47c:	87040e41 	strhi	r0, [r4, -r1, asr #28]
 480:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 484:	420d0d48 	andmi	r0, sp, #72, 26	; 0x1200
 488:	00000ec7 	andeq	r0, r0, r7, asr #29
 48c:	00000020 	andeq	r0, r0, r0, lsr #32
 490:	00000360 	andeq	r0, r0, r0, ror #6
 494:	00000000 	andeq	r0, r0, r0
 498:	0000002e 	andeq	r0, r0, lr, lsr #32
 49c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 4a0:	41018e02 	tstmi	r1, r2, lsl #28
 4a4:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 4a8:	080e5207 	stmdaeq	lr, {r0, r1, r2, r9, ip, lr}
 4ac:	000d0d41 	andeq	r0, sp, r1, asr #26
 4b0:	00000020 	andeq	r0, r0, r0, lsr #32
 4b4:	00000360 	andeq	r0, r0, r0, ror #6
 4b8:	00000000 	andeq	r0, r0, r0
 4bc:	0000004a 	andeq	r0, r0, sl, asr #32
 4c0:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 4c4:	41018e02 	tstmi	r1, r2, lsl #28
 4c8:	0d41200e 	stcleq	0, cr2, [r1, #-56]	; 0xffffffc8
 4cc:	080e6007 	stmdaeq	lr, {r0, r1, r2, sp, lr}
 4d0:	000d0d41 	andeq	r0, sp, r1, asr #26
 4d4:	00000020 	andeq	r0, r0, r0, lsr #32
 4d8:	00000360 	andeq	r0, r0, r0, ror #6
 4dc:	08001d9c 	stmdaeq	r0, {r2, r3, r4, r7, r8, sl, fp, ip}
 4e0:	0000006c 	andeq	r0, r0, ip, rrx
 4e4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 4e8:	41018e02 	tstmi	r1, r2, lsl #28
 4ec:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 4f0:	080e7107 	stmdaeq	lr, {r0, r1, r2, r8, ip, sp, lr}
 4f4:	000d0d41 	andeq	r0, sp, r1, asr #26
 4f8:	00000020 	andeq	r0, r0, r0, lsr #32
 4fc:	00000360 	andeq	r0, r0, r0, ror #6
 500:	08001e08 	stmdaeq	r0, {r3, r9, sl, fp, ip}
 504:	00000028 	andeq	r0, r0, r8, lsr #32
 508:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 50c:	41018e02 	tstmi	r1, r2, lsl #28
 510:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 514:	080e4f07 	stmdaeq	lr, {r0, r1, r2, r8, r9, sl, fp, lr}
 518:	000d0d41 	andeq	r0, sp, r1, asr #26
 51c:	00000028 	andeq	r0, r0, r8, lsr #32
 520:	00000360 	andeq	r0, r0, r0, ror #6
 524:	08001e30 	stmdaeq	r0, {r4, r5, r9, sl, fp, ip}
 528:	00000214 	andeq	r0, r0, r4, lsl r2
 52c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 530:	87038504 	strhi	r8, [r3, -r4, lsl #10]
 534:	41018e02 	tstmi	r1, r2, lsl #28
 538:	4101c80e 	tstmi	r1, lr, lsl #16
 53c:	ed02070d 	stc	7, cr0, [r2, #-52]	; 0xffffffcc
 540:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 544:	0000000d 	andeq	r0, r0, sp
 548:	00000018 	andeq	r0, r0, r8, lsl r0
 54c:	00000360 	andeq	r0, r0, r0, ror #6
 550:	08002044 	stmdaeq	r0, {r2, r6, sp}
 554:	00000016 	andeq	r0, r0, r6, lsl r0
 558:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 55c:	41018e02 	tstmi	r1, r2, lsl #28
 560:	0000070d 	andeq	r0, r0, sp, lsl #14
 564:	00000024 	andeq	r0, r0, r4, lsr #32
 568:	00000360 	andeq	r0, r0, r0, ror #6
 56c:	0800205a 	stmdaeq	r0, {r1, r3, r4, r6, sp}
 570:	000000d2 	ldrdeq	r0, [r0], -r2
 574:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 578:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 57c:	400e4101 	andmi	r4, lr, r1, lsl #2
 580:	02070d41 	andeq	r0, r7, #4160	; 0x1040
 584:	410c0e64 	tstmi	ip, r4, ror #28
 588:	00000d0d 	andeq	r0, r0, sp, lsl #26
 58c:	00000024 	andeq	r0, r0, r4, lsr #32
 590:	00000360 	andeq	r0, r0, r0, ror #6
 594:	0800212c 	stmdaeq	r0, {r2, r3, r5, r8, sp}
 598:	000000cc 	andeq	r0, r0, ip, asr #1
 59c:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 5a0:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 5a4:	a80e4101 	stmdage	lr, {r0, r8, lr}
 5a8:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 5ac:	0c0e6102 	stfeqs	f6, [lr], {2}
 5b0:	000d0d41 	andeq	r0, sp, r1, asr #26
 5b4:	00000020 	andeq	r0, r0, r0, lsr #32
 5b8:	00000360 	andeq	r0, r0, r0, ror #6
 5bc:	080021f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, sp}
 5c0:	00000022 	andeq	r0, r0, r2, lsr #32
 5c4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 5c8:	41018e02 	tstmi	r1, r2, lsl #28
 5cc:	0c41180e 	mcrreq	8, 0, r1, r1, cr14
 5d0:	0e4c1007 	cdpeq	0, 4, cr1, cr12, cr7, {0}
 5d4:	0d0d4108 	stfeqs	f4, [sp, #-32]	; 0xffffffe0
 5d8:	00000024 	andeq	r0, r0, r4, lsr #32
 5dc:	00000360 	andeq	r0, r0, r0, ror #6
 5e0:	0800221a 	stmdaeq	r0, {r1, r3, r4, r9, sp}
 5e4:	00000044 	andeq	r0, r0, r4, asr #32
 5e8:	87040e41 	strhi	r0, [r4, -r1, asr #28]
 5ec:	100e4101 	andne	r4, lr, r1, lsl #2
 5f0:	5b070d41 	blpl	1c3afc <_Min_Stack_Size+0x1c36fc>
 5f4:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
 5f8:	0ec7420d 	cdpeq	2, 12, cr4, cr7, cr13, {0}
 5fc:	00000000 	andeq	r0, r0, r0
 600:	0000000c 	andeq	r0, r0, ip
 604:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 608:	7c020001 	stcvc	0, cr0, [r2], {1}
 60c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 610:	0000001c 	andeq	r0, r0, ip, lsl r0
 614:	00000600 	andeq	r0, r0, r0, lsl #12
 618:	08002260 	stmdaeq	r0, {r5, r6, r9, sp}
 61c:	00000024 	andeq	r0, r0, r4, lsr #32
 620:	87040e41 	strhi	r0, [r4, -r1, asr #28]
 624:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 628:	420d0d4a 	andmi	r0, sp, #4736	; 0x1280
 62c:	00000ec7 	andeq	r0, r0, r7, asr #29
 630:	00000024 	andeq	r0, r0, r4, lsr #32
 634:	00000600 	andeq	r0, r0, r0, lsl #12
 638:	08002284 	stmdaeq	r0, {r2, r7, r9, sp}
 63c:	00000100 	andeq	r0, r0, r0, lsl #2
 640:	87040e41 	strhi	r0, [r4, -r1, asr #28]
 644:	200e4101 	andcs	r4, lr, r1, lsl #2
 648:	02070d41 	andeq	r0, r7, #4160	; 0x1040
 64c:	41040e6f 	tstmi	r4, pc, ror #28
 650:	c7420d0d 	strbgt	r0, [r2, -sp, lsl #26]
 654:	0000000e 	andeq	r0, r0, lr
 658:	0000000c 	andeq	r0, r0, ip
 65c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 660:	7c020001 	stcvc	0, cr0, [r2], {1}
 664:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 668:	00000030 	andeq	r0, r0, r0, lsr r0
 66c:	00000658 	andeq	r0, r0, r8, asr r6
 670:	08000194 	stmdaeq	r0, {r2, r4, r7, r8}
 674:	000000a0 	andeq	r0, r0, r0, lsr #1
 678:	8e100e55 	mrchi	14, 0, r0, cr0, cr5, {2}
 67c:	450a4603 	strmi	r4, [sl, #-1539]	; 0xfffff9fd
 680:	41100ece 	tstmi	r0, lr, asr #29
 684:	450a470b 	strmi	r4, [sl, #-1803]	; 0xfffff8f5
 688:	47100ece 	ldrmi	r0, [r0, -lr, asr #29]
 68c:	450a450b 	strmi	r4, [sl, #-1291]	; 0xfffffaf5
 690:	44100ece 	ldrmi	r0, [r0], #-3790	; 0xfffff132
 694:	0ece4a0b 	vdiveq.f32	s9, s28, s22
 698:	00000010 	andeq	r0, r0, r0, lsl r0
 69c:	0000000c 	andeq	r0, r0, ip
 6a0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 6a4:	7c020001 	stcvc	0, cr0, [r2], {1}
 6a8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 6ac:	0000001c 	andeq	r0, r0, ip, lsl r0
 6b0:	0000069c 	muleq	r0, ip, r6
 6b4:	080023d6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r8, r9, sp}
 6b8:	0000002c 	andeq	r0, r0, ip, lsr #32
 6bc:	83080e47 	movwhi	r0, #36423	; 0x8e47
 6c0:	43018e02 	movwmi	r8, #7682	; 0x1e02
 6c4:	0ec3ce0a 	cdpeq	14, 12, cr12, cr3, cr10, {0}
 6c8:	000b4200 	andeq	r4, fp, r0, lsl #4
 6cc:	0000000c 	andeq	r0, r0, ip
 6d0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 6d4:	7c020001 	stcvc	0, cr0, [r2], {1}
 6d8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 6dc:	00000018 	andeq	r0, r0, r8, lsl r0
 6e0:	000006cc 	andeq	r0, r0, ip, asr #13
 6e4:	08002404 	stmdaeq	r0, {r2, sl, sp}
 6e8:	00000040 	andeq	r0, r0, r0, asr #32
 6ec:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 6f0:	87038604 	strhi	r8, [r3, -r4, lsl #12]
 6f4:	00018e02 	andeq	r8, r1, r2, lsl #28
 6f8:	0000000c 	andeq	r0, r0, ip
 6fc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 700:	7c020001 	stcvc	0, cr0, [r2], {1}
 704:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 708:	00000020 	andeq	r0, r0, r0, lsr #32
 70c:	000006f8 	strdeq	r0, [r0], -r8
 710:	08002444 	stmdaeq	r0, {r2, r6, sl, sp}
 714:	0000027a 	andeq	r0, r0, sl, ror r2
 718:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
 71c:	86078508 	strhi	r8, [r7], -r8, lsl #10
 720:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
 724:	8a038904 	bhi	e2b3c <_Min_Stack_Size+0xe273c>
 728:	00018e02 	andeq	r8, r1, r2, lsl #28
 72c:	0000000c 	andeq	r0, r0, ip
 730:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 734:	7c020001 	stcvc	0, cr0, [r2], {1}
 738:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 73c:	0000001c 	andeq	r0, r0, ip, lsl r0
 740:	0000072c 	andeq	r0, r0, ip, lsr #14
 744:	08000234 	stmdaeq	r0, {r2, r4, r5, r9}
 748:	00000254 	andeq	r0, r0, r4, asr r2
 74c:	100e410a 	andne	r4, lr, sl, lsl #2
 750:	03850484 	orreq	r0, r5, #132, 8	; 0x84000000
 754:	018e0286 	orreq	r0, lr, r6, lsl #5
 758:	0b012903 	bleq	4ab6c <_Min_Stack_Size+0x4a76c>
 75c:	0000000c 	andeq	r0, r0, ip
 760:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 764:	7c020001 	stcvc	0, cr0, [r2], {1}
 768:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 76c:	0000001c 	andeq	r0, r0, ip, lsl r0
 770:	0000075c 	andeq	r0, r0, ip, asr r7
 774:	0800048c 	stmdaeq	r0, {r2, r3, r7, sl}
 778:	00000282 	andeq	r0, r0, r2, lsl #5
 77c:	0c0e470a 	stceq	7, cr4, [lr], {10}
 780:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
 784:	3a03018e 	bcc	c0dc4 <_Min_Stack_Size+0xc09c4>
 788:	00000b01 	andeq	r0, r0, r1, lsl #22
 78c:	00000018 	andeq	r0, r0, r8, lsl r0
 790:	0000075c 	andeq	r0, r0, ip, asr r7
 794:	08000710 	stmdaeq	r0, {r4, r8, r9, sl}
 798:	0000001e 	andeq	r0, r0, lr, lsl r0
 79c:	0c0e460a 	stceq	6, cr4, [lr], {10}
 7a0:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
 7a4:	0b49018e 	bleq	1240de4 <_Min_Stack_Size+0x12409e4>
 7a8:	00000018 	andeq	r0, r0, r8, lsl r0
 7ac:	0000075c 	andeq	r0, r0, ip, asr r7
 7b0:	08000730 	stmdaeq	r0, {r4, r5, r8, r9, sl}
 7b4:	00000022 	andeq	r0, r0, r2, lsr #32
 7b8:	0c0e460a 	stceq	6, cr4, [lr], {10}
 7bc:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
 7c0:	0b4b018e 	bleq	12c0e00 <_Min_Stack_Size+0x12c0a00>
 7c4:	00000018 	andeq	r0, r0, r8, lsl r0
 7c8:	0000075c 	andeq	r0, r0, ip, asr r7
 7cc:	08000754 	stmdaeq	r0, {r2, r4, r6, r8, r9, sl}
 7d0:	00000042 	andeq	r0, r0, r2, asr #32
 7d4:	0c0e5a0a 			; <UNDEFINED> instruction: 0x0c0e5a0a
 7d8:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
 7dc:	0b47018e 	bleq	11c0e1c <_Min_Stack_Size+0x11c0a1c>
 7e0:	00000024 	andeq	r0, r0, r4, lsr #32
 7e4:	0000075c 	andeq	r0, r0, ip, asr r7
 7e8:	08000798 	stmdaeq	r0, {r3, r4, r7, r8, r9, sl}
 7ec:	0000006a 	andeq	r0, r0, sl, rrx
 7f0:	0e450a0a 	vmlaeq.f32	s1, s10, s20
 7f4:	8503840c 	strhi	r8, [r3, #-1036]	; 0xfffffbf4
 7f8:	43018e02 	movwmi	r8, #7682	; 0x1e02
 7fc:	0c0e450b 	cfstr32eq	mvfx4, [lr], {11}
 800:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
 804:	0b68018e 	bleq	1a00e44 <_Min_Stack_Size+0x1a00a44>
 808:	0000000c 	andeq	r0, r0, ip
 80c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 810:	7c020001 	stcvc	0, cr0, [r2], {1}
 814:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 818:	00000010 	andeq	r0, r0, r0, lsl r0
 81c:	00000808 	andeq	r0, r0, r8, lsl #16
 820:	08000804 	stmdaeq	r0, {r2, fp}
 824:	00000040 	andeq	r0, r0, r0, asr #32
 828:	000b600a 	andeq	r6, fp, sl

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
void st7789_ReadSpi(uint8_t *data, size_t length) {
   0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   4:	00000000 	andeq	r0, r0, r0
   8:	08002384 	stmdaeq	r0, {r2, r7, r8, r9, sp}
    ST7789_SPI->CR1 &= ~(SPI_CR1_BIDIOE);
   c:	080023d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, r9, sp}
  10:	080023d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, r9, sp}
  14:	080023d6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r8, r9, sp}
	...

Disassembly of section .debug_line_str:

00000000 <.debug_line_str>:
void st7789_ReadSpi(uint8_t *data, size_t length) {
   0:	6975622f 	ldmdbvs	r5!, {r0, r1, r2, r3, r5, r9, sp, lr}^
   4:	612f646c 			; <UNDEFINED> instruction: 0x612f646c
   8:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    ST7789_SPI->CR1 &= ~(SPI_CR1_BIDIOE);
   c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
  10:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
  14:	6363672d 	cmnvs	r3, #11796480	; 0xb40000
    uint8_t dummy = 0;
  18:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
        while (!(ST7789_SPI->SR & SPI_SR_TXE));
  1c:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
  20:	2e31312d 	rsfcssp	f3, f1, #5.0
  24:	2f302e32 	svccs	0x00302e32
  28:	6762696c 	strbvs	r6, [r2, -ip, ror #18]!
        ST7789_SPI->DR = dummy;
  2c:	632f6363 			; <UNDEFINED> instruction: 0x632f6363
        while (!(ST7789_SPI->SR & SPI_SR_RXNE));
  30:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
  34:	72612f67 	rsbvc	r2, r1, #412	; 0x19c
  38:	7062006d 	rsbvc	r0, r2, sp, rrx
  3c:	2e696261 	cdpcs	2, 6, cr6, cr9, cr1, {3}
        *data++ = ST7789_SPI->DR;
  40:	65690053 	strbvs	r0, [r9, #-83]!	; 0xffffffad
  44:	35376565 	ldrcc	r6, [r7, #-1381]!	; 0xfffffa9b
  48:	66642d34 			; <UNDEFINED> instruction: 0x66642d34
    while (length--) {
  4c:	6c00532e 	stcvs	3, cr5, [r0], {46}	; 0x2e
  50:	66316269 	ldrtvs	r6, [r1], -r9, ror #4
  54:	73636e75 	cmnvc	r3, #1872	; 0x750
    while (ST7789_SPI->SR & SPI_SR_BSY);
  58:	Address 0x0000000000000058 is out of bounds.


Disassembly of section .debug_loclists:

00000000 <.debug_loclists>:
void st7789_ReadSpi(uint8_t *data, size_t length) {
   0:	00000034 	andeq	r0, r0, r4, lsr r0
   4:	00040005 	andeq	r0, r4, r5
	...
    ST7789_SPI->CR1 &= ~(SPI_CR1_BIDIOE);
  14:	0023d606 	eoreq	sp, r3, r6, lsl #12
    uint8_t dummy = 0;
  18:	17000408 	strne	r0, [r0, -r8, lsl #8]
        while (!(ST7789_SPI->SR & SPI_SR_TXE));
  1c:	17045001 	strne	r5, [r4, -r1]
  20:	03a30618 			; <UNDEFINED> instruction: 0x03a30618
  24:	9f2600a5 	svcls	0x002600a5
  28:	01201804 			; <UNDEFINED> instruction: 0x01201804
        ST7789_SPI->DR = dummy;
  2c:	2c200450 	cfstrscs	mvf0, [r0], #-320	; 0xfffffec0
        while (!(ST7789_SPI->SR & SPI_SR_RXNE));
  30:	a503a306 	strge	sl, [r3, #-774]	; 0xfffffcfa
  34:	009f2600 	addseq	r2, pc, r0, lsl #12
  38:	00000090 	muleq	r0, r0, r0
  3c:	00040005 	andeq	r0, r4, r5
	...
        *data++ = ST7789_SPI->DR;
  48:	00240406 	eoreq	r0, r4, r6, lsl #8
    while (length--) {
  4c:	05000408 	streq	r0, [r0, #-1032]	; 0xfffffbf8
  50:	05045001 	streq	r5, [r4, #-1]
  54:	03a30640 			; <UNDEFINED> instruction: 0x03a30640
    while (ST7789_SPI->SR & SPI_SR_BSY);
  58:	9f3400a5 	svcls	0x003400a5
  5c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
  60:	08002412 	stmdaeq	r0, {r1, r4, sl, sp}
    ST7789_SPI->CR1 |= SPI_CR1_BIDIOE;
  64:	9356062a 	cmpls	r6, #44040192	; 0x2a00000
  68:	04935704 	ldreq	r5, [r3], #1796	; 0x704
  6c:	00000000 	andeq	r0, r0, r0
}
  70:	06000000 	streq	r0, [r0], -r0
  74:	0800241c 	stmdaeq	r0, {r2, r3, r4, sl, sp}
  78:	01030004 	tsteq	r3, r4
  7c:	20030450 	andcs	r0, r3, r0, asr r4
        line = line + PIXEL_BUFFER_LINES;
  80:	20045401 	andcs	r5, r4, r1, lsl #8
  84:	00510128 	subseq	r0, r1, r8, lsr #2
        batch += 1;
  88:	00000001 	andeq	r0, r0, r1
  8c:	00241c06 	eoreq	r1, r4, r6, lsl #24
  90:	03000408 	movweq	r0, #1032	; 0x408
  94:	2606a519 			; <UNDEFINED> instruction: 0x2606a519
  98:	2da80070 	stccs	0, cr0, [r8, #448]!	; 0x1c0
  9c:	26a426a8 	strtcs	r2, [r4], r8, lsr #13
    while (line < ST7789_LCD_HEIGHT) {
  a0:	00000008 	andeq	r0, r0, r8
  a4:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
  a8:	a81c1e41 	ldmdage	ip, {r0, r6, r9, sl, fp, ip}
    st7789_WaitNanosecs(2000000);
  ac:	03049f2d 	movweq	r9, #20269	; 0x4f2d
  b0:	06a51920 	strteq	r1, [r5], r0, lsr #18
}
  b4:	a8007426 	stmdage	r0, {r1, r2, r5, sl, ip, sp, lr}
  b8:	a426a82d 	strtge	sl, [r6], #-2093	; 0xfffff7d3
  bc:	00000826 	andeq	r0, r0, r6, lsr #16
  c0:	00000000 	andeq	r0, r0, r0
  c4:	1c1e41f0 	ldfnes	f4, [lr], {240}	; 0xf0
  c8:	009f2da8 	addseq	r2, pc, r8, lsr #27
  cc:	00000819 	andeq	r0, r0, r9, lsl r8
  d0:	00040005 	andeq	r0, r4, r5
	...
  f4:	00244406 	eoreq	r4, r4, r6, lsl #8
  f8:	3a000408 	bcc	1120 <_Min_Stack_Size+0xd20>
  fc:	04935006 	ldreq	r5, [r3], #6
 100:	04049351 	streq	r9, [r4], #-849	; 0xfffffcaf
 104:	0601a63a 			; <UNDEFINED> instruction: 0x0601a63a
 108:	00a503a3 	adceq	r0, r5, r3, lsr #7
 10c:	a6049f26 	strge	r9, [r4], -r6, lsr #30
 110:	0601b201 	streq	fp, [r1], -r1, lsl #4
 114:	51049350 	tstpl	r4, r0, asr r3
 118:	b2040493 	andlt	r0, r4, #-1828716544	; 0x93000000
 11c:	0601e601 	streq	lr, [r1], -r1, lsl #12
 120:	00a503a3 	adceq	r0, r5, r3, lsr #7
 124:	e6049f26 	str	r9, [r4], -r6, lsr #30
 128:	06028a01 	streq	r8, [r2], -r1, lsl #20
 12c:	51049350 	tstpl	r4, r0, asr r3
 130:	8a040493 	bhi	101384 <_Min_Stack_Size+0x100f84>
 134:	0602f402 	streq	pc, [r2], -r2, lsl #8
 138:	00a503a3 	adceq	r0, r5, r3, lsr #7
 13c:	f4049f26 			; <UNDEFINED> instruction: 0xf4049f26
 140:	06038202 	streq	r8, [r3], -r2, lsl #4
 144:	51049350 	tstpl	r4, r0, asr r3
 148:	82040493 	andhi	r0, r4, #-1828716544	; 0x93000000
 14c:	06038403 	streq	r8, [r3], -r3, lsl #8
 150:	00a503a3 	adceq	r0, r5, r3, lsr #7
 154:	84049f26 	strhi	r9, [r4], #-3878	; 0xfffff0da
 158:	06039a03 	streq	r9, [r3], -r3, lsl #20
 15c:	51049350 	tstpl	r4, r0, asr r3
 160:	9a040493 	bls	1013b4 <_Min_Stack_Size+0x100fb4>
 164:	0603a803 	streq	sl, [r3], -r3, lsl #16
 168:	00a503a3 	adceq	r0, r5, r3, lsr #7
 16c:	a8049f26 	stmdage	r4, {r1, r2, r5, r8, r9, sl, fp, ip, pc}
 170:	0603aa03 	streq	sl, [r3], -r3, lsl #20
 174:	51049350 	tstpl	r4, r0, asr r3
 178:	aa040493 	bge	1013cc <_Min_Stack_Size+0x100fcc>
 17c:	0603ac03 	streq	sl, [r3], -r3, lsl #24
 180:	00a503a3 	adceq	r0, r5, r3, lsr #7
 184:	ac049f26 	stcge	15, cr9, [r4], {38}	; 0x26
 188:	0603dc03 	streq	sp, [r3], -r3, lsl #24
 18c:	51049350 	tstpl	r4, r0, asr r3
 190:	dc040493 	cfstrsle	mvf0, [r4], {147}	; 0x93
 194:	0604fa03 	streq	pc, [r4], -r3, lsl #20
 198:	00a503a3 	adceq	r0, r5, r3, lsr #7
 19c:	00009f26 	andeq	r9, r0, r6, lsr #30
	...
 1b4:	06000000 	streq	r0, [r0], -r0
 1b8:	08002444 	stmdaeq	r0, {r2, r6, sl, sp}
 1bc:	06560004 	ldrbeq	r0, [r6], -r4
 1c0:	53049352 	movwpl	r9, #17234	; 0x4352
 1c4:	56040493 			; <UNDEFINED> instruction: 0x56040493
 1c8:	a30601a2 	movwge	r0, #24994	; 0x61a2
 1cc:	2602a503 	strcs	sl, [r2], -r3, lsl #10
 1d0:	01a2049f 			; <UNDEFINED> instruction: 0x01a2049f
 1d4:	520601a4 	andpl	r0, r6, #164, 2	; 0x29
 1d8:	93530493 	cmpls	r3, #-1828716544	; 0x93000000
 1dc:	01a40404 			; <UNDEFINED> instruction: 0x01a40404
 1e0:	a30601a6 	movwge	r0, #24998	; 0x61a6
 1e4:	2602a503 	strcs	sl, [r2], -r3, lsl #10
 1e8:	01a6049f 			; <UNDEFINED> instruction: 0x01a6049f
 1ec:	520601b2 	andpl	r0, r6, #-2147483604	; 0x8000002c
 1f0:	93530493 	cmpls	r3, #-1828716544	; 0x93000000
 1f4:	01b20404 			; <UNDEFINED> instruction: 0x01b20404
 1f8:	a30601e6 	movwge	r0, #25062	; 0x61e6
 1fc:	2602a503 	strcs	sl, [r2], -r3, lsl #10
 200:	01e6049f 			; <UNDEFINED> instruction: 0x01e6049f
 204:	52060282 	andpl	r0, r6, #536870920	; 0x20000008
 208:	93530493 	cmpls	r3, #-1828716544	; 0x93000000
 20c:	02820404 	addeq	r0, r2, #4, 8	; 0x4000000
 210:	a30602f4 	movwge	r0, #25332	; 0x62f4
 214:	2602a503 	strcs	sl, [r2], -r3, lsl #10
 218:	02f4049f 	rscseq	r0, r4, #-1627389952	; 0x9f000000
 21c:	520603a4 	andpl	r0, r6, #164, 6	; 0x90000002
 220:	93530493 	cmpls	r3, #-1828716544	; 0x93000000
 224:	03a40404 			; <UNDEFINED> instruction: 0x03a40404
 228:	a30603a8 	movwge	r0, #25512	; 0x63a8
 22c:	2602a503 	strcs	sl, [r2], -r3, lsl #10
 230:	03a8049f 			; <UNDEFINED> instruction: 0x03a8049f
 234:	520603ec 	andpl	r0, r6, #236, 6	; 0xb0000003
 238:	93530493 	cmpls	r3, #-1828716544	; 0x93000000
 23c:	03ec0404 	mvneq	r0, #4, 8	; 0x4000000
 240:	a30604fa 	movwge	r0, #25850	; 0x64fa
 244:	2602a503 	strcs	sl, [r2], -r3, lsl #10
 248:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
 24c:	44060000 	strmi	r0, [r6], #-0
 250:	04080024 	streq	r0, [r8], #-36	; 0xffffffdc
 254:	0201a200 	andeq	sl, r1, #0, 4
 258:	a2040091 	andge	r0, r4, #145	; 0x91
 25c:	0204fa01 	andeq	pc, r4, #4096	; 0x1000
 260:	00000091 	muleq	r0, r1, r0
	...
 274:	06000000 	streq	r0, [r0], -r0
 278:	08002450 	stmdaeq	r0, {r4, r6, sl, sp}
 27c:	01220004 			; <UNDEFINED> instruction: 0x01220004
 280:	92220452 	eorls	r0, r2, #1375731712	; 0x52000000
 284:	04550101 	ldrbeq	r0, [r5], #-257	; 0xfffffeff
 288:	019a0196 			; <UNDEFINED> instruction: 0x019a0196
 28c:	9a045501 	bls	115698 <_Min_Stack_Size+0x115298>
 290:	0101a601 	tsteq	r1, r1, lsl #12
 294:	01a60452 			; <UNDEFINED> instruction: 0x01a60452
 298:	550101da 	strpl	r0, [r1, #-474]	; 0xfffffe26
 29c:	e401da04 	str	sp, [r1], #-2564	; 0xfffff5fc
 2a0:	04520101 	ldrbeq	r0, [r2], #-257	; 0xfffffeff
 2a4:	02e801e4 	rsceq	r0, r8, #228, 2	; 0x39
 2a8:	e8045501 	stmda	r4, {r0, r8, sl, ip, lr}
 2ac:	01039802 	tsteq	r3, r2, lsl #16
 2b0:	039c0452 	orrseq	r0, ip, #1375731712	; 0x52000000
 2b4:	520104ce 	andpl	r0, r1, #-838860800	; 0xce000000
 2b8:	ee04e204 	cdp	2, 0, cr14, cr4, cr4, {0}
 2bc:	00520104 	subseq	r0, r2, r4, lsl #2
 2c0:	02000001 	andeq	r0, r0, #1
	...
 2d4:	00245006 	eoreq	r5, r4, r6
 2d8:	18000408 	stmdane	r0, {r3, sl}
 2dc:	18045301 	stmdane	r4, {r0, r8, r9, ip, lr}
 2e0:	0451015a 	ldrbeq	r0, [r1], #-346	; 0xfffffea6
 2e4:	01a60196 			; <UNDEFINED> instruction: 0x01a60196
 2e8:	da045101 	ble	1146f4 <_Min_Stack_Size+0x1142f4>
 2ec:	0101de01 	tsteq	r1, r1, lsl #28
 2f0:	01de0451 	bicseq	r0, lr, r1, asr r4
 2f4:	530101e2 	movwpl	r0, #4578	; 0x11e2
 2f8:	f402e804 	vst2.8	{d14-d15}, [r2], r4
 2fc:	04510102 	ldrbeq	r0, [r1], #-258	; 0xfffffefe
 300:	02f802f4 	rscseq	r0, r8, #244, 4	; 0x4000000f
 304:	f8045301 			; <UNDEFINED> instruction: 0xf8045301
 308:	01039802 	tsteq	r3, r2, lsl #16
 30c:	039c0451 	orrseq	r0, ip, #1358954496	; 0x51000000
 310:	510103ac 	smlatbpl	r1, ip, r3, r0
 314:	ea03ac04 	b	eb32c <_Min_Stack_Size+0xeaf2c>
 318:	00540104 	subseq	r0, r4, r4, lsl #2
 31c:	00000000 	andeq	r0, r0, r0
 320:	00000001 	andeq	r0, r0, r1
	...
 338:	00030000 	andeq	r0, r3, r0
 33c:	00000000 	andeq	r0, r0, r0
 340:	00245206 	eoreq	r5, r4, r6, lsl #4
 344:	26000408 	strcs	r0, [r0], -r8, lsl #8
 348:	26045001 	strcs	r5, [r4], -r1
 34c:	0454015e 	ldrbeq	r0, [r4], #-350	; 0xfffffea2
 350:	018a0186 	orreq	r0, sl, r6, lsl #3
 354:	94045401 	strls	r5, [r4], #-1025	; 0xfffffbff
 358:	01019801 	tsteq	r1, r1, lsl #16
 35c:	01980454 	orrseq	r0, r8, r4, asr r4
 360:	500101a4 	andpl	r0, r1, r4, lsr #3
 364:	d801a404 	stmdale	r1, {r2, sl, sp, pc}
 368:	04540101 	ldrbeq	r0, [r4], #-257	; 0xfffffeff
 36c:	01fc01d8 	ldrsbeq	r0, [ip, #24]!
 370:	fc045001 	stc2	0, cr5, [r4], {1}
 374:	0102e201 	tsteq	r2, r1, lsl #4
 378:	02e60454 	rsceq	r0, r6, #84, 8	; 0x54000000
 37c:	500102f4 	strdpl	r0, [r1], -r4
 380:	f602f404 			; <UNDEFINED> instruction: 0xf602f404
 384:	04540102 	ldrbeq	r0, [r4], #-258	; 0xfffffefe
 388:	038c02f6 	orreq	r0, ip, #1610612751	; 0x6000000f
 38c:	8e045001 	cdphi	0, 0, cr5, cr4, cr1, {0}
 390:	01039603 	tsteq	r3, r3, lsl #12
 394:	039a0454 	orrseq	r0, sl, #84, 8	; 0x54000000
 398:	5001039c 	mulpl	r1, ip, r3
 39c:	9e039c04 	cdpls	12, 0, cr9, cr3, cr4, {0}
 3a0:	04540103 	ldrbeq	r0, [r4], #-259	; 0xfffffefd
 3a4:	03ce039e 	biceq	r0, lr, #2013265922	; 0x78000002
 3a8:	de045001 	cdple	0, 0, cr5, cr4, cr1, {0}
 3ac:	0104cc03 	tsteq	r4, r3, lsl #24
 3b0:	04cc0455 	strbeq	r0, [ip], #1109	; 0x455
 3b4:	520104e0 	andpl	r0, r1, #224, 8	; 0xe0000000
 3b8:	e804e004 	stmda	r4, {r2, sp, lr, pc}
 3bc:	00550104 	subseq	r0, r5, r4, lsl #2
 3c0:	00000001 	andeq	r0, r0, r1
	...
 3d0:	00000001 	andeq	r0, r0, r1
 3d4:	00000000 	andeq	r0, r0, r0
 3d8:	00020000 	andeq	r0, r2, r0
 3dc:	00000002 	andeq	r0, r0, r2
 3e0:	00245206 	eoreq	r5, r4, r6, lsl #4
 3e4:	02000408 	andeq	r0, r0, #8, 8	; 0x8000000
 3e8:	02045101 	andeq	r5, r4, #1073741824	; 0x40000000
 3ec:	045c011a 	ldrbeq	r0, [ip], #-282	; 0xfffffee6
 3f0:	5e01241a 	cfmvdlrpl	mvd1, r2
 3f4:	01362404 	teqeq	r6, r4, lsl #8
 3f8:	0198045c 	orrseq	r0, r8, ip, asr r4
 3fc:	5c0101a2 	stfpls	f0, [r1], {162}	; 0xa2
 400:	b401a204 	strlt	sl, [r1], #-516	; 0xfffffdfc
 404:	04530101 	ldrbeq	r0, [r3], #-257	; 0xfffffeff
 408:	01ee01d8 	ldrdeq	r0, [lr, #24]!
 40c:	ee045c01 	cdp	12, 0, cr5, cr4, cr1, {0}
 410:	0102c001 	tsteq	r2, r1
 414:	02d40451 	sbcseq	r0, r4, #1358954496	; 0x51000000
 418:	530102d6 	movwpl	r0, #4822	; 0x12d6
 41c:	dc02d604 	stcle	6, cr13, [r2], {4}
 420:	04510102 	ldrbeq	r0, [r1], #-258	; 0xfffffefe
 424:	039602e6 	orrseq	r0, r6, #1610612750	; 0x6000000e
 428:	9a045c01 	bls	117434 <_Min_Stack_Size+0x117034>
 42c:	0103a203 	tsteq	r3, r3, lsl #4
 430:	03a2045c 			; <UNDEFINED> instruction: 0x03a2045c
 434:	5e0103b6 	mcrpl	3, 0, r0, cr1, cr6, {5}
 438:	f803de04 			; <UNDEFINED> instruction: 0xf803de04
 43c:	04510103 	ldrbeq	r0, [r1], #-259	; 0xfffffefd
 440:	04da04aa 	ldrbeq	r0, [sl], #1194	; 0x4aa
 444:	e0045101 	and	r5, r4, r1, lsl #2
 448:	0104e404 	tsteq	r4, r4, lsl #8
 44c:	00010051 	andeq	r0, r1, r1, asr r0
 450:	00253408 	eoreq	r3, r5, r8, lsl #8
 454:	53011c08 	movwpl	r1, #7176	; 0x1c08
 458:	01000000 	mrseq	r0, (UNDEF: 0)
 45c:	00000100 	andeq	r0, r0, r0, lsl #2
 460:	00000100 	andeq	r0, r0, r0, lsl #2
 464:	24d80600 	ldrbcs	r0, [r8], #1536	; 0x600
 468:	00040800 	andeq	r0, r4, r0, lsl #16
 46c:	0450010e 	ldrbeq	r0, [r0], #-270	; 0xfffffef2
 470:	01f001e4 	mvnseq	r0, r4, ror #3
 474:	049f3002 	ldreq	r3, [pc], #2	; 47c <_Min_Stack_Size+0x7c>
 478:	028801fe 	addeq	r0, r8, #-2147483585	; 0x8000003f
 47c:	049f3102 	ldreq	r3, [pc], #258	; 484 <_Min_Stack_Size+0x84>
 480:	02940288 	addseq	r0, r4, #136, 4	; 0x80000008
 484:	a4045001 	strge	r5, [r4], #-1
 488:	0103da03 	tsteq	r3, r3, lsl #20
 48c:	03e20450 	mvneq	r0, #80, 8	; 0x50000000
 490:	500103e6 	andpl	r0, r1, r6, ror #7
 494:	01000100 	mrseq	r0, (UNDEF: 16)
 498:	00000000 	andeq	r0, r0, r0
 49c:	02000000 	andeq	r0, r0, #0
 4a0:	02000100 	andeq	r0, r0, #0, 2
 4a4:	06000000 	streq	r0, [r0], -r0
 4a8:	080024d8 	stmdaeq	r0, {r3, r4, r6, r7, sl, sp}
 4ac:	010e0004 	tsteq	lr, r4
 4b0:	1e1c0451 	cfmvrsne	r0, mvf12
 4b4:	049f3102 	ldreq	r3, [pc], #258	; 4bc <_Min_Stack_Size+0xbc>
 4b8:	5101521e 	tstpl	r1, lr, lsl r2
 4bc:	d001ce04 	andle	ip, r1, r4, lsl #28
 4c0:	04510101 	ldrbeq	r0, [r1], #-257	; 0xfffffeff
 4c4:	01dc01d8 	ldrsbeq	r0, [ip, #24]
 4c8:	e4045101 	str	r5, [r4], #-257	; 0xfffffeff
 4cc:	0201f001 	andeq	pc, r1, #1
 4d0:	88049f30 	stmdahi	r4, {r4, r5, r8, r9, sl, fp, ip, pc}
 4d4:	02029402 	andeq	r9, r2, #33554432	; 0x2000000
 4d8:	bc049f30 	stclt	15, cr9, [r4], {48}	; 0x30
 4dc:	0203da03 	andeq	sp, r3, #12288	; 0x3000
 4e0:	e2049f30 	and	r9, r4, #48, 30	; 0xc0
 4e4:	0203e603 	andeq	lr, r3, #3145728	; 0x300000
 4e8:	00009f30 	andeq	r9, r0, r0, lsr pc
 4ec:	00000000 	andeq	r0, r0, r0
 4f0:	25f40600 	ldrbcs	r0, [r4, #1536]!	; 0x600
 4f4:	00040800 	andeq	r0, r4, r0, lsl #16
 4f8:	5c0101ae 	stfpls	f0, [r1], {174}	; 0xae
 4fc:	be01ae04 	cdplt	14, 0, cr10, cr1, cr4, {0}
 500:	20080601 	andcs	r0, r8, r1, lsl #12
 504:	9f1c0077 	svcls	0x001c0077
 508:	c601be04 	strgt	fp, [r1], -r4, lsl #28
 50c:	005c0101 	subseq	r0, ip, r1, lsl #2
 510:	00000001 	andeq	r0, r0, r1
 514:	00000001 	andeq	r0, r0, r1
 518:	00246206 	eoreq	r6, r4, r6, lsl #4
 51c:	80000408 	andhi	r0, r0, r8, lsl #8
 520:	04570101 	ldrbeq	r0, [r7], #-257	; 0xfffffeff
 524:	01880184 	orreq	r0, r8, r4, lsl #3
 528:	8c045701 	stchi	7, cr5, [r4], {1}
 52c:	0102d601 	tsteq	r2, r1, lsl #12
 530:	02ea0457 	rsceq	r0, sl, #1459617792	; 0x57000000
 534:	570104dc 			; <UNDEFINED> instruction: 0x570104dc
 538:	00020000 	andeq	r0, r2, r0
 53c:	247c0600 	ldrbtcs	r0, [ip], #-1536	; 0xfffffa00
 540:	00040800 	andeq	r0, r4, r0, lsl #16
 544:	045e012e 	ldrbeq	r0, [lr], #-302	; 0xfffffed2
 548:	5e016e6a 	cdppl	14, 0, cr6, cr1, cr10, {3}
 54c:	00020000 	andeq	r0, r2, r0
 550:	247e0600 	ldrbtcs	r0, [lr], #-1536	; 0xfffffa00
 554:	00040800 	andeq	r0, r4, r0, lsl #16
 558:	0450012c 	ldrbeq	r0, [r0], #-300	; 0xfffffed4
 55c:	50016c68 	andpl	r6, r1, r8, ror #24
 560:	00000000 	andeq	r0, r0, r0
 564:	06000002 	streq	r0, [r0], -r2
 568:	08002482 	stmdaeq	r0, {r1, r7, sl, sp}
 56c:	01180004 	tsteq	r8, r4
 570:	28180458 	ldmdacs	r8, {r3, r4, r6, sl}
 574:	64045201 	strvs	r5, [r4], #-513	; 0xfffffdff
 578:	00580168 	subseq	r0, r8, r8, ror #2
 57c:	00000001 	andeq	r0, r0, r1
 580:	02000000 	andeq	r0, r0, #0
 584:	7e060000 	cdpvc	0, 0, cr0, cr6, cr0, {0}
 588:	04080024 	streq	r0, [r8], #-36	; 0xffffffdc
 58c:	7c060a00 			; <UNDEFINED> instruction: 0x7c060a00
 590:	1d007e00 	stcne	14, cr7, [r0, #-0]
 594:	1812049f 	ldmdane	r2, {r0, r1, r2, r3, r4, r7, sl}
 598:	18045301 	stmdane	r4, {r0, r8, r9, ip, lr}
 59c:	007c0a1c 	rsbseq	r0, ip, ip, lsl sl
 5a0:	00742440 	rsbseq	r2, r4, r0, asr #8
 5a4:	9f212540 	svcls	0x00212540
 5a8:	012c1c04 			; <UNDEFINED> instruction: 0x012c1c04
 5ac:	6c680453 	cfstrdvs	mvd0, [r8], #-332	; 0xfffffeb4
 5b0:	01005301 	tsteq	r0, r1, lsl #6
 5b4:	24aa0802 	strtcs	r0, [sl], #2050	; 0x802
 5b8:	06000800 	streq	r0, [r0], -r0, lsl #16
 5bc:	007e0073 	rsbseq	r0, lr, r3, ror r0
 5c0:	00009f1d 	andeq	r9, r0, sp, lsl pc
 5c4:	06000002 	streq	r0, [r0], -r2
 5c8:	0800248c 	stmdaeq	r0, {r2, r3, r7, sl, sp}
 5cc:	011e0004 	tsteq	lr, r4
 5d0:	5e5a0459 	mrcpl	4, 2, r0, cr10, cr9, {2}
 5d4:	04005901 	streq	r5, [r0], #-2305	; 0xfffff6ff
 5d8:	255e0800 	ldrbcs	r0, [lr, #-2048]	; 0xfffff800
 5dc:	01520800 	cmpeq	r2, r0, lsl #16
 5e0:	0005005e 	andeq	r0, r5, lr, asr r0
 5e4:	00000000 	andeq	r0, r0, r0
 5e8:	5e060000 	cdppl	0, 0, cr0, cr6, cr0, {0}
 5ec:	04080025 	streq	r0, [r8], #-37	; 0xffffffdb
 5f0:	52012400 	andpl	r2, r1, #0, 8
 5f4:	074a2404 	strbeq	r2, [sl, -r4, lsl #8]
 5f8:	ff0a0075 			; <UNDEFINED> instruction: 0xff0a0075
 5fc:	049f1aff 	ldreq	r1, [pc], #2815	; 604 <_Min_Stack_Size+0x204>
 600:	52014e4a 	andpl	r4, r1, #1184	; 0x4a0
 604:	07524e04 	ldrbeq	r4, [r2, -r4, lsl #28]
 608:	ff0a0075 			; <UNDEFINED> instruction: 0xff0a0075
 60c:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
 610:	00000007 	andeq	r0, r0, r7
 614:	00000000 	andeq	r0, r0, r0
 618:	00255e06 	eoreq	r5, r5, r6, lsl #28
 61c:	08000408 	stmdaeq	r0, {r3, sl}
 620:	08045c01 	stmdaeq	r4, {r0, sl, fp, ip, lr}
 624:	0450014a 	ldrbeq	r0, [r0], #-330	; 0xfffffeb6
 628:	5c014e4a 	stcpl	14, cr4, [r1], {74}	; 0x4a
 62c:	01524e04 	cmpeq	r2, r4, lsl #28
 630:	00000050 	andeq	r0, r0, r0, asr r0
 634:	00000000 	andeq	r0, r0, r0
 638:	00257a06 	eoreq	r7, r5, r6, lsl #20
 63c:	18000408 	stmdane	r0, {r3, sl}
 640:	18045c01 	stmdane	r4, {r0, sl, fp, ip, lr}
 644:	0451012c 	ldrbeq	r0, [r1], #-300	; 0xfffffed4
 648:	5c013632 	stcpl	6, cr3, [r1], {50}	; 0x32
 64c:	00000900 	andeq	r0, r0, r0, lsl #18
 650:	00000000 	andeq	r0, r0, r0
 654:	255e0600 	ldrbcs	r0, [lr, #-1536]	; 0xfffffa00
 658:	00040800 	andeq	r0, r4, r0, lsl #16
 65c:	04530104 	ldrbeq	r0, [r3], #-260	; 0xfffffefc
 660:	700a0804 	andvc	r0, sl, r4, lsl #16
 664:	71244000 			; <UNDEFINED> instruction: 0x71244000
 668:	21254000 			; <UNDEFINED> instruction: 0x21254000
 66c:	2608049f 			; <UNDEFINED> instruction: 0x2608049f
 670:	4a045301 	bmi	11527c <_Min_Stack_Size+0x114e7c>
 674:	0053014e 	subseq	r0, r3, lr, asr #2
 678:	00000001 	andeq	r0, r0, r1
 67c:	00000000 	andeq	r0, r0, r0
 680:	76060000 	strvc	r0, [r6], -r0
 684:	04080025 	streq	r0, [r8], #-37	; 0xffffffdb
 688:	73060e00 	movwvc	r0, #28160	; 0x6e00
 68c:	1d007e00 	stcne	14, cr7, [r0, #-0]
 690:	1812049f 	ldmdane	r2, {r0, r1, r2, r3, r4, r7, sl}
 694:	18045301 	stmdane	r4, {r0, r8, r9, ip, lr}
 698:	00720c1c 	rsbseq	r0, r2, ip, lsl ip
 69c:	00712440 	rsbseq	r2, r1, r0, asr #8
 6a0:	1affff0a 	bne	2d0 <_Min_Heap_Size+0xd0>
 6a4:	1c049f21 	stcne	15, cr9, [r4], {33}	; 0x21
 6a8:	04530132 	ldrbeq	r0, [r3], #-306	; 0xfffffece
 6ac:	53013a36 	movwpl	r3, #6710	; 0x1a36
 6b0:	08000800 	stmdaeq	r0, {fp}
 6b4:	0800255e 	stmdaeq	r0, {r1, r2, r3, r4, r6, r8, sl, sp}
 6b8:	00580152 	subseq	r0, r8, r2, asr r1
 6bc:	00000000 	andeq	r0, r0, r0
 6c0:	0024fa06 	eoreq	pc, r4, r6, lsl #20
 6c4:	30000408 	andcc	r0, r0, r8, lsl #8
 6c8:	b6045e01 	strlt	r5, [r4], -r1, lsl #28
 6cc:	0101ba01 	tsteq	r1, r1, lsl #20
 6d0:	0000005e 	andeq	r0, r0, lr, asr r0
 6d4:	fc060000 	stc2	0, cr0, [r6], {-0}
 6d8:	04080024 	streq	r0, [r8], #-36	; 0xffffffdc
 6dc:	50012e00 	andpl	r2, r1, r0, lsl #28
 6e0:	b801b404 	stmdalt	r1, {r2, sl, ip, sp, pc}
 6e4:	00500101 	subseq	r0, r0, r1, lsl #2
 6e8:	00000000 	andeq	r0, r0, r0
 6ec:	00060000 	andeq	r0, r6, r0
 6f0:	04080025 	streq	r0, [r8], #-37	; 0xffffffdb
 6f4:	5c011800 	stcpl	8, cr1, [r1], {-0}
 6f8:	012a1804 			; <UNDEFINED> instruction: 0x012a1804
 6fc:	01b00452 	asrseq	r0, r2, r4
 700:	5c0101b4 	stfpls	f0, [r1], {180}	; 0xb4
 704:	00000000 	andeq	r0, r0, r0
 708:	06000000 	streq	r0, [r0], -r0
 70c:	080024ae 	stmdaeq	r0, {r1, r2, r3, r5, r7, sl, sp}
 710:	01180004 	tsteq	r8, r4
 714:	3018045c 	andscc	r0, r8, ip, asr r4
 718:	86045301 	strhi	r5, [r4], -r1, lsl #6
 71c:	01028a02 	tsteq	r2, r2, lsl #20
 720:	0002005c 	andeq	r0, r2, ip, asr r0
 724:	00000001 	andeq	r0, r0, r1
 728:	00000000 	andeq	r0, r0, r0
 72c:	0024aa06 	eoreq	sl, r4, r6, lsl #20
 730:	0a000408 	beq	1758 <_Min_Stack_Size+0x1358>
 734:	52045301 	andpl	r5, r4, #67108864	; 0x4000000
 738:	0073065c 	rsbseq	r0, r3, ip, asr r6
 73c:	9f1d007e 	svcls	0x001d007e
 740:	016a6404 	cmneq	sl, r4, lsl #8
 744:	7e6e0453 	mcrvc	4, 3, r0, cr14, cr3, {2}
 748:	86045301 	strhi	r5, [r4], -r1, lsl #6
 74c:	01028a02 	tsteq	r2, r2, lsl #20
 750:	00040053 	andeq	r0, r4, r3, asr r0
 754:	00000000 	andeq	r0, r0, r0
 758:	aa060000 	bge	180760 <_Min_Stack_Size+0x180360>
 75c:	04080024 	streq	r0, [r8], #-36	; 0xffffffdc
 760:	73060a00 	movwvc	r0, #27136	; 0x6a00
 764:	1d007e00 	stcne	14, cr7, [r0, #-0]
 768:	1812049f 	ldmdane	r2, {r0, r1, r2, r3, r4, r7, sl}
 76c:	1c045401 	cfstrsne	mvf5, [r4], {1}
 770:	04540132 	ldrbeq	r0, [r4], #-306	; 0xfffffece
 774:	028e028a 	addeq	r0, lr, #-1610612728	; 0xa0000008
 778:	00005401 	andeq	r5, r0, r1, lsl #8
 77c:	00000000 	andeq	r0, r0, r0
 780:	06000000 	streq	r0, [r0], -r0
 784:	080024b8 	stmdaeq	r0, {r3, r4, r5, r7, sl, sp}
 788:	01200004 			; <UNDEFINED> instruction: 0x01200004
 78c:	72520450 	subsvc	r0, r2, #80, 8	; 0x50000000
 790:	f8045801 			; <UNDEFINED> instruction: 0xf8045801
 794:	0101fc01 	tsteq	r1, r1, lsl #24	; <UNPREDICTABLE>
 798:	01fc0458 	mvnseq	r0, r8, asr r4
 79c:	50010280 	andpl	r0, r1, r0, lsl #5
 7a0:	01010000 	mrseq	r0, (UNDEF: 1)
 7a4:	26820600 	strcs	r0, [r2], r0, lsl #12
 7a8:	00040800 	andeq	r0, r4, r0, lsl #16
 7ac:	04580112 	ldrbeq	r0, [r8], #-274	; 0xfffffeee
 7b0:	53012412 	movwpl	r2, #5138	; 0x1412
 7b4:	01010000 	mrseq	r0, (UNDEF: 1)
 7b8:	26800600 	strcs	r0, [r0], r0, lsl #12
 7bc:	00040800 	andeq	r0, r4, r0, lsl #16
 7c0:	04590114 	ldrbeq	r0, [r9], #-276	; 0xfffffeec
 7c4:	5e013214 	mcrpl	2, 0, r3, cr1, cr4, {0}
 7c8:	00000700 	andeq	r0, r0, r0, lsl #14
 7cc:	06000000 	streq	r0, [r0], -r0
 7d0:	08002630 	stmdaeq	r0, {r4, r5, r9, sl, sp}
 7d4:	01480004 	cmpeq	r8, r4
 7d8:	82480459 	subhi	r0, r8, #1493172224	; 0x59000000
 7dc:	00740501 	rsbseq	r0, r4, r1, lsl #10
 7e0:	049f2540 	ldreq	r2, [pc], #1344	; 7e8 <_Min_Stack_Size+0x3e8>
 7e4:	018a0182 	orreq	r0, sl, r2, lsl #3
 7e8:	08005901 	stmdaeq	r0, {r0, r8, fp, ip, lr}
 7ec:	00000000 	andeq	r0, r0, r0
 7f0:	06000000 	streq	r0, [r0], -r0
 7f4:	08002630 	stmdaeq	r0, {r4, r5, r9, sl, sp}
 7f8:	01260004 			; <UNDEFINED> instruction: 0x01260004
 7fc:	8226045e 	eorhi	r0, r6, #1577058304	; 0x5e000000
 800:	00740701 	rsbseq	r0, r4, r1, lsl #14
 804:	1affff0a 	bne	434 <_Min_Stack_Size+0x34>
 808:	0182049f 			; <UNDEFINED> instruction: 0x0182049f
 80c:	5e010186 	adfpld	f0, f1, f6
 810:	8a018604 	bhi	62028 <_Min_Stack_Size+0x61c28>
 814:	00740701 	rsbseq	r0, r4, r1, lsl #14
 818:	1affff0a 	bne	448 <_Min_Stack_Size+0x48>
 81c:	000a009f 	muleq	sl, pc, r0	; <UNPREDICTABLE>
 820:	00000000 	andeq	r0, r0, r0
 824:	30060000 	andcc	r0, r6, r0
 828:	04080026 	streq	r0, [r8], #-38	; 0xffffffda
 82c:	58010800 	stmdapl	r1, {fp}
 830:	01440804 	cmpeq	r4, r4, lsl #16
 834:	01820450 	orreq	r0, r2, r0, asr r4
 838:	58010186 	stmdapl	r1, {r1, r2, r7, r8}
 83c:	8a018604 	bhi	62054 <_Min_Stack_Size+0x61c54>
 840:	00500101 	subseq	r0, r0, r1, lsl #2
 844:	00000000 	andeq	r0, r0, r0
 848:	4e060000 	cdpmi	0, 0, cr0, cr6, cr0, {0}
 84c:	04080026 	streq	r0, [r8], #-38	; 0xffffffda
 850:	58011600 	stmdapl	r1, {r9, sl, ip}
 854:	01341604 	teqeq	r4, r4, lsl #12
 858:	6c680453 	cfstrdvs	mvd0, [r8], #-332	; 0xfffffeb4
 85c:	0c005801 	stceq	8, cr5, [r0], {1}
 860:	00000000 	andeq	r0, r0, r0
 864:	06000000 	streq	r0, [r0], -r0
 868:	08002630 	stmdaeq	r0, {r4, r5, r9, sl, sp}
 86c:	01040004 	tsteq	r4, r4
 870:	08040453 	stmdaeq	r4, {r0, r1, r4, r6, sl}
 874:	4000700a 	andmi	r7, r0, sl
 878:	40007124 	andmi	r7, r0, r4, lsr #2
 87c:	049f2125 	ldreq	r2, [pc], #293	; 884 <_Min_Stack_Size+0x484>
 880:	53012208 	movwpl	r2, #4616	; 0x1208
 884:	86018204 	strhi	r8, [r1], -r4, lsl #4
 888:	00530101 	subseq	r0, r3, r1, lsl #2
 88c:	00000001 	andeq	r0, r0, r1
 890:	00000000 	andeq	r0, r0, r0
 894:	00264806 	eoreq	r4, r6, r6, lsl #16
 898:	0a000408 	beq	18c0 <_Min_Stack_Size+0x14c0>
 89c:	79007306 	stmdbvc	r0, {r1, r2, r8, r9, ip, sp, lr}
 8a0:	049f1d00 	ldreq	r1, [pc], #3328	; 8a8 <_Min_Stack_Size+0x4a8>
 8a4:	51011812 	tstpl	r1, r2, lsl r8
 8a8:	01561c04 	cmpeq	r6, r4, lsl #24
 8ac:	726e0451 	rsbvc	r0, lr, #1358954496	; 0x51000000
 8b0:	0b005101 	bleq	14cbc <_Min_Stack_Size+0x148bc>
 8b4:	00000000 	andeq	r0, r0, r0
 8b8:	06000000 	streq	r0, [r0], -r0
 8bc:	08002630 	stmdaeq	r0, {r4, r5, r9, sl, sp}
 8c0:	01260004 			; <UNDEFINED> instruction: 0x01260004
 8c4:	5026045a 	eorpl	r0, r6, sl, asr r4
 8c8:	82045e01 	andhi	r5, r4, #1, 28
 8cc:	01018601 	tsteq	r1, r1, lsl #12
 8d0:	0186045a 	orreq	r0, r6, sl, asr r4
 8d4:	5e01018a 	adfpld	f0, f1, #2.0
 8d8:	08000600 	stmdaeq	r0, {r9, sl}
 8dc:	0800267c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9, sl, sp}
 8e0:	93590636 	cmpls	r9, #56623104	; 0x3600000
 8e4:	04935804 	ldreq	r5, [r3], #2052	; 0x804
	...
